/*
SimKube API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ExportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportRequest{}

//+kubebuilder:object:generate=false

// ExportRequest struct for ExportRequest
type ExportRequest struct {
	StartTs int64         `json:"start_ts"`
	EndTs   int64         `json:"end_ts"`
	Filters ExportFilters `json:"filters"`
}

// NewExportRequest instantiates a new ExportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportRequest(startTs int64, endTs int64, filters ExportFilters) *ExportRequest {
	this := ExportRequest{}
	this.StartTs = startTs
	this.EndTs = endTs
	this.Filters = filters
	return &this
}

// NewExportRequestWithDefaults instantiates a new ExportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportRequestWithDefaults() *ExportRequest {
	this := ExportRequest{}
	return &this
}

// GetStartTs returns the StartTs field value
func (o *ExportRequest) GetStartTs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartTs
}

// GetStartTsOk returns a tuple with the StartTs field value
// and a boolean to check if the value has been set.
func (o *ExportRequest) GetStartTsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTs, true
}

// SetStartTs sets field value
func (o *ExportRequest) SetStartTs(v int64) {
	o.StartTs = v
}

// GetEndTs returns the EndTs field value
func (o *ExportRequest) GetEndTs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EndTs
}

// GetEndTsOk returns a tuple with the EndTs field value
// and a boolean to check if the value has been set.
func (o *ExportRequest) GetEndTsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTs, true
}

// SetEndTs sets field value
func (o *ExportRequest) SetEndTs(v int64) {
	o.EndTs = v
}

// GetFilters returns the Filters field value
func (o *ExportRequest) GetFilters() ExportFilters {
	if o == nil {
		var ret ExportFilters
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *ExportRequest) GetFiltersOk() (*ExportFilters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filters, true
}

// SetFilters sets field value
func (o *ExportRequest) SetFilters(v ExportFilters) {
	o.Filters = v
}

func (o ExportRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["start_ts"] = o.StartTs
	toSerialize["end_ts"] = o.EndTs
	toSerialize["filters"] = o.Filters
	return toSerialize, nil
}

//+kubebuilder:object:generate=false

type NullableExportRequest struct {
	value *ExportRequest
	isSet bool
}

func (v NullableExportRequest) Get() *ExportRequest {
	return v.value
}

func (v *NullableExportRequest) Set(val *ExportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportRequest(val *ExportRequest) *NullableExportRequest {
	return &NullableExportRequest{value: val, isSet: true}
}

func (v NullableExportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
