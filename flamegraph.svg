<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1414" onload="init(evt)" viewBox="0 0 1200 1414" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1414" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1397.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1397.00"> </text><svg id="frames" x="10" width="1180" total_samples="61162"><g><title>libsystem_kernel.dylib`close (8 samples, 0.01%)</title><rect x="0.0049%" y="1237" width="0.0131%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="8"/><text x="0.2549%" y="1247.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="0.0899%" y="1173" width="0.0114%" height="15" fill="rgb(217,0,24)" fg:x="55" fg:w="7"/><text x="0.3399%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="0.2044%" y="1125" width="0.0131%" height="15" fill="rgb(221,193,54)" fg:x="125" fg:w="8"/><text x="0.4544%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (36 samples, 0.06%)</title><rect x="0.2649%" y="1077" width="0.0589%" height="15" fill="rgb(248,212,6)" fg:x="162" fg:w="36"/><text x="0.5149%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 0.03%)</title><rect x="0.2943%" y="1061" width="0.0294%" height="15" fill="rgb(208,68,35)" fg:x="180" fg:w="18"/><text x="0.5443%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (15 samples, 0.02%)</title><rect x="0.2992%" y="1045" width="0.0245%" height="15" fill="rgb(232,128,0)" fg:x="183" fg:w="15"/><text x="0.5492%" y="1055.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (46 samples, 0.08%)</title><rect x="0.2534%" y="1093" width="0.0752%" height="15" fill="rgb(207,160,47)" fg:x="155" fg:w="46"/><text x="0.5034%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="0.3597%" y="1061" width="0.0147%" height="15" fill="rgb(228,23,34)" fg:x="220" fg:w="9"/><text x="0.6097%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="0.3613%" y="1045" width="0.0131%" height="15" fill="rgb(218,30,26)" fg:x="221" fg:w="8"/><text x="0.6113%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 0.03%)</title><rect x="0.3450%" y="1077" width="0.0311%" height="15" fill="rgb(220,122,19)" fg:x="211" fg:w="19"/><text x="0.5950%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (34 samples, 0.06%)</title><rect x="0.3286%" y="1093" width="0.0556%" height="15" fill="rgb(250,228,42)" fg:x="201" fg:w="34"/><text x="0.5786%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="0.3842%" y="1093" width="0.0229%" height="15" fill="rgb(240,193,28)" fg:x="235" fg:w="14"/><text x="0.6342%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="0.3924%" y="1077" width="0.0147%" height="15" fill="rgb(216,20,37)" fg:x="240" fg:w="9"/><text x="0.6424%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (112 samples, 0.18%)</title><rect x="0.2256%" y="1109" width="0.1831%" height="15" fill="rgb(206,188,39)" fg:x="138" fg:w="112"/><text x="0.4756%" y="1119.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (114 samples, 0.19%)</title><rect x="0.2256%" y="1125" width="0.1864%" height="15" fill="rgb(217,207,13)" fg:x="138" fg:w="114"/><text x="0.4756%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.02%)</title><rect x="0.4120%" y="1125" width="0.0164%" height="15" fill="rgb(231,73,38)" fg:x="252" fg:w="10"/><text x="0.6620%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="0.4284%" y="1125" width="0.0245%" height="15" fill="rgb(225,20,46)" fg:x="262" fg:w="15"/><text x="0.6784%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.02%)</title><rect x="0.4333%" y="1109" width="0.0196%" height="15" fill="rgb(210,31,41)" fg:x="265" fg:w="12"/><text x="0.6833%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (176 samples, 0.29%)</title><rect x="0.1717%" y="1141" width="0.2878%" height="15" fill="rgb(221,200,47)" fg:x="105" fg:w="176"/><text x="0.4217%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="0.4594%" y="1141" width="0.0131%" height="15" fill="rgb(226,26,5)" fg:x="281" fg:w="8"/><text x="0.7094%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (207 samples, 0.34%)</title><rect x="0.1390%" y="1157" width="0.3384%" height="15" fill="rgb(249,33,26)" fg:x="85" fg:w="207"/><text x="0.3890%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (225 samples, 0.37%)</title><rect x="0.1161%" y="1173" width="0.3679%" height="15" fill="rgb(235,183,28)" fg:x="71" fg:w="225"/><text x="0.3661%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="0.4840%" y="1173" width="0.0229%" height="15" fill="rgb(221,5,38)" fg:x="296" fg:w="14"/><text x="0.7340%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="0.4889%" y="1157" width="0.0180%" height="15" fill="rgb(247,18,42)" fg:x="299" fg:w="11"/><text x="0.7389%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (268 samples, 0.44%)</title><rect x="0.0719%" y="1189" width="0.4382%" height="15" fill="rgb(241,131,45)" fg:x="44" fg:w="268"/><text x="0.3219%" y="1199.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (273 samples, 0.45%)</title><rect x="0.0654%" y="1205" width="0.4464%" height="15" fill="rgb(249,31,29)" fg:x="40" fg:w="273"/><text x="0.3154%" y="1215.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (301 samples, 0.49%)</title><rect x="0.0343%" y="1221" width="0.4921%" height="15" fill="rgb(225,111,53)" fg:x="21" fg:w="301"/><text x="0.2843%" y="1231.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="0.5118%" y="1205" width="0.0147%" height="15" fill="rgb(238,160,17)" fg:x="313" fg:w="9"/><text x="0.7618%" y="1215.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.02%)</title><rect x="0.5575%" y="1173" width="0.0213%" height="15" fill="rgb(214,148,48)" fg:x="341" fg:w="13"/><text x="0.8075%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="0.6229%" y="1157" width="0.0147%" height="15" fill="rgb(232,36,49)" fg:x="381" fg:w="9"/><text x="0.8729%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="0.6377%" y="1157" width="0.0147%" height="15" fill="rgb(209,103,24)" fg:x="390" fg:w="9"/><text x="0.8877%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.02%)</title><rect x="0.6524%" y="1157" width="0.0245%" height="15" fill="rgb(229,88,8)" fg:x="399" fg:w="15"/><text x="0.9024%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="0.6949%" y="1141" width="0.0164%" height="15" fill="rgb(213,181,19)" fg:x="425" fg:w="10"/><text x="0.9449%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="0.7488%" y="1125" width="0.0229%" height="15" fill="rgb(254,191,54)" fg:x="458" fg:w="14"/><text x="0.9988%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.02%)</title><rect x="0.7521%" y="1109" width="0.0196%" height="15" fill="rgb(241,83,37)" fg:x="460" fg:w="12"/><text x="1.0021%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.04%)</title><rect x="0.8404%" y="1109" width="0.0392%" height="15" fill="rgb(233,36,39)" fg:x="514" fg:w="24"/><text x="1.0904%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.03%)</title><rect x="0.8943%" y="1109" width="0.0294%" height="15" fill="rgb(226,3,54)" fg:x="547" fg:w="18"/><text x="1.1443%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="0.9761%" y="1077" width="0.0114%" height="15" fill="rgb(245,192,40)" fg:x="597" fg:w="7"/><text x="1.2261%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="0.9892%" y="1077" width="0.0131%" height="15" fill="rgb(238,167,29)" fg:x="605" fg:w="8"/><text x="1.2392%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="0.9892%" y="1061" width="0.0131%" height="15" fill="rgb(232,182,51)" fg:x="605" fg:w="8"/><text x="1.2392%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="0.9892%" y="1045" width="0.0131%" height="15" fill="rgb(231,60,39)" fg:x="605" fg:w="8"/><text x="1.2392%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="1.0693%" y="1045" width="0.0164%" height="15" fill="rgb(208,69,12)" fg:x="654" fg:w="10"/><text x="1.3193%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="1.0709%" y="1029" width="0.0147%" height="15" fill="rgb(235,93,37)" fg:x="655" fg:w="9"/><text x="1.3209%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="1.0873%" y="1045" width="0.0147%" height="15" fill="rgb(213,116,39)" fg:x="665" fg:w="9"/><text x="1.3373%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.04%)</title><rect x="1.1020%" y="1045" width="0.0441%" height="15" fill="rgb(222,207,29)" fg:x="674" fg:w="27"/><text x="1.3520%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (21 samples, 0.03%)</title><rect x="1.1118%" y="1029" width="0.0343%" height="15" fill="rgb(206,96,30)" fg:x="680" fg:w="21"/><text x="1.3618%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.01%)</title><rect x="1.1314%" y="1013" width="0.0147%" height="15" fill="rgb(218,138,4)" fg:x="692" fg:w="9"/><text x="1.3814%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (75 samples, 0.12%)</title><rect x="1.0268%" y="1061" width="0.1226%" height="15" fill="rgb(250,191,14)" fg:x="628" fg:w="75"/><text x="1.2768%" y="1071.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (90 samples, 0.15%)</title><rect x="1.0121%" y="1077" width="0.1472%" height="15" fill="rgb(239,60,40)" fg:x="619" fg:w="90"/><text x="1.2621%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="1.2263%" y="1045" width="0.0196%" height="15" fill="rgb(206,27,48)" fg:x="750" fg:w="12"/><text x="1.4763%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.02%)</title><rect x="1.2263%" y="1029" width="0.0196%" height="15" fill="rgb(225,35,8)" fg:x="750" fg:w="12"/><text x="1.4763%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (31 samples, 0.05%)</title><rect x="1.1968%" y="1061" width="0.0507%" height="15" fill="rgb(250,213,24)" fg:x="732" fg:w="31"/><text x="1.4468%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (60 samples, 0.10%)</title><rect x="1.1592%" y="1077" width="0.0981%" height="15" fill="rgb(247,123,22)" fg:x="709" fg:w="60"/><text x="1.4092%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (33 samples, 0.05%)</title><rect x="1.2573%" y="1077" width="0.0540%" height="15" fill="rgb(231,138,38)" fg:x="769" fg:w="33"/><text x="1.5073%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (29 samples, 0.05%)</title><rect x="1.2639%" y="1061" width="0.0474%" height="15" fill="rgb(231,145,46)" fg:x="773" fg:w="29"/><text x="1.5139%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (13 samples, 0.02%)</title><rect x="1.2900%" y="1045" width="0.0213%" height="15" fill="rgb(251,118,11)" fg:x="789" fg:w="13"/><text x="1.5400%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (231 samples, 0.38%)</title><rect x="0.9385%" y="1093" width="0.3777%" height="15" fill="rgb(217,147,25)" fg:x="574" fg:w="231"/><text x="1.1885%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (243 samples, 0.40%)</title><rect x="0.9238%" y="1109" width="0.3973%" height="15" fill="rgb(247,81,37)" fg:x="565" fg:w="243"/><text x="1.1738%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="1.3489%" y="1093" width="0.0164%" height="15" fill="rgb(209,12,38)" fg:x="825" fg:w="10"/><text x="1.5989%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (29 samples, 0.05%)</title><rect x="1.3211%" y="1109" width="0.0474%" height="15" fill="rgb(227,1,9)" fg:x="808" fg:w="29"/><text x="1.5711%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (36 samples, 0.06%)</title><rect x="1.3685%" y="1109" width="0.0589%" height="15" fill="rgb(248,47,43)" fg:x="837" fg:w="36"/><text x="1.6185%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (30 samples, 0.05%)</title><rect x="1.3783%" y="1093" width="0.0491%" height="15" fill="rgb(221,10,30)" fg:x="843" fg:w="30"/><text x="1.6283%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (8 samples, 0.01%)</title><rect x="1.4143%" y="1077" width="0.0131%" height="15" fill="rgb(210,229,1)" fg:x="865" fg:w="8"/><text x="1.6643%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (402 samples, 0.66%)</title><rect x="0.7783%" y="1125" width="0.6573%" height="15" fill="rgb(222,148,37)" fg:x="476" fg:w="402"/><text x="1.0283%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (450 samples, 0.74%)</title><rect x="0.7178%" y="1141" width="0.7358%" height="15" fill="rgb(234,67,33)" fg:x="439" fg:w="450"/><text x="0.9678%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="1.4355%" y="1125" width="0.0180%" height="15" fill="rgb(247,98,35)" fg:x="878" fg:w="11"/><text x="1.6855%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="1.4535%" y="1141" width="0.0196%" height="15" fill="rgb(247,138,52)" fg:x="889" fg:w="12"/><text x="1.7035%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="1.4584%" y="1125" width="0.0147%" height="15" fill="rgb(213,79,30)" fg:x="892" fg:w="9"/><text x="1.7084%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (493 samples, 0.81%)</title><rect x="0.6769%" y="1157" width="0.8061%" height="15" fill="rgb(246,177,23)" fg:x="414" fg:w="493"/><text x="0.9269%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.04%)</title><rect x="1.4829%" y="1157" width="0.0441%" height="15" fill="rgb(230,62,27)" fg:x="907" fg:w="27"/><text x="1.7329%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (21 samples, 0.03%)</title><rect x="1.4928%" y="1141" width="0.0343%" height="15" fill="rgb(216,154,8)" fg:x="913" fg:w="21"/><text x="1.7428%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (587 samples, 0.96%)</title><rect x="0.5788%" y="1173" width="0.9597%" height="15" fill="rgb(244,35,45)" fg:x="354" fg:w="587"/><text x="0.8288%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="1.5385%" y="1173" width="0.0147%" height="15" fill="rgb(251,115,12)" fg:x="941" fg:w="9"/><text x="1.7885%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="1.5418%" y="1157" width="0.0114%" height="15" fill="rgb(240,54,50)" fg:x="943" fg:w="7"/><text x="1.7918%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (623 samples, 1.02%)</title><rect x="0.5379%" y="1205" width="1.0186%" height="15" fill="rgb(233,84,52)" fg:x="329" fg:w="623"/><text x="0.7879%" y="1215.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (618 samples, 1.01%)</title><rect x="0.5461%" y="1189" width="1.0104%" height="15" fill="rgb(207,117,47)" fg:x="334" fg:w="618"/><text x="0.7961%" y="1199.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (934 samples, 1.53%)</title><rect x="0.0327%" y="1237" width="1.5271%" height="15" fill="rgb(249,43,39)" fg:x="20" fg:w="934"/><text x="0.2827%" y="1247.50"></text></g><g><title>sk-gen`&lt;sk_gen::Action as core::clone::Clone&gt;::clone (632 samples, 1.03%)</title><rect x="0.5265%" y="1221" width="1.0333%" height="15" fill="rgb(209,38,44)" fg:x="322" fg:w="632"/><text x="0.7765%" y="1231.50"></text></g><g><title>libsystem_kernel.dylib`madvise (19 samples, 0.03%)</title><rect x="1.5663%" y="1157" width="0.0311%" height="15" fill="rgb(236,212,23)" fg:x="958" fg:w="19"/><text x="1.8163%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (23 samples, 0.04%)</title><rect x="1.5614%" y="1205" width="0.0376%" height="15" fill="rgb(242,79,21)" fg:x="955" fg:w="23"/><text x="1.8114%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`free_small (23 samples, 0.04%)</title><rect x="1.5614%" y="1189" width="0.0376%" height="15" fill="rgb(211,96,35)" fg:x="955" fg:w="23"/><text x="1.8114%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (20 samples, 0.03%)</title><rect x="1.5663%" y="1173" width="0.0327%" height="15" fill="rgb(253,215,40)" fg:x="958" fg:w="20"/><text x="1.8163%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="1.6105%" y="1173" width="0.0147%" height="15" fill="rgb(211,81,21)" fg:x="985" fg:w="9"/><text x="1.8605%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (58 samples, 0.09%)</title><rect x="1.5990%" y="1205" width="0.0948%" height="15" fill="rgb(208,190,38)" fg:x="978" fg:w="58"/><text x="1.8490%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (52 samples, 0.09%)</title><rect x="1.6088%" y="1189" width="0.0850%" height="15" fill="rgb(235,213,38)" fg:x="984" fg:w="52"/><text x="1.8588%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (41 samples, 0.07%)</title><rect x="1.6268%" y="1173" width="0.0670%" height="15" fill="rgb(237,122,38)" fg:x="995" fg:w="41"/><text x="1.8768%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (39 samples, 0.06%)</title><rect x="1.6301%" y="1157" width="0.0638%" height="15" fill="rgb(244,218,35)" fg:x="997" fg:w="39"/><text x="1.8801%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (35 samples, 0.06%)</title><rect x="1.6366%" y="1141" width="0.0572%" height="15" fill="rgb(240,68,47)" fg:x="1001" fg:w="35"/><text x="1.8866%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (26 samples, 0.04%)</title><rect x="1.6514%" y="1125" width="0.0425%" height="15" fill="rgb(210,16,53)" fg:x="1010" fg:w="26"/><text x="1.9014%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`madvise (26 samples, 0.04%)</title><rect x="1.6514%" y="1109" width="0.0425%" height="15" fill="rgb(235,124,12)" fg:x="1010" fg:w="26"/><text x="1.9014%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (9 samples, 0.01%)</title><rect x="1.7004%" y="1189" width="0.0147%" height="15" fill="rgb(224,169,11)" fg:x="1040" fg:w="9"/><text x="1.9504%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (9 samples, 0.01%)</title><rect x="1.7004%" y="1173" width="0.0147%" height="15" fill="rgb(250,166,2)" fg:x="1040" fg:w="9"/><text x="1.9504%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`madvise (9 samples, 0.01%)</title><rect x="1.7004%" y="1157" width="0.0147%" height="15" fill="rgb(242,216,29)" fg:x="1040" fg:w="9"/><text x="1.9504%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (25 samples, 0.04%)</title><rect x="1.7266%" y="1141" width="0.0409%" height="15" fill="rgb(230,116,27)" fg:x="1056" fg:w="25"/><text x="1.9766%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (25 samples, 0.04%)</title><rect x="1.7266%" y="1125" width="0.0409%" height="15" fill="rgb(228,99,48)" fg:x="1056" fg:w="25"/><text x="1.9766%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (51 samples, 0.08%)</title><rect x="1.7200%" y="1189" width="0.0834%" height="15" fill="rgb(253,11,6)" fg:x="1052" fg:w="51"/><text x="1.9700%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (49 samples, 0.08%)</title><rect x="1.7233%" y="1173" width="0.0801%" height="15" fill="rgb(247,143,39)" fg:x="1054" fg:w="49"/><text x="1.9733%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.08%)</title><rect x="1.7249%" y="1157" width="0.0785%" height="15" fill="rgb(236,97,10)" fg:x="1055" fg:w="48"/><text x="1.9749%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (22 samples, 0.04%)</title><rect x="1.7674%" y="1141" width="0.0360%" height="15" fill="rgb(233,208,19)" fg:x="1081" fg:w="22"/><text x="2.0174%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`madvise (21 samples, 0.03%)</title><rect x="1.7691%" y="1125" width="0.0343%" height="15" fill="rgb(216,164,2)" fg:x="1082" fg:w="21"/><text x="2.0191%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="1.8099%" y="1173" width="0.0164%" height="15" fill="rgb(220,129,5)" fg:x="1107" fg:w="10"/><text x="2.0599%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (27 samples, 0.04%)</title><rect x="1.8361%" y="1157" width="0.0441%" height="15" fill="rgb(242,17,10)" fg:x="1123" fg:w="27"/><text x="2.0861%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.04%)</title><rect x="1.8394%" y="1141" width="0.0409%" height="15" fill="rgb(242,107,0)" fg:x="1125" fg:w="25"/><text x="2.0894%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.04%)</title><rect x="1.8394%" y="1125" width="0.0409%" height="15" fill="rgb(251,28,31)" fg:x="1125" fg:w="25"/><text x="2.0894%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (20 samples, 0.03%)</title><rect x="1.8476%" y="1109" width="0.0327%" height="15" fill="rgb(233,223,10)" fg:x="1130" fg:w="20"/><text x="2.0976%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`madvise (20 samples, 0.03%)</title><rect x="1.8476%" y="1093" width="0.0327%" height="15" fill="rgb(215,21,27)" fg:x="1130" fg:w="20"/><text x="2.0976%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.02%)</title><rect x="1.8868%" y="1141" width="0.0196%" height="15" fill="rgb(232,23,21)" fg:x="1154" fg:w="12"/><text x="2.1368%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="1.9179%" y="1125" width="0.0180%" height="15" fill="rgb(244,5,23)" fg:x="1173" fg:w="11"/><text x="2.1679%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="1.9195%" y="1109" width="0.0164%" height="15" fill="rgb(226,81,46)" fg:x="1174" fg:w="10"/><text x="2.1695%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (8 samples, 0.01%)</title><rect x="1.9228%" y="1093" width="0.0131%" height="15" fill="rgb(247,70,30)" fg:x="1176" fg:w="8"/><text x="2.1728%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.01%)</title><rect x="1.9228%" y="1077" width="0.0131%" height="15" fill="rgb(212,68,19)" fg:x="1176" fg:w="8"/><text x="2.1728%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="1.9162%" y="1141" width="0.0213%" height="15" fill="rgb(240,187,13)" fg:x="1172" fg:w="13"/><text x="2.1662%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="1.9653%" y="1093" width="0.0180%" height="15" fill="rgb(223,113,26)" fg:x="1202" fg:w="11"/><text x="2.2153%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="1.9718%" y="1077" width="0.0114%" height="15" fill="rgb(206,192,2)" fg:x="1206" fg:w="7"/><text x="2.2218%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="1.9718%" y="1061" width="0.0114%" height="15" fill="rgb(241,108,4)" fg:x="1206" fg:w="7"/><text x="2.2218%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="1.9898%" y="1061" width="0.0131%" height="15" fill="rgb(247,173,49)" fg:x="1217" fg:w="8"/><text x="2.2398%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="1.9914%" y="1045" width="0.0114%" height="15" fill="rgb(224,114,35)" fg:x="1218" fg:w="7"/><text x="2.2414%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="1.9898%" y="1077" width="0.0147%" height="15" fill="rgb(245,159,27)" fg:x="1217" fg:w="9"/><text x="2.2398%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.02%)</title><rect x="2.0143%" y="1045" width="0.0180%" height="15" fill="rgb(245,172,44)" fg:x="1232" fg:w="11"/><text x="2.2643%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (28 samples, 0.05%)</title><rect x="2.0045%" y="1077" width="0.0458%" height="15" fill="rgb(236,23,11)" fg:x="1226" fg:w="28"/><text x="2.2545%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (22 samples, 0.04%)</title><rect x="2.0143%" y="1061" width="0.0360%" height="15" fill="rgb(205,117,38)" fg:x="1232" fg:w="22"/><text x="2.2643%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="2.0356%" y="1045" width="0.0147%" height="15" fill="rgb(237,72,25)" fg:x="1245" fg:w="9"/><text x="2.2856%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="2.0388%" y="1029" width="0.0114%" height="15" fill="rgb(244,70,9)" fg:x="1247" fg:w="7"/><text x="2.2888%" y="1039.50"></text></g><g><title>sk-gen`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (305 samples, 0.50%)</title><rect x="1.5598%" y="1237" width="0.4987%" height="15" fill="rgb(217,125,39)" fg:x="954" fg:w="305"/><text x="1.8098%" y="1247.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (305 samples, 0.50%)</title><rect x="1.5598%" y="1221" width="0.4987%" height="15" fill="rgb(235,36,10)" fg:x="954" fg:w="305"/><text x="1.8098%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (221 samples, 0.36%)</title><rect x="1.6971%" y="1205" width="0.3613%" height="15" fill="rgb(251,123,47)" fg:x="1038" fg:w="221"/><text x="1.9471%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (156 samples, 0.26%)</title><rect x="1.8034%" y="1189" width="0.2551%" height="15" fill="rgb(221,13,13)" fg:x="1103" fg:w="156"/><text x="2.0534%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (142 samples, 0.23%)</title><rect x="1.8263%" y="1173" width="0.2322%" height="15" fill="rgb(238,131,9)" fg:x="1117" fg:w="142"/><text x="2.0763%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (109 samples, 0.18%)</title><rect x="1.8803%" y="1157" width="0.1782%" height="15" fill="rgb(211,50,8)" fg:x="1150" fg:w="109"/><text x="2.1303%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (74 samples, 0.12%)</title><rect x="1.9375%" y="1141" width="0.1210%" height="15" fill="rgb(245,182,24)" fg:x="1185" fg:w="74"/><text x="2.1875%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (69 samples, 0.11%)</title><rect x="1.9457%" y="1125" width="0.1128%" height="15" fill="rgb(242,14,37)" fg:x="1190" fg:w="69"/><text x="2.1957%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (64 samples, 0.10%)</title><rect x="1.9538%" y="1109" width="0.1046%" height="15" fill="rgb(246,228,12)" fg:x="1195" fg:w="64"/><text x="2.2038%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (46 samples, 0.08%)</title><rect x="1.9833%" y="1093" width="0.0752%" height="15" fill="rgb(213,55,15)" fg:x="1213" fg:w="46"/><text x="2.2333%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::fmt::Write&gt;::write_char (11 samples, 0.02%)</title><rect x="2.0732%" y="1173" width="0.0180%" height="15" fill="rgb(209,9,3)" fg:x="1268" fg:w="11"/><text x="2.3232%" y="1183.50"></text></g><g><title>sk-gen`&lt;petgraph::dot::Escaper&lt;W&gt; as core::fmt::Write&gt;::write_str (14 samples, 0.02%)</title><rect x="2.0912%" y="1173" width="0.0229%" height="15" fill="rgb(230,59,30)" fg:x="1279" fg:w="14"/><text x="2.3412%" y="1183.50"></text></g><g><title>sk-gen`alloc::fmt::format::format_inner (39 samples, 0.06%)</title><rect x="2.0601%" y="1237" width="0.0638%" height="15" fill="rgb(209,121,21)" fg:x="1260" fg:w="39"/><text x="2.3101%" y="1247.50"></text></g><g><title>sk-gen`core::fmt::write (39 samples, 0.06%)</title><rect x="2.0601%" y="1221" width="0.0638%" height="15" fill="rgb(220,109,13)" fg:x="1260" fg:w="39"/><text x="2.3101%" y="1231.50"></text></g><g><title>sk-gen`&lt;petgraph::dot::Dot&lt;G&gt; as core::fmt::Display&gt;::fmt (39 samples, 0.06%)</title><rect x="2.0601%" y="1205" width="0.0638%" height="15" fill="rgb(232,18,1)" fg:x="1260" fg:w="39"/><text x="2.3101%" y="1215.50"></text></g><g><title>sk-gen`core::fmt::write (36 samples, 0.06%)</title><rect x="2.0650%" y="1189" width="0.0589%" height="15" fill="rgb(215,41,42)" fg:x="1263" fg:w="36"/><text x="2.3150%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="2.1402%" y="1205" width="0.0164%" height="15" fill="rgb(224,123,36)" fg:x="1309" fg:w="10"/><text x="2.3902%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.01%)</title><rect x="2.1451%" y="1189" width="0.0114%" height="15" fill="rgb(240,125,3)" fg:x="1312" fg:w="7"/><text x="2.3951%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="2.1582%" y="1189" width="0.0114%" height="15" fill="rgb(205,98,50)" fg:x="1320" fg:w="7"/><text x="2.4082%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.03%)</title><rect x="2.1827%" y="1173" width="0.0278%" height="15" fill="rgb(205,185,37)" fg:x="1335" fg:w="17"/><text x="2.4327%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="2.2236%" y="1157" width="0.0229%" height="15" fill="rgb(238,207,15)" fg:x="1360" fg:w="14"/><text x="2.4736%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="2.2252%" y="1141" width="0.0213%" height="15" fill="rgb(213,199,42)" fg:x="1361" fg:w="13"/><text x="2.4752%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (56 samples, 0.09%)</title><rect x="2.1566%" y="1205" width="0.0916%" height="15" fill="rgb(235,201,11)" fg:x="1319" fg:w="56"/><text x="2.4066%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (45 samples, 0.07%)</title><rect x="2.1746%" y="1189" width="0.0736%" height="15" fill="rgb(207,46,11)" fg:x="1330" fg:w="45"/><text x="2.4246%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="2.2171%" y="1173" width="0.0311%" height="15" fill="rgb(241,35,35)" fg:x="1356" fg:w="19"/><text x="2.4671%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.03%)</title><rect x="2.2596%" y="1173" width="0.0294%" height="15" fill="rgb(243,32,47)" fg:x="1382" fg:w="18"/><text x="2.5096%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.03%)</title><rect x="2.2596%" y="1157" width="0.0294%" height="15" fill="rgb(247,202,23)" fg:x="1382" fg:w="18"/><text x="2.5096%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (13 samples, 0.02%)</title><rect x="2.2677%" y="1141" width="0.0213%" height="15" fill="rgb(219,102,11)" fg:x="1387" fg:w="13"/><text x="2.5177%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`madvise (13 samples, 0.02%)</title><rect x="2.2677%" y="1125" width="0.0213%" height="15" fill="rgb(243,110,44)" fg:x="1387" fg:w="13"/><text x="2.5177%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (20 samples, 0.03%)</title><rect x="2.2596%" y="1189" width="0.0327%" height="15" fill="rgb(222,74,54)" fg:x="1382" fg:w="20"/><text x="2.5096%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="2.3054%" y="1173" width="0.0131%" height="15" fill="rgb(216,99,12)" fg:x="1410" fg:w="8"/><text x="2.5554%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.03%)</title><rect x="2.3544%" y="1141" width="0.0262%" height="15" fill="rgb(226,22,26)" fg:x="1440" fg:w="16"/><text x="2.6044%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.02%)</title><rect x="2.3577%" y="1125" width="0.0229%" height="15" fill="rgb(217,163,10)" fg:x="1442" fg:w="14"/><text x="2.6077%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (25 samples, 0.04%)</title><rect x="2.3413%" y="1157" width="0.0409%" height="15" fill="rgb(213,25,53)" fg:x="1432" fg:w="25"/><text x="2.5913%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.03%)</title><rect x="2.3904%" y="1141" width="0.0327%" height="15" fill="rgb(252,105,26)" fg:x="1462" fg:w="20"/><text x="2.6404%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.03%)</title><rect x="2.4460%" y="1125" width="0.0278%" height="15" fill="rgb(220,39,43)" fg:x="1496" fg:w="17"/><text x="2.6960%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.02%)</title><rect x="2.4509%" y="1109" width="0.0229%" height="15" fill="rgb(229,68,48)" fg:x="1499" fg:w="14"/><text x="2.7009%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (31 samples, 0.05%)</title><rect x="2.4296%" y="1141" width="0.0507%" height="15" fill="rgb(252,8,32)" fg:x="1486" fg:w="31"/><text x="2.6796%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.01%)</title><rect x="2.4966%" y="1109" width="0.0114%" height="15" fill="rgb(223,20,43)" fg:x="1527" fg:w="7"/><text x="2.7466%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="2.5163%" y="1093" width="0.0245%" height="15" fill="rgb(229,81,49)" fg:x="1539" fg:w="15"/><text x="2.7663%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (14 samples, 0.02%)</title><rect x="2.5506%" y="1093" width="0.0229%" height="15" fill="rgb(236,28,36)" fg:x="1560" fg:w="14"/><text x="2.8006%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.02%)</title><rect x="2.5522%" y="1077" width="0.0213%" height="15" fill="rgb(249,185,26)" fg:x="1561" fg:w="13"/><text x="2.8022%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="2.5571%" y="1061" width="0.0164%" height="15" fill="rgb(249,174,33)" fg:x="1564" fg:w="10"/><text x="2.8071%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="2.5817%" y="1061" width="0.0114%" height="15" fill="rgb(233,201,37)" fg:x="1579" fg:w="7"/><text x="2.8317%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="2.5817%" y="1045" width="0.0114%" height="15" fill="rgb(221,78,26)" fg:x="1579" fg:w="7"/><text x="2.8317%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="2.5768%" y="1077" width="0.0213%" height="15" fill="rgb(250,127,30)" fg:x="1576" fg:w="13"/><text x="2.8268%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="2.6144%" y="1045" width="0.0213%" height="15" fill="rgb(230,49,44)" fg:x="1599" fg:w="13"/><text x="2.8644%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="2.6552%" y="1029" width="0.0196%" height="15" fill="rgb(229,67,23)" fg:x="1624" fg:w="12"/><text x="2.9052%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="2.6585%" y="1013" width="0.0164%" height="15" fill="rgb(249,83,47)" fg:x="1626" fg:w="10"/><text x="2.9085%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (22 samples, 0.04%)</title><rect x="2.6438%" y="1045" width="0.0360%" height="15" fill="rgb(215,43,3)" fg:x="1617" fg:w="22"/><text x="2.8938%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (44 samples, 0.07%)</title><rect x="2.6111%" y="1061" width="0.0719%" height="15" fill="rgb(238,154,13)" fg:x="1597" fg:w="44"/><text x="2.8611%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (53 samples, 0.09%)</title><rect x="2.5980%" y="1077" width="0.0867%" height="15" fill="rgb(219,56,2)" fg:x="1589" fg:w="53"/><text x="2.8480%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="2.6928%" y="1045" width="0.0131%" height="15" fill="rgb(233,0,4)" fg:x="1647" fg:w="8"/><text x="2.9428%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (352 samples, 0.58%)</title><rect x="2.1320%" y="1221" width="0.5755%" height="15" fill="rgb(235,30,7)" fg:x="1304" fg:w="352"/><text x="2.3820%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (281 samples, 0.46%)</title><rect x="2.2481%" y="1205" width="0.4594%" height="15" fill="rgb(250,79,13)" fg:x="1375" fg:w="281"/><text x="2.4981%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (254 samples, 0.42%)</title><rect x="2.2923%" y="1189" width="0.4153%" height="15" fill="rgb(211,146,34)" fg:x="1402" fg:w="254"/><text x="2.5423%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (238 samples, 0.39%)</title><rect x="2.3184%" y="1173" width="0.3891%" height="15" fill="rgb(228,22,38)" fg:x="1418" fg:w="238"/><text x="2.5684%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (199 samples, 0.33%)</title><rect x="2.3822%" y="1157" width="0.3254%" height="15" fill="rgb(235,168,5)" fg:x="1457" fg:w="199"/><text x="2.6322%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (139 samples, 0.23%)</title><rect x="2.4803%" y="1141" width="0.2273%" height="15" fill="rgb(221,155,16)" fg:x="1517" fg:w="139"/><text x="2.7303%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (129 samples, 0.21%)</title><rect x="2.4966%" y="1125" width="0.2109%" height="15" fill="rgb(215,215,53)" fg:x="1527" fg:w="129"/><text x="2.7466%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (118 samples, 0.19%)</title><rect x="2.5146%" y="1109" width="0.1929%" height="15" fill="rgb(223,4,10)" fg:x="1538" fg:w="118"/><text x="2.7646%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (82 samples, 0.13%)</title><rect x="2.5735%" y="1093" width="0.1341%" height="15" fill="rgb(234,103,6)" fg:x="1574" fg:w="82"/><text x="2.8235%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 0.02%)</title><rect x="2.6863%" y="1077" width="0.0213%" height="15" fill="rgb(227,97,0)" fg:x="1643" fg:w="13"/><text x="2.9363%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="2.6879%" y="1061" width="0.0196%" height="15" fill="rgb(234,150,53)" fg:x="1644" fg:w="12"/><text x="2.9379%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_small (18 samples, 0.03%)</title><rect x="2.7157%" y="1189" width="0.0294%" height="15" fill="rgb(228,201,54)" fg:x="1661" fg:w="18"/><text x="2.9657%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (10 samples, 0.02%)</title><rect x="2.7288%" y="1173" width="0.0164%" height="15" fill="rgb(222,22,37)" fg:x="1669" fg:w="10"/><text x="2.9788%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`madvise (10 samples, 0.02%)</title><rect x="2.7288%" y="1157" width="0.0164%" height="15" fill="rgb(237,53,32)" fg:x="1669" fg:w="10"/><text x="2.9788%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (47 samples, 0.08%)</title><rect x="2.7452%" y="1189" width="0.0768%" height="15" fill="rgb(233,25,53)" fg:x="1679" fg:w="47"/><text x="2.9952%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (47 samples, 0.08%)</title><rect x="2.7452%" y="1173" width="0.0768%" height="15" fill="rgb(210,40,34)" fg:x="1679" fg:w="47"/><text x="2.9952%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (34 samples, 0.06%)</title><rect x="2.7664%" y="1157" width="0.0556%" height="15" fill="rgb(241,220,44)" fg:x="1692" fg:w="34"/><text x="3.0164%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`madvise (34 samples, 0.06%)</title><rect x="2.7664%" y="1141" width="0.0556%" height="15" fill="rgb(235,28,35)" fg:x="1692" fg:w="34"/><text x="3.0164%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="2.8465%" y="1173" width="0.0114%" height="15" fill="rgb(210,56,17)" fg:x="1741" fg:w="7"/><text x="3.0965%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (23 samples, 0.04%)</title><rect x="2.8809%" y="1141" width="0.0376%" height="15" fill="rgb(224,130,29)" fg:x="1762" fg:w="23"/><text x="3.1309%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="2.9692%" y="1093" width="0.0131%" height="15" fill="rgb(235,212,8)" fg:x="1816" fg:w="8"/><text x="3.2192%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (38 samples, 0.06%)</title><rect x="2.9381%" y="1125" width="0.0621%" height="15" fill="rgb(223,33,50)" fg:x="1797" fg:w="38"/><text x="3.1881%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (36 samples, 0.06%)</title><rect x="2.9414%" y="1109" width="0.0589%" height="15" fill="rgb(219,149,13)" fg:x="1799" fg:w="36"/><text x="3.1914%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (9 samples, 0.01%)</title><rect x="2.9855%" y="1093" width="0.0147%" height="15" fill="rgb(250,156,29)" fg:x="1826" fg:w="9"/><text x="3.2355%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.01%)</title><rect x="2.9871%" y="1077" width="0.0131%" height="15" fill="rgb(216,193,19)" fg:x="1827" fg:w="8"/><text x="3.2371%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.13%)</title><rect x="2.8727%" y="1157" width="0.1308%" height="15" fill="rgb(216,135,14)" fg:x="1757" fg:w="80"/><text x="3.1227%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (49 samples, 0.08%)</title><rect x="2.9234%" y="1141" width="0.0801%" height="15" fill="rgb(241,47,5)" fg:x="1788" fg:w="49"/><text x="3.1734%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;kube_core::dynamic::DynamicObject&gt; (110 samples, 0.18%)</title><rect x="2.8318%" y="1189" width="0.1799%" height="15" fill="rgb(233,42,35)" fg:x="1732" fg:w="110"/><text x="3.0818%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (92 samples, 0.15%)</title><rect x="2.8613%" y="1173" width="0.1504%" height="15" fill="rgb(231,13,6)" fg:x="1750" fg:w="92"/><text x="3.1113%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.03%)</title><rect x="3.0395%" y="1125" width="0.0327%" height="15" fill="rgb(207,181,40)" fg:x="1859" fg:w="20"/><text x="3.2895%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (7 samples, 0.01%)</title><rect x="3.0607%" y="1109" width="0.0114%" height="15" fill="rgb(254,173,49)" fg:x="1872" fg:w="7"/><text x="3.3107%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`madvise (7 samples, 0.01%)</title><rect x="3.0607%" y="1093" width="0.0114%" height="15" fill="rgb(221,1,38)" fg:x="1872" fg:w="7"/><text x="3.3107%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (27 samples, 0.04%)</title><rect x="3.0297%" y="1157" width="0.0441%" height="15" fill="rgb(206,124,46)" fg:x="1853" fg:w="27"/><text x="3.2797%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.04%)</title><rect x="3.0362%" y="1141" width="0.0376%" height="15" fill="rgb(249,21,11)" fg:x="1857" fg:w="23"/><text x="3.2862%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="3.0885%" y="1141" width="0.0131%" height="15" fill="rgb(222,201,40)" fg:x="1889" fg:w="8"/><text x="3.3385%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="3.1196%" y="1125" width="0.0180%" height="15" fill="rgb(235,61,29)" fg:x="1908" fg:w="11"/><text x="3.3696%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="3.1196%" y="1109" width="0.0180%" height="15" fill="rgb(219,207,3)" fg:x="1908" fg:w="11"/><text x="3.3696%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 samples, 0.03%)</title><rect x="3.1098%" y="1141" width="0.0294%" height="15" fill="rgb(222,56,46)" fg:x="1902" fg:w="18"/><text x="3.3598%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (9 samples, 0.01%)</title><rect x="3.1425%" y="1125" width="0.0147%" height="15" fill="rgb(239,76,54)" fg:x="1922" fg:w="9"/><text x="3.3925%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="3.1572%" y="1125" width="0.0147%" height="15" fill="rgb(231,124,27)" fg:x="1931" fg:w="9"/><text x="3.4072%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (7 samples, 0.01%)</title><rect x="3.2406%" y="1077" width="0.0114%" height="15" fill="rgb(249,195,6)" fg:x="1982" fg:w="7"/><text x="3.4906%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="3.2520%" y="1077" width="0.0131%" height="15" fill="rgb(237,174,47)" fg:x="1989" fg:w="8"/><text x="3.5020%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (14 samples, 0.02%)</title><rect x="3.2716%" y="1077" width="0.0229%" height="15" fill="rgb(206,201,31)" fg:x="2001" fg:w="14"/><text x="3.5216%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.02%)</title><rect x="3.2765%" y="1061" width="0.0180%" height="15" fill="rgb(231,57,52)" fg:x="2004" fg:w="11"/><text x="3.5265%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (63 samples, 0.10%)</title><rect x="3.2030%" y="1109" width="0.1030%" height="15" fill="rgb(248,177,22)" fg:x="1959" fg:w="63"/><text x="3.4530%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (59 samples, 0.10%)</title><rect x="3.2095%" y="1093" width="0.0965%" height="15" fill="rgb(215,211,37)" fg:x="1963" fg:w="59"/><text x="3.4595%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (7 samples, 0.01%)</title><rect x="3.2945%" y="1077" width="0.0114%" height="15" fill="rgb(241,128,51)" fg:x="2015" fg:w="7"/><text x="3.5445%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`madvise (7 samples, 0.01%)</title><rect x="3.2945%" y="1061" width="0.0114%" height="15" fill="rgb(227,165,31)" fg:x="2015" fg:w="7"/><text x="3.5445%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (84 samples, 0.14%)</title><rect x="3.1817%" y="1125" width="0.1373%" height="15" fill="rgb(228,167,24)" fg:x="1946" fg:w="84"/><text x="3.4317%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.01%)</title><rect x="3.3060%" y="1109" width="0.0131%" height="15" fill="rgb(228,143,12)" fg:x="2022" fg:w="8"/><text x="3.5560%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (42 samples, 0.07%)</title><rect x="3.3289%" y="1109" width="0.0687%" height="15" fill="rgb(249,149,8)" fg:x="2036" fg:w="42"/><text x="3.5789%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (8 samples, 0.01%)</title><rect x="3.4024%" y="1109" width="0.0131%" height="15" fill="rgb(243,35,44)" fg:x="2081" fg:w="8"/><text x="3.6524%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (8 samples, 0.01%)</title><rect x="3.4024%" y="1093" width="0.0131%" height="15" fill="rgb(246,89,9)" fg:x="2081" fg:w="8"/><text x="3.6524%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`madvise (7 samples, 0.01%)</title><rect x="3.4041%" y="1077" width="0.0114%" height="15" fill="rgb(233,213,13)" fg:x="2082" fg:w="7"/><text x="3.6541%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (8 samples, 0.01%)</title><rect x="3.5071%" y="1061" width="0.0131%" height="15" fill="rgb(233,141,41)" fg:x="2145" fg:w="8"/><text x="3.7571%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (13 samples, 0.02%)</title><rect x="3.5251%" y="1061" width="0.0213%" height="15" fill="rgb(239,167,4)" fg:x="2156" fg:w="13"/><text x="3.7751%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`madvise (9 samples, 0.01%)</title><rect x="3.5316%" y="1045" width="0.0147%" height="15" fill="rgb(209,217,16)" fg:x="2160" fg:w="9"/><text x="3.7816%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (59 samples, 0.10%)</title><rect x="3.4597%" y="1093" width="0.0965%" height="15" fill="rgb(219,88,35)" fg:x="2116" fg:w="59"/><text x="3.7097%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (50 samples, 0.08%)</title><rect x="3.4744%" y="1077" width="0.0818%" height="15" fill="rgb(220,193,23)" fg:x="2125" fg:w="50"/><text x="3.7244%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (84 samples, 0.14%)</title><rect x="3.4319%" y="1109" width="0.1373%" height="15" fill="rgb(230,90,52)" fg:x="2099" fg:w="84"/><text x="3.6819%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.02%)</title><rect x="3.5774%" y="1093" width="0.0196%" height="15" fill="rgb(252,106,19)" fg:x="2188" fg:w="12"/><text x="3.8274%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="3.6068%" y="1077" width="0.0180%" height="15" fill="rgb(206,74,20)" fg:x="2206" fg:w="11"/><text x="3.8568%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="3.6084%" y="1061" width="0.0164%" height="15" fill="rgb(230,138,44)" fg:x="2207" fg:w="10"/><text x="3.8584%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="3.6003%" y="1093" width="0.0311%" height="15" fill="rgb(235,182,43)" fg:x="2202" fg:w="19"/><text x="3.8503%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (11 samples, 0.02%)</title><rect x="3.6313%" y="1077" width="0.0180%" height="15" fill="rgb(242,16,51)" fg:x="2221" fg:w="11"/><text x="3.8813%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (23 samples, 0.04%)</title><rect x="3.6738%" y="1061" width="0.0376%" height="15" fill="rgb(248,9,4)" fg:x="2247" fg:w="23"/><text x="3.9238%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (8 samples, 0.01%)</title><rect x="3.7115%" y="1061" width="0.0131%" height="15" fill="rgb(210,31,22)" fg:x="2270" fg:w="8"/><text x="3.9615%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (8 samples, 0.01%)</title><rect x="3.7115%" y="1045" width="0.0131%" height="15" fill="rgb(239,54,39)" fg:x="2270" fg:w="8"/><text x="3.9615%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.01%)</title><rect x="3.7115%" y="1029" width="0.0131%" height="15" fill="rgb(230,99,41)" fg:x="2270" fg:w="8"/><text x="3.9615%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.01%)</title><rect x="3.7245%" y="1061" width="0.0114%" height="15" fill="rgb(253,106,12)" fg:x="2278" fg:w="7"/><text x="3.9745%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.05%)</title><rect x="3.7507%" y="1045" width="0.0523%" height="15" fill="rgb(213,46,41)" fg:x="2294" fg:w="32"/><text x="4.0007%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (26 samples, 0.04%)</title><rect x="3.7605%" y="1029" width="0.0425%" height="15" fill="rgb(215,133,35)" fg:x="2300" fg:w="26"/><text x="4.0105%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (43 samples, 0.07%)</title><rect x="3.7392%" y="1061" width="0.0703%" height="15" fill="rgb(213,28,5)" fg:x="2287" fg:w="43"/><text x="3.9892%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="3.8243%" y="1045" width="0.0147%" height="15" fill="rgb(215,77,49)" fg:x="2339" fg:w="9"/><text x="4.0743%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (9 samples, 0.01%)</title><rect x="3.8913%" y="997" width="0.0147%" height="15" fill="rgb(248,100,22)" fg:x="2380" fg:w="9"/><text x="4.1413%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.05%)</title><rect x="3.8602%" y="1029" width="0.0474%" height="15" fill="rgb(208,67,9)" fg:x="2361" fg:w="29"/><text x="4.1102%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (26 samples, 0.04%)</title><rect x="3.8651%" y="1013" width="0.0425%" height="15" fill="rgb(219,133,21)" fg:x="2364" fg:w="26"/><text x="4.1151%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (44 samples, 0.07%)</title><rect x="3.8439%" y="1045" width="0.0719%" height="15" fill="rgb(246,46,29)" fg:x="2351" fg:w="44"/><text x="4.0939%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="3.9338%" y="1029" width="0.0114%" height="15" fill="rgb(246,185,52)" fg:x="2406" fg:w="7"/><text x="4.1838%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.04%)</title><rect x="3.9583%" y="1013" width="0.0360%" height="15" fill="rgb(252,136,11)" fg:x="2421" fg:w="22"/><text x="4.2083%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (9 samples, 0.01%)</title><rect x="4.0532%" y="965" width="0.0147%" height="15" fill="rgb(219,138,53)" fg:x="2479" fg:w="9"/><text x="4.3032%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (7 samples, 0.01%)</title><rect x="4.0744%" y="965" width="0.0114%" height="15" fill="rgb(211,51,23)" fg:x="2492" fg:w="7"/><text x="4.3244%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (45 samples, 0.07%)</title><rect x="4.0221%" y="981" width="0.0736%" height="15" fill="rgb(247,221,28)" fg:x="2460" fg:w="45"/><text x="4.2721%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (50 samples, 0.08%)</title><rect x="4.0156%" y="997" width="0.0818%" height="15" fill="rgb(251,222,45)" fg:x="2456" fg:w="50"/><text x="4.2656%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (60 samples, 0.10%)</title><rect x="4.0025%" y="1013" width="0.0981%" height="15" fill="rgb(217,162,53)" fg:x="2448" fg:w="60"/><text x="4.2525%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (114 samples, 0.19%)</title><rect x="3.9158%" y="1045" width="0.1864%" height="15" fill="rgb(229,93,14)" fg:x="2395" fg:w="114"/><text x="4.1658%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (89 samples, 0.15%)</title><rect x="3.9567%" y="1029" width="0.1455%" height="15" fill="rgb(209,67,49)" fg:x="2420" fg:w="89"/><text x="4.2067%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="4.1039%" y="1029" width="0.0147%" height="15" fill="rgb(213,87,29)" fg:x="2510" fg:w="9"/><text x="4.3539%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (7 samples, 0.01%)</title><rect x="4.1431%" y="981" width="0.0114%" height="15" fill="rgb(205,151,52)" fg:x="2534" fg:w="7"/><text x="4.3931%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.03%)</title><rect x="4.1300%" y="1013" width="0.0262%" height="15" fill="rgb(253,215,39)" fg:x="2526" fg:w="16"/><text x="4.3800%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="4.1349%" y="997" width="0.0213%" height="15" fill="rgb(221,220,41)" fg:x="2529" fg:w="13"/><text x="4.3849%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (322 samples, 0.53%)</title><rect x="3.6313%" y="1093" width="0.5265%" height="15" fill="rgb(218,133,21)" fg:x="2221" fg:w="322"/><text x="3.8813%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (303 samples, 0.50%)</title><rect x="3.6624%" y="1077" width="0.4954%" height="15" fill="rgb(221,193,43)" fg:x="2240" fg:w="303"/><text x="3.9124%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (211 samples, 0.34%)</title><rect x="3.8128%" y="1061" width="0.3450%" height="15" fill="rgb(240,128,52)" fg:x="2332" fg:w="211"/><text x="4.0628%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (34 samples, 0.06%)</title><rect x="4.1022%" y="1045" width="0.0556%" height="15" fill="rgb(253,114,12)" fg:x="2509" fg:w="34"/><text x="4.3522%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (24 samples, 0.04%)</title><rect x="4.1186%" y="1029" width="0.0392%" height="15" fill="rgb(215,223,47)" fg:x="2519" fg:w="24"/><text x="4.3686%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;sk_gen::Node,sk_gen::Edge&gt;&gt; (1,241 samples, 2.03%)</title><rect x="2.1304%" y="1237" width="2.0290%" height="15" fill="rgb(248,225,23)" fg:x="1303" fg:w="1241"/><text x="2.3804%" y="1247.50">s..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (888 samples, 1.45%)</title><rect x="2.7076%" y="1221" width="1.4519%" height="15" fill="rgb(250,108,0)" fg:x="1656" fg:w="888"/><text x="2.9576%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;sk_store::TraceEvent&gt; (885 samples, 1.45%)</title><rect x="2.7125%" y="1205" width="1.4470%" height="15" fill="rgb(228,208,7)" fg:x="1659" fg:w="885"/><text x="2.9625%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (702 samples, 1.15%)</title><rect x="3.0117%" y="1189" width="1.1478%" height="15" fill="rgb(244,45,10)" fg:x="1842" fg:w="702"/><text x="3.2617%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (701 samples, 1.15%)</title><rect x="3.0133%" y="1173" width="1.1461%" height="15" fill="rgb(207,125,25)" fg:x="1843" fg:w="701"/><text x="3.2633%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (664 samples, 1.09%)</title><rect x="3.0738%" y="1157" width="1.0856%" height="15" fill="rgb(210,195,18)" fg:x="1880" fg:w="664"/><text x="3.3238%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (624 samples, 1.02%)</title><rect x="3.1392%" y="1141" width="1.0202%" height="15" fill="rgb(249,80,12)" fg:x="1920" fg:w="624"/><text x="3.3892%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (514 samples, 0.84%)</title><rect x="3.3191%" y="1125" width="0.8404%" height="15" fill="rgb(221,65,9)" fg:x="2030" fg:w="514"/><text x="3.5691%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (361 samples, 0.59%)</title><rect x="3.5692%" y="1109" width="0.5902%" height="15" fill="rgb(235,49,36)" fg:x="2183" fg:w="361"/><text x="3.8192%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (7 samples, 0.01%)</title><rect x="4.1644%" y="1221" width="0.0114%" height="15" fill="rgb(225,32,20)" fg:x="2547" fg:w="7"/><text x="4.4144%" y="1231.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (7 samples, 0.01%)</title><rect x="4.1644%" y="1205" width="0.0114%" height="15" fill="rgb(215,141,46)" fg:x="2547" fg:w="7"/><text x="4.4144%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`madvise (7 samples, 0.01%)</title><rect x="4.1644%" y="1189" width="0.0114%" height="15" fill="rgb(250,160,47)" fg:x="2547" fg:w="7"/><text x="4.4144%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="4.1921%" y="1173" width="0.0147%" height="15" fill="rgb(216,222,40)" fg:x="2564" fg:w="9"/><text x="4.4421%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (23 samples, 0.04%)</title><rect x="4.1856%" y="1205" width="0.0376%" height="15" fill="rgb(234,217,39)" fg:x="2560" fg:w="23"/><text x="4.4356%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (20 samples, 0.03%)</title><rect x="4.1905%" y="1189" width="0.0327%" height="15" fill="rgb(207,178,40)" fg:x="2563" fg:w="20"/><text x="4.4405%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="4.2101%" y="1173" width="0.0131%" height="15" fill="rgb(221,136,13)" fg:x="2575" fg:w="8"/><text x="4.4601%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="4.2379%" y="1173" width="0.0114%" height="15" fill="rgb(249,199,10)" fg:x="2592" fg:w="7"/><text x="4.4879%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="4.2625%" y="1157" width="0.0147%" height="15" fill="rgb(249,222,13)" fg:x="2607" fg:w="9"/><text x="4.5125%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="4.2821%" y="1141" width="0.0114%" height="15" fill="rgb(244,185,38)" fg:x="2619" fg:w="7"/><text x="4.5321%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="4.3001%" y="1141" width="0.0131%" height="15" fill="rgb(236,202,9)" fg:x="2630" fg:w="8"/><text x="4.5501%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="4.3491%" y="1077" width="0.0114%" height="15" fill="rgb(250,229,37)" fg:x="2660" fg:w="7"/><text x="4.5991%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="4.3491%" y="1061" width="0.0114%" height="15" fill="rgb(206,174,23)" fg:x="2660" fg:w="7"/><text x="4.5991%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="4.3458%" y="1093" width="0.0180%" height="15" fill="rgb(211,33,43)" fg:x="2658" fg:w="11"/><text x="4.5958%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="4.3720%" y="1077" width="0.0114%" height="15" fill="rgb(245,58,50)" fg:x="2674" fg:w="7"/><text x="4.6220%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="4.4129%" y="1029" width="0.0164%" height="15" fill="rgb(244,68,36)" fg:x="2699" fg:w="10"/><text x="4.6629%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="4.4178%" y="1013" width="0.0114%" height="15" fill="rgb(232,229,15)" fg:x="2702" fg:w="7"/><text x="4.6678%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (30 samples, 0.05%)</title><rect x="4.3834%" y="1077" width="0.0491%" height="15" fill="rgb(254,30,23)" fg:x="2681" fg:w="30"/><text x="4.6334%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (22 samples, 0.04%)</title><rect x="4.3965%" y="1061" width="0.0360%" height="15" fill="rgb(235,160,14)" fg:x="2689" fg:w="22"/><text x="4.6465%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="4.4112%" y="1045" width="0.0213%" height="15" fill="rgb(212,155,44)" fg:x="2698" fg:w="13"/><text x="4.6612%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.26%)</title><rect x="4.1758%" y="1221" width="0.2616%" height="15" fill="rgb(226,2,50)" fg:x="2554" fg:w="160"/><text x="4.4258%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (131 samples, 0.21%)</title><rect x="4.2232%" y="1205" width="0.2142%" height="15" fill="rgb(234,177,6)" fg:x="2583" fg:w="131"/><text x="4.4732%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (125 samples, 0.20%)</title><rect x="4.2330%" y="1189" width="0.2044%" height="15" fill="rgb(217,24,9)" fg:x="2589" fg:w="125"/><text x="4.4830%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (115 samples, 0.19%)</title><rect x="4.2494%" y="1173" width="0.1880%" height="15" fill="rgb(220,13,46)" fg:x="2599" fg:w="115"/><text x="4.4994%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (98 samples, 0.16%)</title><rect x="4.2772%" y="1157" width="0.1602%" height="15" fill="rgb(239,221,27)" fg:x="2616" fg:w="98"/><text x="4.5272%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (76 samples, 0.12%)</title><rect x="4.3131%" y="1141" width="0.1243%" height="15" fill="rgb(222,198,25)" fg:x="2638" fg:w="76"/><text x="4.5631%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (68 samples, 0.11%)</title><rect x="4.3262%" y="1125" width="0.1112%" height="15" fill="rgb(211,99,13)" fg:x="2646" fg:w="68"/><text x="4.5762%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (65 samples, 0.11%)</title><rect x="4.3311%" y="1109" width="0.1063%" height="15" fill="rgb(232,111,31)" fg:x="2649" fg:w="65"/><text x="4.5811%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (44 samples, 0.07%)</title><rect x="4.3655%" y="1093" width="0.0719%" height="15" fill="rgb(245,82,37)" fg:x="2670" fg:w="44"/><text x="4.6155%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (7 samples, 0.01%)</title><rect x="4.4488%" y="1173" width="0.0114%" height="15" fill="rgb(227,149,46)" fg:x="2721" fg:w="7"/><text x="4.6988%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (7 samples, 0.01%)</title><rect x="4.4488%" y="1157" width="0.0114%" height="15" fill="rgb(218,36,50)" fg:x="2721" fg:w="7"/><text x="4.6988%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.04%)</title><rect x="4.4423%" y="1205" width="0.0376%" height="15" fill="rgb(226,80,48)" fg:x="2717" fg:w="23"/><text x="4.6923%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.03%)</title><rect x="4.4456%" y="1189" width="0.0343%" height="15" fill="rgb(238,224,15)" fg:x="2719" fg:w="21"/><text x="4.6956%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (11 samples, 0.02%)</title><rect x="4.4619%" y="1173" width="0.0180%" height="15" fill="rgb(241,136,10)" fg:x="2729" fg:w="11"/><text x="4.7119%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.02%)</title><rect x="4.4619%" y="1157" width="0.0180%" height="15" fill="rgb(208,32,45)" fg:x="2729" fg:w="11"/><text x="4.7119%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (14 samples, 0.02%)</title><rect x="4.4848%" y="1141" width="0.0229%" height="15" fill="rgb(207,135,9)" fg:x="2743" fg:w="14"/><text x="4.7348%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (14 samples, 0.02%)</title><rect x="4.4848%" y="1125" width="0.0229%" height="15" fill="rgb(206,86,44)" fg:x="2743" fg:w="14"/><text x="4.7348%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (43 samples, 0.07%)</title><rect x="4.4832%" y="1173" width="0.0703%" height="15" fill="rgb(245,177,15)" fg:x="2742" fg:w="43"/><text x="4.7332%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.07%)</title><rect x="4.4832%" y="1157" width="0.0703%" height="15" fill="rgb(206,64,50)" fg:x="2742" fg:w="43"/><text x="4.7332%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (22 samples, 0.04%)</title><rect x="4.5175%" y="1141" width="0.0360%" height="15" fill="rgb(234,36,40)" fg:x="2763" fg:w="22"/><text x="4.7675%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`madvise (22 samples, 0.04%)</title><rect x="4.5175%" y="1125" width="0.0360%" height="15" fill="rgb(213,64,8)" fg:x="2763" fg:w="22"/><text x="4.7675%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;kube_core::dynamic::DynamicObject&gt; (25 samples, 0.04%)</title><rect x="4.5535%" y="1173" width="0.0409%" height="15" fill="rgb(210,75,36)" fg:x="2785" fg:w="25"/><text x="4.8035%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (22 samples, 0.04%)</title><rect x="4.5584%" y="1157" width="0.0360%" height="15" fill="rgb(229,88,21)" fg:x="2788" fg:w="22"/><text x="4.8084%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="4.5682%" y="1141" width="0.0262%" height="15" fill="rgb(252,204,47)" fg:x="2794" fg:w="16"/><text x="4.8182%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="4.5747%" y="1125" width="0.0196%" height="15" fill="rgb(208,77,27)" fg:x="2798" fg:w="12"/><text x="4.8247%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="4.5796%" y="1109" width="0.0147%" height="15" fill="rgb(221,76,26)" fg:x="2801" fg:w="9"/><text x="4.8296%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="4.6058%" y="1141" width="0.0196%" height="15" fill="rgb(225,139,18)" fg:x="2817" fg:w="12"/><text x="4.8558%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (11 samples, 0.02%)</title><rect x="4.6647%" y="1109" width="0.0180%" height="15" fill="rgb(230,137,11)" fg:x="2853" fg:w="11"/><text x="4.9147%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (24 samples, 0.04%)</title><rect x="4.6925%" y="1109" width="0.0392%" height="15" fill="rgb(212,28,1)" fg:x="2870" fg:w="24"/><text x="4.9425%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.03%)</title><rect x="4.6990%" y="1093" width="0.0327%" height="15" fill="rgb(248,164,17)" fg:x="2874" fg:w="20"/><text x="4.9490%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.03%)</title><rect x="4.7023%" y="1077" width="0.0294%" height="15" fill="rgb(222,171,42)" fg:x="2876" fg:w="18"/><text x="4.9523%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="4.7464%" y="1093" width="0.0213%" height="15" fill="rgb(243,84,45)" fg:x="2903" fg:w="13"/><text x="4.9964%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (10 samples, 0.02%)</title><rect x="4.7693%" y="1093" width="0.0164%" height="15" fill="rgb(252,49,23)" fg:x="2917" fg:w="10"/><text x="5.0193%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (10 samples, 0.02%)</title><rect x="4.7693%" y="1077" width="0.0164%" height="15" fill="rgb(215,19,7)" fg:x="2917" fg:w="10"/><text x="5.0193%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`madvise (10 samples, 0.02%)</title><rect x="4.7693%" y="1061" width="0.0164%" height="15" fill="rgb(238,81,41)" fg:x="2917" fg:w="10"/><text x="5.0193%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.04%)</title><rect x="4.8053%" y="1077" width="0.0392%" height="15" fill="rgb(210,199,37)" fg:x="2939" fg:w="24"/><text x="5.0553%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.04%)</title><rect x="4.8085%" y="1061" width="0.0360%" height="15" fill="rgb(244,192,49)" fg:x="2941" fg:w="22"/><text x="5.0585%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (7 samples, 0.01%)</title><rect x="4.8331%" y="1045" width="0.0114%" height="15" fill="rgb(226,211,11)" fg:x="2956" fg:w="7"/><text x="5.0831%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`madvise (7 samples, 0.01%)</title><rect x="4.8331%" y="1029" width="0.0114%" height="15" fill="rgb(236,162,54)" fg:x="2956" fg:w="7"/><text x="5.0831%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (42 samples, 0.07%)</title><rect x="4.7857%" y="1093" width="0.0687%" height="15" fill="rgb(220,229,9)" fg:x="2927" fg:w="42"/><text x="5.0357%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="4.8641%" y="1077" width="0.0164%" height="15" fill="rgb(250,87,22)" fg:x="2975" fg:w="10"/><text x="5.1141%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.03%)</title><rect x="4.9017%" y="1045" width="0.0262%" height="15" fill="rgb(239,43,17)" fg:x="2998" fg:w="16"/><text x="5.1517%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (10 samples, 0.02%)</title><rect x="4.9295%" y="1045" width="0.0164%" height="15" fill="rgb(231,177,25)" fg:x="3015" fg:w="10"/><text x="5.1795%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (10 samples, 0.02%)</title><rect x="4.9295%" y="1029" width="0.0164%" height="15" fill="rgb(219,179,1)" fg:x="3015" fg:w="10"/><text x="5.1795%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`madvise (10 samples, 0.02%)</title><rect x="4.9295%" y="1013" width="0.0164%" height="15" fill="rgb(238,219,53)" fg:x="3015" fg:w="10"/><text x="5.1795%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="4.9541%" y="1029" width="0.0229%" height="15" fill="rgb(232,167,36)" fg:x="3030" fg:w="14"/><text x="5.2041%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="4.9590%" y="1013" width="0.0180%" height="15" fill="rgb(244,19,51)" fg:x="3033" fg:w="11"/><text x="5.2090%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (22 samples, 0.04%)</title><rect x="4.9475%" y="1045" width="0.0360%" height="15" fill="rgb(224,6,22)" fg:x="3026" fg:w="22"/><text x="5.1975%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="4.9998%" y="1013" width="0.0147%" height="15" fill="rgb(224,145,5)" fg:x="3058" fg:w="9"/><text x="5.2498%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.01%)</title><rect x="4.9998%" y="997" width="0.0147%" height="15" fill="rgb(234,130,49)" fg:x="3058" fg:w="9"/><text x="5.2498%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="4.9998%" y="1029" width="0.0180%" height="15" fill="rgb(254,6,2)" fg:x="3058" fg:w="11"/><text x="5.2498%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="5.0440%" y="997" width="0.0213%" height="15" fill="rgb(208,96,46)" fg:x="3085" fg:w="13"/><text x="5.2940%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.03%)</title><rect x="5.0767%" y="981" width="0.0294%" height="15" fill="rgb(239,3,39)" fg:x="3105" fg:w="18"/><text x="5.3267%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.02%)</title><rect x="5.0832%" y="965" width="0.0229%" height="15" fill="rgb(233,210,1)" fg:x="3109" fg:w="14"/><text x="5.3332%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (21 samples, 0.03%)</title><rect x="5.0750%" y="997" width="0.0343%" height="15" fill="rgb(244,137,37)" fg:x="3104" fg:w="21"/><text x="5.3250%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (57 samples, 0.09%)</title><rect x="5.0178%" y="1029" width="0.0932%" height="15" fill="rgb(240,136,2)" fg:x="3069" fg:w="57"/><text x="5.2678%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (44 samples, 0.07%)</title><rect x="5.0391%" y="1013" width="0.0719%" height="15" fill="rgb(239,18,37)" fg:x="3082" fg:w="44"/><text x="5.2891%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="5.1159%" y="1013" width="0.0147%" height="15" fill="rgb(218,185,22)" fg:x="3129" fg:w="9"/><text x="5.3659%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="5.1176%" y="997" width="0.0131%" height="15" fill="rgb(225,218,4)" fg:x="3130" fg:w="8"/><text x="5.3676%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (400 samples, 0.65%)</title><rect x="4.4799%" y="1205" width="0.6540%" height="15" fill="rgb(230,182,32)" fg:x="2740" fg:w="400"/><text x="4.7299%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;sk_store::TraceEvent&gt; (399 samples, 0.65%)</title><rect x="4.4815%" y="1189" width="0.6524%" height="15" fill="rgb(242,56,43)" fg:x="2741" fg:w="399"/><text x="4.7315%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (330 samples, 0.54%)</title><rect x="4.5944%" y="1173" width="0.5396%" height="15" fill="rgb(233,99,24)" fg:x="2810" fg:w="330"/><text x="4.8444%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (329 samples, 0.54%)</title><rect x="4.5960%" y="1157" width="0.5379%" height="15" fill="rgb(234,209,42)" fg:x="2811" fg:w="329"/><text x="4.8460%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (311 samples, 0.51%)</title><rect x="4.6254%" y="1141" width="0.5085%" height="15" fill="rgb(227,7,12)" fg:x="2829" fg:w="311"/><text x="4.8754%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (291 samples, 0.48%)</title><rect x="4.6581%" y="1125" width="0.4758%" height="15" fill="rgb(245,203,43)" fg:x="2849" fg:w="291"/><text x="4.9081%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (246 samples, 0.40%)</title><rect x="4.7317%" y="1109" width="0.4022%" height="15" fill="rgb(238,205,33)" fg:x="2894" fg:w="246"/><text x="4.9817%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (171 samples, 0.28%)</title><rect x="4.8543%" y="1093" width="0.2796%" height="15" fill="rgb(231,56,7)" fg:x="2969" fg:w="171"/><text x="5.1043%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (155 samples, 0.25%)</title><rect x="4.8805%" y="1077" width="0.2534%" height="15" fill="rgb(244,186,29)" fg:x="2985" fg:w="155"/><text x="5.1305%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (149 samples, 0.24%)</title><rect x="4.8903%" y="1061" width="0.2436%" height="15" fill="rgb(234,111,31)" fg:x="2991" fg:w="149"/><text x="5.1403%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (92 samples, 0.15%)</title><rect x="4.9835%" y="1045" width="0.1504%" height="15" fill="rgb(241,149,10)" fg:x="3048" fg:w="92"/><text x="5.2335%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 0.02%)</title><rect x="5.1127%" y="1029" width="0.0213%" height="15" fill="rgb(249,206,44)" fg:x="3127" fg:w="13"/><text x="5.3627%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="5.1388%" y="1189" width="0.0180%" height="15" fill="rgb(251,153,30)" fg:x="3143" fg:w="11"/><text x="5.3888%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="5.1388%" y="1173" width="0.0180%" height="15" fill="rgb(239,152,38)" fg:x="3143" fg:w="11"/><text x="5.3888%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="5.1911%" y="1141" width="0.0245%" height="15" fill="rgb(249,139,47)" fg:x="3175" fg:w="15"/><text x="5.4411%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.08%)</title><rect x="5.1781%" y="1157" width="0.0834%" height="15" fill="rgb(244,64,35)" fg:x="3167" fg:w="51"/><text x="5.4281%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (23 samples, 0.04%)</title><rect x="5.2238%" y="1141" width="0.0376%" height="15" fill="rgb(216,46,15)" fg:x="3195" fg:w="23"/><text x="5.4738%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.03%)</title><rect x="5.2353%" y="1125" width="0.0262%" height="15" fill="rgb(250,74,19)" fg:x="3202" fg:w="16"/><text x="5.4853%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.02%)</title><rect x="5.2385%" y="1109" width="0.0229%" height="15" fill="rgb(249,42,33)" fg:x="3204" fg:w="14"/><text x="5.4885%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;kube_core::dynamic::DynamicObject&gt; (68 samples, 0.11%)</title><rect x="5.1568%" y="1189" width="0.1112%" height="15" fill="rgb(242,149,17)" fg:x="3154" fg:w="68"/><text x="5.4068%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (64 samples, 0.10%)</title><rect x="5.1633%" y="1173" width="0.1046%" height="15" fill="rgb(244,29,21)" fg:x="3158" fg:w="64"/><text x="5.4133%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="5.2892%" y="1141" width="0.0114%" height="15" fill="rgb(220,130,37)" fg:x="3235" fg:w="7"/><text x="5.5392%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="5.2892%" y="1125" width="0.0114%" height="15" fill="rgb(211,67,2)" fg:x="3235" fg:w="7"/><text x="5.5392%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="5.2827%" y="1157" width="0.0213%" height="15" fill="rgb(235,68,52)" fg:x="3231" fg:w="13"/><text x="5.5327%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.02%)</title><rect x="5.3170%" y="1141" width="0.0164%" height="15" fill="rgb(246,142,3)" fg:x="3252" fg:w="10"/><text x="5.5670%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="5.3448%" y="1125" width="0.0164%" height="15" fill="rgb(241,25,7)" fg:x="3269" fg:w="10"/><text x="5.5948%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="5.3481%" y="1109" width="0.0131%" height="15" fill="rgb(242,119,39)" fg:x="3271" fg:w="8"/><text x="5.5981%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (16 samples, 0.03%)</title><rect x="5.3366%" y="1141" width="0.0262%" height="15" fill="rgb(241,98,45)" fg:x="3264" fg:w="16"/><text x="5.5866%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.04%)</title><rect x="5.3922%" y="1109" width="0.0376%" height="15" fill="rgb(254,28,30)" fg:x="3298" fg:w="23"/><text x="5.6422%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.02%)</title><rect x="5.4053%" y="1093" width="0.0245%" height="15" fill="rgb(241,142,54)" fg:x="3306" fg:w="15"/><text x="5.6553%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (29 samples, 0.05%)</title><rect x="5.3873%" y="1125" width="0.0474%" height="15" fill="rgb(222,85,15)" fg:x="3295" fg:w="29"/><text x="5.6373%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26 samples, 0.04%)</title><rect x="5.4397%" y="1109" width="0.0425%" height="15" fill="rgb(210,85,47)" fg:x="3327" fg:w="26"/><text x="5.6897%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (8 samples, 0.01%)</title><rect x="5.4822%" y="1109" width="0.0131%" height="15" fill="rgb(224,206,25)" fg:x="3353" fg:w="8"/><text x="5.7322%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (8 samples, 0.01%)</title><rect x="5.4822%" y="1093" width="0.0131%" height="15" fill="rgb(243,201,19)" fg:x="3353" fg:w="8"/><text x="5.7322%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.01%)</title><rect x="5.4822%" y="1077" width="0.0131%" height="15" fill="rgb(236,59,4)" fg:x="3353" fg:w="8"/><text x="5.7322%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="5.5132%" y="1093" width="0.0229%" height="15" fill="rgb(254,179,45)" fg:x="3372" fg:w="14"/><text x="5.7632%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="5.5230%" y="1077" width="0.0131%" height="15" fill="rgb(226,14,10)" fg:x="3378" fg:w="8"/><text x="5.7730%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (26 samples, 0.04%)</title><rect x="5.5001%" y="1109" width="0.0425%" height="15" fill="rgb(244,27,41)" fg:x="3364" fg:w="26"/><text x="5.7501%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="5.5574%" y="1093" width="0.0114%" height="15" fill="rgb(235,35,32)" fg:x="3399" fg:w="7"/><text x="5.8074%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (24 samples, 0.04%)</title><rect x="5.5901%" y="1061" width="0.0392%" height="15" fill="rgb(218,68,31)" fg:x="3419" fg:w="24"/><text x="5.8401%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="5.6424%" y="1045" width="0.0229%" height="15" fill="rgb(207,120,37)" fg:x="3451" fg:w="14"/><text x="5.8924%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="5.6457%" y="1029" width="0.0196%" height="15" fill="rgb(227,98,0)" fg:x="3453" fg:w="12"/><text x="5.8957%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.03%)</title><rect x="5.6408%" y="1061" width="0.0278%" height="15" fill="rgb(207,7,3)" fg:x="3450" fg:w="17"/><text x="5.8908%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 samples, 0.03%)</title><rect x="5.6816%" y="1045" width="0.0294%" height="15" fill="rgb(206,98,19)" fg:x="3475" fg:w="18"/><text x="5.9316%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.02%)</title><rect x="5.6865%" y="1029" width="0.0245%" height="15" fill="rgb(217,5,26)" fg:x="3478" fg:w="15"/><text x="5.9365%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="5.6898%" y="1013" width="0.0213%" height="15" fill="rgb(235,190,38)" fg:x="3480" fg:w="13"/><text x="5.9398%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="5.7160%" y="1029" width="0.0114%" height="15" fill="rgb(247,86,24)" fg:x="3496" fg:w="7"/><text x="5.9660%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="5.7372%" y="1013" width="0.0147%" height="15" fill="rgb(205,101,16)" fg:x="3509" fg:w="9"/><text x="5.9872%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.03%)</title><rect x="5.7683%" y="997" width="0.0311%" height="15" fill="rgb(246,168,33)" fg:x="3528" fg:w="19"/><text x="6.0183%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="5.7814%" y="981" width="0.0180%" height="15" fill="rgb(231,114,1)" fg:x="3536" fg:w="11"/><text x="6.0314%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (26 samples, 0.04%)</title><rect x="5.7617%" y="1013" width="0.0425%" height="15" fill="rgb(207,184,53)" fg:x="3524" fg:w="26"/><text x="6.0117%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (60 samples, 0.10%)</title><rect x="5.7111%" y="1045" width="0.0981%" height="15" fill="rgb(224,95,51)" fg:x="3493" fg:w="60"/><text x="5.9611%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (44 samples, 0.07%)</title><rect x="5.7372%" y="1029" width="0.0719%" height="15" fill="rgb(212,188,45)" fg:x="3509" fg:w="44"/><text x="5.9872%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;sk_gen::contraction_hierarchies::ch::CHNode&lt;sk_gen::Node&gt;,sk_gen::contraction_hierarchies::ch::CHEdge&lt;sk_gen::Edge&gt;&gt;&gt; (1,013 samples, 1.66%)</title><rect x="4.1594%" y="1237" width="1.6563%" height="15" fill="rgb(223,154,38)" fg:x="2544" fg:w="1013"/><text x="4.4094%" y="1247.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;petgraph::graph_impl::Edge&lt;sk_gen::contraction_hierarchies::ch::CHEdge&lt;sk_gen::Edge&gt;&gt;&gt; (843 samples, 1.38%)</title><rect x="4.4374%" y="1221" width="1.3783%" height="15" fill="rgb(251,22,52)" fg:x="2714" fg:w="843"/><text x="4.6874%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;sk_store::TraceEvent&gt; (417 samples, 0.68%)</title><rect x="5.1339%" y="1205" width="0.6818%" height="15" fill="rgb(229,209,22)" fg:x="3140" fg:w="417"/><text x="5.3839%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (335 samples, 0.55%)</title><rect x="5.2680%" y="1189" width="0.5477%" height="15" fill="rgb(234,138,34)" fg:x="3222" fg:w="335"/><text x="5.5180%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (334 samples, 0.55%)</title><rect x="5.2696%" y="1173" width="0.5461%" height="15" fill="rgb(212,95,11)" fg:x="3223" fg:w="334"/><text x="5.5196%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (313 samples, 0.51%)</title><rect x="5.3039%" y="1157" width="0.5118%" height="15" fill="rgb(240,179,47)" fg:x="3244" fg:w="313"/><text x="5.5539%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (277 samples, 0.45%)</title><rect x="5.3628%" y="1141" width="0.4529%" height="15" fill="rgb(240,163,11)" fg:x="3280" fg:w="277"/><text x="5.6128%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (233 samples, 0.38%)</title><rect x="5.4347%" y="1125" width="0.3810%" height="15" fill="rgb(236,37,12)" fg:x="3324" fg:w="233"/><text x="5.6847%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (167 samples, 0.27%)</title><rect x="5.5427%" y="1109" width="0.2730%" height="15" fill="rgb(232,164,16)" fg:x="3390" fg:w="167"/><text x="5.7927%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (151 samples, 0.25%)</title><rect x="5.5688%" y="1093" width="0.2469%" height="15" fill="rgb(244,205,15)" fg:x="3406" fg:w="151"/><text x="5.8188%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (139 samples, 0.23%)</title><rect x="5.5884%" y="1077" width="0.2273%" height="15" fill="rgb(223,117,47)" fg:x="3418" fg:w="139"/><text x="5.8384%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (90 samples, 0.15%)</title><rect x="5.6686%" y="1061" width="0.1472%" height="15" fill="rgb(244,107,35)" fg:x="3467" fg:w="90"/><text x="5.9186%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="5.9138%" y="1125" width="0.0147%" height="15" fill="rgb(205,140,8)" fg:x="3617" fg:w="9"/><text x="6.1638%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="5.9302%" y="1125" width="0.0164%" height="15" fill="rgb(228,84,46)" fg:x="3627" fg:w="10"/><text x="6.1802%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="5.9334%" y="1109" width="0.0131%" height="15" fill="rgb(254,188,9)" fg:x="3629" fg:w="8"/><text x="6.1834%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.01%)</title><rect x="5.9694%" y="1093" width="0.0131%" height="15" fill="rgb(206,112,54)" fg:x="3651" fg:w="8"/><text x="6.2194%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="6.0266%" y="1061" width="0.0164%" height="15" fill="rgb(216,84,49)" fg:x="3686" fg:w="10"/><text x="6.2766%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="6.0299%" y="1045" width="0.0131%" height="15" fill="rgb(214,194,35)" fg:x="3688" fg:w="8"/><text x="6.2799%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (30 samples, 0.05%)</title><rect x="5.9956%" y="1077" width="0.0491%" height="15" fill="rgb(249,28,3)" fg:x="3667" fg:w="30"/><text x="6.2456%" y="1087.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (36 samples, 0.06%)</title><rect x="5.9874%" y="1093" width="0.0589%" height="15" fill="rgb(222,56,52)" fg:x="3662" fg:w="36"/><text x="6.2374%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="6.0724%" y="1061" width="0.0114%" height="15" fill="rgb(245,217,50)" fg:x="3714" fg:w="7"/><text x="6.3224%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17 samples, 0.03%)</title><rect x="6.0577%" y="1077" width="0.0278%" height="15" fill="rgb(213,201,24)" fg:x="3705" fg:w="17"/><text x="6.3077%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (28 samples, 0.05%)</title><rect x="6.0462%" y="1093" width="0.0458%" height="15" fill="rgb(248,116,28)" fg:x="3698" fg:w="28"/><text x="6.2962%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="6.0920%" y="1093" width="0.0180%" height="15" fill="rgb(219,72,43)" fg:x="3726" fg:w="11"/><text x="6.3420%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="6.0920%" y="1077" width="0.0180%" height="15" fill="rgb(209,138,14)" fg:x="3726" fg:w="11"/><text x="6.3420%" y="1087.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (98 samples, 0.16%)</title><rect x="5.9514%" y="1125" width="0.1602%" height="15" fill="rgb(222,18,33)" fg:x="3640" fg:w="98"/><text x="6.2014%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (94 samples, 0.15%)</title><rect x="5.9579%" y="1109" width="0.1537%" height="15" fill="rgb(213,199,7)" fg:x="3644" fg:w="94"/><text x="6.2079%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.01%)</title><rect x="6.1116%" y="1125" width="0.0147%" height="15" fill="rgb(250,110,10)" fg:x="3738" fg:w="9"/><text x="6.3616%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (146 samples, 0.24%)</title><rect x="5.9056%" y="1141" width="0.2387%" height="15" fill="rgb(248,123,6)" fg:x="3612" fg:w="146"/><text x="6.1556%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="6.1264%" y="1125" width="0.0180%" height="15" fill="rgb(206,91,31)" fg:x="3747" fg:w="11"/><text x="6.3764%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="6.1296%" y="1109" width="0.0147%" height="15" fill="rgb(211,154,13)" fg:x="3749" fg:w="9"/><text x="6.3796%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (164 samples, 0.27%)</title><rect x="5.8811%" y="1157" width="0.2681%" height="15" fill="rgb(225,148,7)" fg:x="3597" fg:w="164"/><text x="6.1311%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (179 samples, 0.29%)</title><rect x="5.8648%" y="1173" width="0.2927%" height="15" fill="rgb(220,160,43)" fg:x="3587" fg:w="179"/><text x="6.1148%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (197 samples, 0.32%)</title><rect x="5.8468%" y="1189" width="0.3221%" height="15" fill="rgb(213,52,39)" fg:x="3576" fg:w="197"/><text x="6.0968%" y="1199.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (204 samples, 0.33%)</title><rect x="5.8402%" y="1205" width="0.3335%" height="15" fill="rgb(243,137,7)" fg:x="3572" fg:w="204"/><text x="6.0902%" y="1215.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (223 samples, 0.36%)</title><rect x="5.8271%" y="1221" width="0.3646%" height="15" fill="rgb(230,79,13)" fg:x="3564" fg:w="223"/><text x="6.0771%" y="1231.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="6.1738%" y="1205" width="0.0180%" height="15" fill="rgb(247,105,23)" fg:x="3776" fg:w="11"/><text x="6.4238%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="6.2294%" y="1173" width="0.0213%" height="15" fill="rgb(223,179,41)" fg:x="3810" fg:w="13"/><text x="6.4794%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="6.2588%" y="1157" width="0.0114%" height="15" fill="rgb(218,9,34)" fg:x="3828" fg:w="7"/><text x="6.5088%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="6.2588%" y="1141" width="0.0114%" height="15" fill="rgb(222,106,8)" fg:x="3828" fg:w="7"/><text x="6.5088%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (38 samples, 0.06%)</title><rect x="6.2114%" y="1205" width="0.0621%" height="15" fill="rgb(211,220,0)" fg:x="3799" fg:w="38"/><text x="6.4614%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (30 samples, 0.05%)</title><rect x="6.2245%" y="1189" width="0.0491%" height="15" fill="rgb(229,52,16)" fg:x="3807" fg:w="30"/><text x="6.4745%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (14 samples, 0.02%)</title><rect x="6.2506%" y="1173" width="0.0229%" height="15" fill="rgb(212,155,18)" fg:x="3823" fg:w="14"/><text x="6.5006%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="6.2915%" y="1189" width="0.0164%" height="15" fill="rgb(242,21,14)" fg:x="3848" fg:w="10"/><text x="6.5415%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="6.3176%" y="1173" width="0.0147%" height="15" fill="rgb(222,19,48)" fg:x="3864" fg:w="9"/><text x="6.5676%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="6.3340%" y="1173" width="0.0196%" height="15" fill="rgb(232,45,27)" fg:x="3874" fg:w="12"/><text x="6.5840%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="6.3553%" y="1157" width="0.0131%" height="15" fill="rgb(249,103,42)" fg:x="3887" fg:w="8"/><text x="6.6053%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.02%)</title><rect x="6.3683%" y="1157" width="0.0229%" height="15" fill="rgb(246,81,33)" fg:x="3895" fg:w="14"/><text x="6.6183%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.02%)</title><rect x="6.4027%" y="1141" width="0.0213%" height="15" fill="rgb(252,33,42)" fg:x="3916" fg:w="13"/><text x="6.6527%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="6.4043%" y="1125" width="0.0196%" height="15" fill="rgb(209,212,41)" fg:x="3917" fg:w="12"/><text x="6.6543%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="6.3945%" y="1157" width="0.0311%" height="15" fill="rgb(207,154,6)" fg:x="3911" fg:w="19"/><text x="6.6445%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (31 samples, 0.05%)</title><rect x="6.4354%" y="1141" width="0.0507%" height="15" fill="rgb(223,64,47)" fg:x="3936" fg:w="31"/><text x="6.6854%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.03%)</title><rect x="6.5024%" y="1125" width="0.0278%" height="15" fill="rgb(211,161,38)" fg:x="3977" fg:w="17"/><text x="6.7524%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.02%)</title><rect x="6.5073%" y="1109" width="0.0229%" height="15" fill="rgb(219,138,40)" fg:x="3980" fg:w="14"/><text x="6.7573%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (28 samples, 0.05%)</title><rect x="6.4877%" y="1141" width="0.0458%" height="15" fill="rgb(241,228,46)" fg:x="3968" fg:w="28"/><text x="6.7377%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="6.5515%" y="1125" width="0.0114%" height="15" fill="rgb(223,209,38)" fg:x="4007" fg:w="7"/><text x="6.8015%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.03%)</title><rect x="6.5891%" y="1093" width="0.0311%" height="15" fill="rgb(236,164,45)" fg:x="4030" fg:w="19"/><text x="6.8391%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="6.6381%" y="1077" width="0.0196%" height="15" fill="rgb(231,15,5)" fg:x="4060" fg:w="12"/><text x="6.8881%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="6.6381%" y="1061" width="0.0196%" height="15" fill="rgb(252,35,15)" fg:x="4060" fg:w="12"/><text x="6.8881%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="6.6299%" y="1093" width="0.0311%" height="15" fill="rgb(248,181,18)" fg:x="4055" fg:w="19"/><text x="6.8799%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="6.6790%" y="1061" width="0.0131%" height="15" fill="rgb(233,39,42)" fg:x="4085" fg:w="8"/><text x="6.9290%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="6.6806%" y="1045" width="0.0114%" height="15" fill="rgb(238,110,33)" fg:x="4086" fg:w="7"/><text x="6.9306%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="6.6773%" y="1077" width="0.0180%" height="15" fill="rgb(233,195,10)" fg:x="4084" fg:w="11"/><text x="6.9273%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.02%)</title><rect x="6.7248%" y="1045" width="0.0229%" height="15" fill="rgb(254,105,3)" fg:x="4113" fg:w="14"/><text x="6.9748%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="6.7575%" y="1029" width="0.0114%" height="15" fill="rgb(221,225,9)" fg:x="4133" fg:w="7"/><text x="7.0075%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 samples, 0.03%)</title><rect x="6.7493%" y="1045" width="0.0294%" height="15" fill="rgb(224,227,45)" fg:x="4128" fg:w="18"/><text x="6.9993%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (54 samples, 0.09%)</title><rect x="6.6953%" y="1077" width="0.0883%" height="15" fill="rgb(229,198,43)" fg:x="4095" fg:w="54"/><text x="6.9453%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (36 samples, 0.06%)</title><rect x="6.7248%" y="1061" width="0.0589%" height="15" fill="rgb(206,209,35)" fg:x="4113" fg:w="36"/><text x="6.9748%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="6.7934%" y="1045" width="0.0147%" height="15" fill="rgb(245,195,53)" fg:x="4155" fg:w="9"/><text x="7.0434%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (378 samples, 0.62%)</title><rect x="6.1918%" y="1221" width="0.6180%" height="15" fill="rgb(240,92,26)" fg:x="3787" fg:w="378"/><text x="6.4418%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (328 samples, 0.54%)</title><rect x="6.2735%" y="1205" width="0.5363%" height="15" fill="rgb(207,40,23)" fg:x="3837" fg:w="328"/><text x="6.5235%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (307 samples, 0.50%)</title><rect x="6.3078%" y="1189" width="0.5019%" height="15" fill="rgb(223,111,35)" fg:x="3858" fg:w="307"/><text x="6.5578%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (279 samples, 0.46%)</title><rect x="6.3536%" y="1173" width="0.4562%" height="15" fill="rgb(229,147,28)" fg:x="3886" fg:w="279"/><text x="6.6036%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (235 samples, 0.38%)</title><rect x="6.4256%" y="1157" width="0.3842%" height="15" fill="rgb(211,29,28)" fg:x="3930" fg:w="235"/><text x="6.6756%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (169 samples, 0.28%)</title><rect x="6.5335%" y="1141" width="0.2763%" height="15" fill="rgb(228,72,33)" fg:x="3996" fg:w="169"/><text x="6.7835%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (151 samples, 0.25%)</title><rect x="6.5629%" y="1125" width="0.2469%" height="15" fill="rgb(205,214,31)" fg:x="4014" fg:w="151"/><text x="6.8129%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (140 samples, 0.23%)</title><rect x="6.5809%" y="1109" width="0.2289%" height="15" fill="rgb(224,111,15)" fg:x="4025" fg:w="140"/><text x="6.8309%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (91 samples, 0.15%)</title><rect x="6.6610%" y="1093" width="0.1488%" height="15" fill="rgb(253,21,26)" fg:x="4074" fg:w="91"/><text x="6.9110%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 0.03%)</title><rect x="6.7836%" y="1077" width="0.0262%" height="15" fill="rgb(245,139,43)" fg:x="4149" fg:w="16"/><text x="7.0336%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="6.7918%" y="1061" width="0.0180%" height="15" fill="rgb(252,170,7)" fg:x="4154" fg:w="11"/><text x="7.0418%" y="1071.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="6.9046%" y="1077" width="0.0131%" height="15" fill="rgb(231,118,14)" fg:x="4223" fg:w="8"/><text x="7.1546%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.01%)</title><rect x="6.9062%" y="1061" width="0.0114%" height="15" fill="rgb(238,83,0)" fg:x="4224" fg:w="7"/><text x="7.1562%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 0.02%)</title><rect x="6.9177%" y="1077" width="0.0245%" height="15" fill="rgb(221,39,39)" fg:x="4231" fg:w="15"/><text x="7.1677%" y="1087.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (35 samples, 0.06%)</title><rect x="6.8915%" y="1109" width="0.0572%" height="15" fill="rgb(222,119,46)" fg:x="4215" fg:w="35"/><text x="7.1415%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (34 samples, 0.06%)</title><rect x="6.8932%" y="1093" width="0.0556%" height="15" fill="rgb(222,165,49)" fg:x="4216" fg:w="34"/><text x="7.1432%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.02%)</title><rect x="6.9488%" y="1109" width="0.0180%" height="15" fill="rgb(219,113,52)" fg:x="4250" fg:w="11"/><text x="7.1988%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="6.9667%" y="1109" width="0.0164%" height="15" fill="rgb(214,7,15)" fg:x="4261" fg:w="10"/><text x="7.2167%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="6.9684%" y="1093" width="0.0147%" height="15" fill="rgb(235,32,4)" fg:x="4262" fg:w="9"/><text x="7.2184%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (69 samples, 0.11%)</title><rect x="6.8735%" y="1125" width="0.1128%" height="15" fill="rgb(238,90,54)" fg:x="4204" fg:w="69"/><text x="7.1235%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (83 samples, 0.14%)</title><rect x="6.8588%" y="1141" width="0.1357%" height="15" fill="rgb(213,208,19)" fg:x="4195" fg:w="83"/><text x="7.1088%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (97 samples, 0.16%)</title><rect x="6.8458%" y="1157" width="0.1586%" height="15" fill="rgb(233,156,4)" fg:x="4187" fg:w="97"/><text x="7.0958%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (112 samples, 0.18%)</title><rect x="6.8278%" y="1173" width="0.1831%" height="15" fill="rgb(207,194,5)" fg:x="4176" fg:w="112"/><text x="7.0778%" y="1183.50"></text></g><g><title>sk-gen`&lt;sk_gen::Action as core::clone::Clone&gt;::clone (118 samples, 0.19%)</title><rect x="6.8212%" y="1221" width="0.1929%" height="15" fill="rgb(206,111,30)" fg:x="4172" fg:w="118"/><text x="7.0712%" y="1231.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (118 samples, 0.19%)</title><rect x="6.8212%" y="1205" width="0.1929%" height="15" fill="rgb(243,70,54)" fg:x="4172" fg:w="118"/><text x="7.0712%" y="1215.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (117 samples, 0.19%)</title><rect x="6.8229%" y="1189" width="0.1913%" height="15" fill="rgb(242,28,8)" fg:x="4173" fg:w="117"/><text x="7.0729%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="7.1139%" y="1157" width="0.0114%" height="15" fill="rgb(219,106,18)" fg:x="4351" fg:w="7"/><text x="7.3639%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="7.1270%" y="1157" width="0.0131%" height="15" fill="rgb(244,222,10)" fg:x="4359" fg:w="8"/><text x="7.3770%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="7.2349%" y="1077" width="0.0131%" height="15" fill="rgb(236,179,52)" fg:x="4425" fg:w="8"/><text x="7.4849%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="7.2480%" y="1077" width="0.0180%" height="15" fill="rgb(213,23,39)" fg:x="4433" fg:w="11"/><text x="7.4980%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="7.2496%" y="1061" width="0.0164%" height="15" fill="rgb(238,48,10)" fg:x="4434" fg:w="10"/><text x="7.4996%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (33 samples, 0.05%)</title><rect x="7.2153%" y="1093" width="0.0540%" height="15" fill="rgb(251,196,23)" fg:x="4413" fg:w="33"/><text x="7.4653%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (43 samples, 0.07%)</title><rect x="7.2022%" y="1109" width="0.0703%" height="15" fill="rgb(250,152,24)" fg:x="4405" fg:w="43"/><text x="7.4522%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="7.2758%" y="1093" width="0.0131%" height="15" fill="rgb(209,150,17)" fg:x="4450" fg:w="8"/><text x="7.5258%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 0.03%)</title><rect x="7.2725%" y="1109" width="0.0311%" height="15" fill="rgb(234,202,34)" fg:x="4448" fg:w="19"/><text x="7.5225%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="7.3036%" y="1109" width="0.0180%" height="15" fill="rgb(253,148,53)" fg:x="4467" fg:w="11"/><text x="7.5536%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="7.3052%" y="1093" width="0.0164%" height="15" fill="rgb(218,129,16)" fg:x="4468" fg:w="10"/><text x="7.5552%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (86 samples, 0.14%)</title><rect x="7.1842%" y="1125" width="0.1406%" height="15" fill="rgb(216,85,19)" fg:x="4394" fg:w="86"/><text x="7.4342%" y="1135.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (91 samples, 0.15%)</title><rect x="7.1777%" y="1141" width="0.1488%" height="15" fill="rgb(235,228,7)" fg:x="4390" fg:w="91"/><text x="7.4277%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.01%)</title><rect x="7.3264%" y="1141" width="0.0114%" height="15" fill="rgb(245,175,0)" fg:x="4481" fg:w="7"/><text x="7.5764%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (131 samples, 0.21%)</title><rect x="7.1401%" y="1157" width="0.2142%" height="15" fill="rgb(208,168,36)" fg:x="4367" fg:w="131"/><text x="7.3901%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="7.3379%" y="1141" width="0.0164%" height="15" fill="rgb(246,171,24)" fg:x="4488" fg:w="10"/><text x="7.5879%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="7.3395%" y="1125" width="0.0147%" height="15" fill="rgb(215,142,24)" fg:x="4489" fg:w="9"/><text x="7.5895%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (178 samples, 0.29%)</title><rect x="7.0828%" y="1173" width="0.2910%" height="15" fill="rgb(250,187,7)" fg:x="4332" fg:w="178"/><text x="7.3328%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="7.3542%" y="1157" width="0.0196%" height="15" fill="rgb(228,66,33)" fg:x="4498" fg:w="12"/><text x="7.6042%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="7.3559%" y="1141" width="0.0180%" height="15" fill="rgb(234,215,21)" fg:x="4499" fg:w="11"/><text x="7.6059%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="7.3739%" y="1173" width="0.0131%" height="15" fill="rgb(222,191,20)" fg:x="4510" fg:w="8"/><text x="7.6239%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (201 samples, 0.33%)</title><rect x="7.0599%" y="1189" width="0.3286%" height="15" fill="rgb(245,79,54)" fg:x="4318" fg:w="201"/><text x="7.3099%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="7.4164%" y="1157" width="0.0131%" height="15" fill="rgb(240,10,37)" fg:x="4536" fg:w="8"/><text x="7.6664%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="7.4164%" y="1141" width="0.0131%" height="15" fill="rgb(214,192,32)" fg:x="4536" fg:w="8"/><text x="7.6664%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="7.4523%" y="1125" width="0.0131%" height="15" fill="rgb(209,36,54)" fg:x="4558" fg:w="8"/><text x="7.7023%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="7.4801%" y="1109" width="0.0114%" height="15" fill="rgb(220,10,11)" fg:x="4575" fg:w="7"/><text x="7.7301%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="7.4916%" y="1109" width="0.0114%" height="15" fill="rgb(221,106,17)" fg:x="4582" fg:w="7"/><text x="7.7416%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="7.5226%" y="1077" width="0.0131%" height="15" fill="rgb(251,142,44)" fg:x="4601" fg:w="8"/><text x="7.7726%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="7.5226%" y="1061" width="0.0131%" height="15" fill="rgb(238,13,15)" fg:x="4601" fg:w="8"/><text x="7.7726%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.01%)</title><rect x="7.5570%" y="1045" width="0.0131%" height="15" fill="rgb(208,107,27)" fg:x="4622" fg:w="8"/><text x="7.8070%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (31 samples, 0.05%)</title><rect x="7.5521%" y="1061" width="0.0507%" height="15" fill="rgb(205,136,37)" fg:x="4619" fg:w="31"/><text x="7.8021%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="7.5848%" y="1045" width="0.0180%" height="15" fill="rgb(250,205,27)" fg:x="4639" fg:w="11"/><text x="7.8348%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="7.5897%" y="1029" width="0.0131%" height="15" fill="rgb(210,80,43)" fg:x="4642" fg:w="8"/><text x="7.8397%" y="1039.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (41 samples, 0.07%)</title><rect x="7.5406%" y="1077" width="0.0670%" height="15" fill="rgb(247,160,36)" fg:x="4612" fg:w="41"/><text x="7.7906%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (16 samples, 0.03%)</title><rect x="7.6207%" y="1061" width="0.0262%" height="15" fill="rgb(234,13,49)" fg:x="4661" fg:w="16"/><text x="7.8707%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (27 samples, 0.04%)</title><rect x="7.6077%" y="1077" width="0.0441%" height="15" fill="rgb(234,122,0)" fg:x="4653" fg:w="27"/><text x="7.8577%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="7.6518%" y="1077" width="0.0196%" height="15" fill="rgb(207,146,38)" fg:x="4680" fg:w="12"/><text x="7.9018%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="7.6551%" y="1061" width="0.0164%" height="15" fill="rgb(207,177,25)" fg:x="4682" fg:w="10"/><text x="7.9051%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.01%)</title><rect x="7.6600%" y="1045" width="0.0114%" height="15" fill="rgb(211,178,42)" fg:x="4685" fg:w="7"/><text x="7.9100%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (7 samples, 0.01%)</title><rect x="7.6600%" y="1029" width="0.0114%" height="15" fill="rgb(230,69,54)" fg:x="4685" fg:w="7"/><text x="7.9100%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (101 samples, 0.17%)</title><rect x="7.5079%" y="1093" width="0.1651%" height="15" fill="rgb(214,135,41)" fg:x="4592" fg:w="101"/><text x="7.7579%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (106 samples, 0.17%)</title><rect x="7.5030%" y="1109" width="0.1733%" height="15" fill="rgb(237,67,25)" fg:x="4589" fg:w="106"/><text x="7.7530%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 0.02%)</title><rect x="7.6763%" y="1109" width="0.0213%" height="15" fill="rgb(222,189,50)" fg:x="4695" fg:w="13"/><text x="7.9263%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="7.6976%" y="1109" width="0.0245%" height="15" fill="rgb(245,148,34)" fg:x="4708" fg:w="15"/><text x="7.9476%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="7.7074%" y="1093" width="0.0147%" height="15" fill="rgb(222,29,6)" fg:x="4714" fg:w="9"/><text x="7.9574%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (160 samples, 0.26%)</title><rect x="7.4671%" y="1125" width="0.2616%" height="15" fill="rgb(221,189,43)" fg:x="4567" fg:w="160"/><text x="7.7171%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="7.7287%" y="1125" width="0.0131%" height="15" fill="rgb(207,36,27)" fg:x="4727" fg:w="8"/><text x="7.9787%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (186 samples, 0.30%)</title><rect x="7.4409%" y="1141" width="0.3041%" height="15" fill="rgb(217,90,24)" fg:x="4551" fg:w="186"/><text x="7.6909%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="7.7450%" y="1141" width="0.0164%" height="15" fill="rgb(224,66,35)" fg:x="4737" fg:w="10"/><text x="7.9950%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="7.7499%" y="1125" width="0.0114%" height="15" fill="rgb(221,13,50)" fg:x="4740" fg:w="7"/><text x="7.9999%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (204 samples, 0.33%)</title><rect x="7.4311%" y="1157" width="0.3335%" height="15" fill="rgb(236,68,49)" fg:x="4545" fg:w="204"/><text x="7.6811%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (226 samples, 0.37%)</title><rect x="7.4017%" y="1173" width="0.3695%" height="15" fill="rgb(229,146,28)" fg:x="4527" fg:w="226"/><text x="7.6517%" y="1183.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (233 samples, 0.38%)</title><rect x="7.3935%" y="1189" width="0.3810%" height="15" fill="rgb(225,31,38)" fg:x="4522" fg:w="233"/><text x="7.6435%" y="1199.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (448 samples, 0.73%)</title><rect x="7.0485%" y="1205" width="0.7325%" height="15" fill="rgb(250,208,3)" fg:x="4311" fg:w="448"/><text x="7.2985%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.01%)</title><rect x="7.7826%" y="1189" width="0.0114%" height="15" fill="rgb(246,54,23)" fg:x="4760" fg:w="7"/><text x="8.0326%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="7.7941%" y="1189" width="0.0131%" height="15" fill="rgb(243,76,11)" fg:x="4767" fg:w="8"/><text x="8.0441%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="7.8169%" y="1173" width="0.0147%" height="15" fill="rgb(245,21,50)" fg:x="4781" fg:w="9"/><text x="8.0669%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="7.8186%" y="1157" width="0.0131%" height="15" fill="rgb(228,9,43)" fg:x="4782" fg:w="8"/><text x="8.0686%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (14 samples, 0.02%)</title><rect x="7.8104%" y="1189" width="0.0229%" height="15" fill="rgb(208,100,47)" fg:x="4777" fg:w="14"/><text x="8.0604%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_free (10 samples, 0.02%)</title><rect x="7.8382%" y="1173" width="0.0164%" height="15" fill="rgb(232,26,8)" fg:x="4794" fg:w="10"/><text x="8.0882%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="7.8546%" y="1173" width="0.0213%" height="15" fill="rgb(216,166,38)" fg:x="4804" fg:w="13"/><text x="8.1046%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.03%)</title><rect x="7.8987%" y="1157" width="0.0262%" height="15" fill="rgb(251,202,51)" fg:x="4831" fg:w="16"/><text x="8.1487%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="7.9036%" y="1141" width="0.0213%" height="15" fill="rgb(254,216,34)" fg:x="4834" fg:w="13"/><text x="8.1536%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (27 samples, 0.04%)</title><rect x="7.8873%" y="1173" width="0.0441%" height="15" fill="rgb(251,32,27)" fg:x="4824" fg:w="27"/><text x="8.1373%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_free (10 samples, 0.02%)</title><rect x="7.9428%" y="1157" width="0.0164%" height="15" fill="rgb(208,127,28)" fg:x="4858" fg:w="10"/><text x="8.1928%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.03%)</title><rect x="7.9592%" y="1157" width="0.0262%" height="15" fill="rgb(224,137,22)" fg:x="4868" fg:w="16"/><text x="8.2092%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="8.0082%" y="1141" width="0.0229%" height="15" fill="rgb(254,70,32)" fg:x="4898" fg:w="14"/><text x="8.2582%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="8.0148%" y="1125" width="0.0164%" height="15" fill="rgb(229,75,37)" fg:x="4902" fg:w="10"/><text x="8.2648%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (25 samples, 0.04%)</title><rect x="7.9952%" y="1157" width="0.0409%" height="15" fill="rgb(252,64,23)" fg:x="4890" fg:w="25"/><text x="8.2452%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.02%)</title><rect x="8.0508%" y="1141" width="0.0196%" height="15" fill="rgb(232,162,48)" fg:x="4924" fg:w="12"/><text x="8.3008%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="8.0851%" y="1125" width="0.0229%" height="15" fill="rgb(246,160,12)" fg:x="4945" fg:w="14"/><text x="8.3351%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="8.0867%" y="1109" width="0.0213%" height="15" fill="rgb(247,166,0)" fg:x="4946" fg:w="13"/><text x="8.3367%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (23 samples, 0.04%)</title><rect x="8.0753%" y="1141" width="0.0376%" height="15" fill="rgb(249,219,21)" fg:x="4939" fg:w="23"/><text x="8.3253%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="8.1717%" y="1061" width="0.0164%" height="15" fill="rgb(205,209,3)" fg:x="4998" fg:w="10"/><text x="8.4217%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (29 samples, 0.05%)</title><rect x="8.1456%" y="1093" width="0.0474%" height="15" fill="rgb(243,44,1)" fg:x="4982" fg:w="29"/><text x="8.3956%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (21 samples, 0.03%)</title><rect x="8.1587%" y="1077" width="0.0343%" height="15" fill="rgb(206,159,16)" fg:x="4990" fg:w="21"/><text x="8.4087%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (55 samples, 0.09%)</title><rect x="8.1129%" y="1141" width="0.0899%" height="15" fill="rgb(244,77,30)" fg:x="4962" fg:w="55"/><text x="8.3629%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (51 samples, 0.08%)</title><rect x="8.1194%" y="1125" width="0.0834%" height="15" fill="rgb(218,69,12)" fg:x="4966" fg:w="51"/><text x="8.3694%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (43 samples, 0.07%)</title><rect x="8.1325%" y="1109" width="0.0703%" height="15" fill="rgb(212,87,7)" fg:x="4974" fg:w="43"/><text x="8.3825%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="8.2355%" y="1093" width="0.0213%" height="15" fill="rgb(245,114,25)" fg:x="5037" fg:w="13"/><text x="8.4855%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="8.2617%" y="1077" width="0.0147%" height="15" fill="rgb(210,61,42)" fg:x="5053" fg:w="9"/><text x="8.5117%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="8.2633%" y="1061" width="0.0131%" height="15" fill="rgb(211,52,33)" fg:x="5054" fg:w="8"/><text x="8.5133%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (16 samples, 0.03%)</title><rect x="8.2584%" y="1093" width="0.0262%" height="15" fill="rgb(234,58,33)" fg:x="5051" fg:w="16"/><text x="8.5084%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="8.2993%" y="1077" width="0.0131%" height="15" fill="rgb(220,115,36)" fg:x="5076" fg:w="8"/><text x="8.5493%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.02%)</title><rect x="8.3222%" y="1045" width="0.0180%" height="15" fill="rgb(243,153,54)" fg:x="5090" fg:w="11"/><text x="8.5722%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="8.3549%" y="1029" width="0.0164%" height="15" fill="rgb(251,47,18)" fg:x="5110" fg:w="10"/><text x="8.6049%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="8.3483%" y="1045" width="0.0311%" height="15" fill="rgb(242,102,42)" fg:x="5106" fg:w="19"/><text x="8.5983%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (42 samples, 0.07%)</title><rect x="8.3124%" y="1077" width="0.0687%" height="15" fill="rgb(234,31,38)" fg:x="5084" fg:w="42"/><text x="8.5624%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (38 samples, 0.06%)</title><rect x="8.3189%" y="1061" width="0.0621%" height="15" fill="rgb(221,117,51)" fg:x="5088" fg:w="38"/><text x="8.5689%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (373 samples, 0.61%)</title><rect x="7.7810%" y="1205" width="0.6099%" height="15" fill="rgb(212,20,18)" fg:x="4759" fg:w="373"/><text x="8.0310%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (341 samples, 0.56%)</title><rect x="7.8333%" y="1189" width="0.5575%" height="15" fill="rgb(245,133,36)" fg:x="4791" fg:w="341"/><text x="8.0833%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (281 samples, 0.46%)</title><rect x="7.9314%" y="1173" width="0.4594%" height="15" fill="rgb(212,6,19)" fg:x="4851" fg:w="281"/><text x="8.1814%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (217 samples, 0.35%)</title><rect x="8.0360%" y="1157" width="0.3548%" height="15" fill="rgb(218,1,36)" fg:x="4915" fg:w="217"/><text x="8.2860%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (115 samples, 0.19%)</title><rect x="8.2028%" y="1141" width="0.1880%" height="15" fill="rgb(246,84,54)" fg:x="5017" fg:w="115"/><text x="8.4528%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (107 samples, 0.17%)</title><rect x="8.2159%" y="1125" width="0.1749%" height="15" fill="rgb(242,110,6)" fg:x="5025" fg:w="107"/><text x="8.4659%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (95 samples, 0.16%)</title><rect x="8.2355%" y="1109" width="0.1553%" height="15" fill="rgb(214,47,5)" fg:x="5037" fg:w="95"/><text x="8.4855%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (64 samples, 0.10%)</title><rect x="8.2862%" y="1093" width="0.1046%" height="15" fill="rgb(218,159,25)" fg:x="5068" fg:w="64"/><text x="8.5362%" y="1103.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::convert::From&lt;&amp;kube_core::dynamic::DynamicObject&gt;&gt;::from (14 samples, 0.02%)</title><rect x="8.3941%" y="1189" width="0.0229%" height="15" fill="rgb(215,211,28)" fg:x="5134" fg:w="14"/><text x="8.6441%" y="1199.50"></text></g><g><title>sk-gen`sk_core::k8s::gvk::GVK::from_dynamic_obj (10 samples, 0.02%)</title><rect x="8.4006%" y="1173" width="0.0164%" height="15" fill="rgb(238,59,32)" fg:x="5138" fg:w="10"/><text x="8.6506%" y="1183.50"></text></g><g><title>sk-gen`&lt;kube_core::gvk::GroupVersionKind as core::convert::TryFrom&lt;&amp;kube_core::metadata::TypeMeta&gt;&gt;::try_from (10 samples, 0.02%)</title><rect x="8.4006%" y="1157" width="0.0164%" height="15" fill="rgb(226,82,3)" fg:x="5138" fg:w="10"/><text x="8.6506%" y="1167.50"></text></g><g><title>sk-gen`&lt;kube_core::gvk::GroupVersion as core::str::traits::FromStr&gt;::from_str (7 samples, 0.01%)</title><rect x="8.4055%" y="1141" width="0.0114%" height="15" fill="rgb(240,164,32)" fg:x="5141" fg:w="7"/><text x="8.6555%" y="1151.50"></text></g><g><title>sk-gen`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (21 samples, 0.03%)</title><rect x="8.3925%" y="1205" width="0.0343%" height="15" fill="rgb(232,46,7)" fg:x="5133" fg:w="21"/><text x="8.6425%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (21 samples, 0.03%)</title><rect x="8.4530%" y="1205" width="0.0343%" height="15" fill="rgb(229,129,53)" fg:x="5170" fg:w="21"/><text x="8.7030%" y="1215.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="8.4579%" y="1189" width="0.0294%" height="15" fill="rgb(234,188,29)" fg:x="5173" fg:w="18"/><text x="8.7079%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="8.4709%" y="1173" width="0.0164%" height="15" fill="rgb(246,141,4)" fg:x="5181" fg:w="10"/><text x="8.7209%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="8.4759%" y="1157" width="0.0114%" height="15" fill="rgb(229,23,39)" fg:x="5184" fg:w="7"/><text x="8.7259%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="8.4759%" y="1141" width="0.0114%" height="15" fill="rgb(206,12,3)" fg:x="5184" fg:w="7"/><text x="8.7259%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="8.5200%" y="1173" width="0.0114%" height="15" fill="rgb(252,226,20)" fg:x="5211" fg:w="7"/><text x="8.7700%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (16 samples, 0.03%)</title><rect x="8.5396%" y="1157" width="0.0262%" height="15" fill="rgb(216,123,35)" fg:x="5223" fg:w="16"/><text x="8.7896%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="8.5396%" y="1141" width="0.0262%" height="15" fill="rgb(212,68,40)" fg:x="5223" fg:w="16"/><text x="8.7896%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.03%)</title><rect x="8.5396%" y="1125" width="0.0262%" height="15" fill="rgb(254,125,32)" fg:x="5223" fg:w="16"/><text x="8.7896%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="8.5478%" y="1109" width="0.0180%" height="15" fill="rgb(253,97,22)" fg:x="5228" fg:w="11"/><text x="8.7978%" y="1119.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 0.05%)</title><rect x="8.5167%" y="1189" width="0.0507%" height="15" fill="rgb(241,101,14)" fg:x="5209" fg:w="31"/><text x="8.7667%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (19 samples, 0.03%)</title><rect x="8.5363%" y="1173" width="0.0311%" height="15" fill="rgb(238,103,29)" fg:x="5221" fg:w="19"/><text x="8.7863%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.02%)</title><rect x="8.5903%" y="1173" width="0.0180%" height="15" fill="rgb(233,195,47)" fg:x="5254" fg:w="11"/><text x="8.8403%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="8.6917%" y="1077" width="0.0147%" height="15" fill="rgb(246,218,30)" fg:x="5316" fg:w="9"/><text x="8.9417%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="8.6917%" y="1061" width="0.0147%" height="15" fill="rgb(219,145,47)" fg:x="5316" fg:w="9"/><text x="8.9417%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (15 samples, 0.02%)</title><rect x="8.6835%" y="1109" width="0.0245%" height="15" fill="rgb(243,12,26)" fg:x="5311" fg:w="15"/><text x="8.9335%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (13 samples, 0.02%)</title><rect x="8.6868%" y="1093" width="0.0213%" height="15" fill="rgb(214,87,16)" fg:x="5313" fg:w="13"/><text x="8.9368%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.02%)</title><rect x="8.7440%" y="1077" width="0.0196%" height="15" fill="rgb(208,99,42)" fg:x="5348" fg:w="12"/><text x="8.9940%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="8.8110%" y="1013" width="0.0131%" height="15" fill="rgb(253,99,2)" fg:x="5389" fg:w="8"/><text x="9.0610%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (23 samples, 0.04%)</title><rect x="8.7930%" y="1061" width="0.0376%" height="15" fill="rgb(220,168,23)" fg:x="5378" fg:w="23"/><text x="9.0430%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="8.8045%" y="1045" width="0.0262%" height="15" fill="rgb(242,38,24)" fg:x="5385" fg:w="16"/><text x="9.0545%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.02%)</title><rect x="8.8078%" y="1029" width="0.0229%" height="15" fill="rgb(225,182,9)" fg:x="5387" fg:w="14"/><text x="9.0578%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (34 samples, 0.06%)</title><rect x="8.7800%" y="1077" width="0.0556%" height="15" fill="rgb(243,178,37)" fg:x="5370" fg:w="34"/><text x="9.0300%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="8.8486%" y="1061" width="0.0131%" height="15" fill="rgb(232,139,19)" fg:x="5412" fg:w="8"/><text x="9.0986%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (7 samples, 0.01%)</title><rect x="8.8797%" y="1029" width="0.0114%" height="15" fill="rgb(225,201,24)" fg:x="5431" fg:w="7"/><text x="9.1297%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.02%)</title><rect x="8.8748%" y="1045" width="0.0180%" height="15" fill="rgb(221,47,46)" fg:x="5428" fg:w="11"/><text x="9.1248%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (22 samples, 0.04%)</title><rect x="8.8666%" y="1061" width="0.0360%" height="15" fill="rgb(249,23,13)" fg:x="5423" fg:w="22"/><text x="9.1166%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="8.9353%" y="1029" width="0.0114%" height="15" fill="rgb(219,9,5)" fg:x="5465" fg:w="7"/><text x="9.1853%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="8.9811%" y="997" width="0.0229%" height="15" fill="rgb(254,171,16)" fg:x="5493" fg:w="14"/><text x="9.2311%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.02%)</title><rect x="8.9827%" y="981" width="0.0213%" height="15" fill="rgb(230,171,20)" fg:x="5494" fg:w="13"/><text x="9.2327%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.01%)</title><rect x="8.9925%" y="965" width="0.0114%" height="15" fill="rgb(210,71,41)" fg:x="5500" fg:w="7"/><text x="9.2425%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (23 samples, 0.04%)</title><rect x="8.9713%" y="1013" width="0.0376%" height="15" fill="rgb(206,173,20)" fg:x="5487" fg:w="23"/><text x="9.2213%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (33 samples, 0.05%)</title><rect x="8.9565%" y="1029" width="0.0540%" height="15" fill="rgb(233,88,34)" fg:x="5478" fg:w="33"/><text x="9.2065%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (10 samples, 0.02%)</title><rect x="9.0563%" y="997" width="0.0164%" height="15" fill="rgb(223,209,46)" fg:x="5539" fg:w="10"/><text x="9.3063%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (8 samples, 0.01%)</title><rect x="9.0595%" y="981" width="0.0131%" height="15" fill="rgb(250,43,18)" fg:x="5541" fg:w="8"/><text x="9.3095%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (38 samples, 0.06%)</title><rect x="9.0448%" y="1013" width="0.0621%" height="15" fill="rgb(208,13,10)" fg:x="5532" fg:w="38"/><text x="9.2948%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 0.03%)</title><rect x="9.0726%" y="997" width="0.0343%" height="15" fill="rgb(212,200,36)" fg:x="5549" fg:w="21"/><text x="9.3226%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (15 samples, 0.02%)</title><rect x="9.0824%" y="981" width="0.0245%" height="15" fill="rgb(225,90,30)" fg:x="5555" fg:w="15"/><text x="9.3324%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (19 samples, 0.03%)</title><rect x="9.1462%" y="965" width="0.0311%" height="15" fill="rgb(236,182,39)" fg:x="5594" fg:w="19"/><text x="9.3962%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="9.1593%" y="949" width="0.0180%" height="15" fill="rgb(212,144,35)" fg:x="5602" fg:w="11"/><text x="9.4093%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="9.1626%" y="933" width="0.0147%" height="15" fill="rgb(228,63,44)" fg:x="5604" fg:w="9"/><text x="9.4126%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (26 samples, 0.04%)</title><rect x="9.1364%" y="981" width="0.0425%" height="15" fill="rgb(228,109,6)" fg:x="5588" fg:w="26"/><text x="9.3864%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (43 samples, 0.07%)</title><rect x="9.1249%" y="997" width="0.0703%" height="15" fill="rgb(238,117,24)" fg:x="5581" fg:w="43"/><text x="9.3749%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.02%)</title><rect x="9.1789%" y="981" width="0.0164%" height="15" fill="rgb(242,26,26)" fg:x="5614" fg:w="10"/><text x="9.4289%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="9.1822%" y="965" width="0.0131%" height="15" fill="rgb(221,92,48)" fg:x="5616" fg:w="8"/><text x="9.4322%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (166 samples, 0.27%)</title><rect x="8.9255%" y="1045" width="0.2714%" height="15" fill="rgb(209,209,32)" fg:x="5459" fg:w="166"/><text x="9.1755%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (113 samples, 0.18%)</title><rect x="9.0121%" y="1029" width="0.1848%" height="15" fill="rgb(221,70,22)" fg:x="5512" fg:w="113"/><text x="9.2621%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (55 samples, 0.09%)</title><rect x="9.1070%" y="1013" width="0.0899%" height="15" fill="rgb(248,145,5)" fg:x="5570" fg:w="55"/><text x="9.3570%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (329 samples, 0.54%)</title><rect x="8.6688%" y="1125" width="0.5379%" height="15" fill="rgb(226,116,26)" fg:x="5302" fg:w="329"/><text x="8.9188%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (305 samples, 0.50%)</title><rect x="8.7080%" y="1109" width="0.4987%" height="15" fill="rgb(244,5,17)" fg:x="5326" fg:w="305"/><text x="8.9580%" y="1119.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (288 samples, 0.47%)</title><rect x="8.7358%" y="1093" width="0.4709%" height="15" fill="rgb(252,159,33)" fg:x="5343" fg:w="288"/><text x="8.9858%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (226 samples, 0.37%)</title><rect x="8.8372%" y="1077" width="0.3695%" height="15" fill="rgb(206,71,0)" fg:x="5405" fg:w="226"/><text x="9.0872%" y="1087.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (186 samples, 0.30%)</title><rect x="8.9026%" y="1061" width="0.3041%" height="15" fill="rgb(233,118,54)" fg:x="5445" fg:w="186"/><text x="9.1526%" y="1071.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (389 samples, 0.64%)</title><rect x="8.5723%" y="1189" width="0.6360%" height="15" fill="rgb(234,83,48)" fg:x="5243" fg:w="389"/><text x="8.8223%" y="1199.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (365 samples, 0.60%)</title><rect x="8.6116%" y="1173" width="0.5968%" height="15" fill="rgb(228,3,54)" fg:x="5267" fg:w="365"/><text x="8.8616%" y="1183.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (357 samples, 0.58%)</title><rect x="8.6246%" y="1157" width="0.5837%" height="15" fill="rgb(226,155,13)" fg:x="5275" fg:w="357"/><text x="8.8746%" y="1167.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (340 samples, 0.56%)</title><rect x="8.6524%" y="1141" width="0.5559%" height="15" fill="rgb(241,28,37)" fg:x="5292" fg:w="340"/><text x="8.9024%" y="1151.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (440 samples, 0.72%)</title><rect x="8.4906%" y="1205" width="0.7194%" height="15" fill="rgb(233,93,10)" fg:x="5193" fg:w="440"/><text x="8.7406%" y="1215.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 0.02%)</title><rect x="9.2835%" y="1029" width="0.0229%" height="15" fill="rgb(225,113,19)" fg:x="5678" fg:w="14"/><text x="9.5335%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.02%)</title><rect x="9.2852%" y="1013" width="0.0213%" height="15" fill="rgb(241,2,18)" fg:x="5679" fg:w="13"/><text x="9.5352%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (19 samples, 0.03%)</title><rect x="9.2770%" y="1045" width="0.0311%" height="15" fill="rgb(228,207,21)" fg:x="5674" fg:w="19"/><text x="9.5270%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="9.3081%" y="1013" width="0.0131%" height="15" fill="rgb(213,211,35)" fg:x="5693" fg:w="8"/><text x="9.5581%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="9.3097%" y="997" width="0.0114%" height="15" fill="rgb(209,83,10)" fg:x="5694" fg:w="7"/><text x="9.5597%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (34 samples, 0.06%)</title><rect x="9.2672%" y="1061" width="0.0556%" height="15" fill="rgb(209,164,1)" fg:x="5668" fg:w="34"/><text x="9.5172%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.01%)</title><rect x="9.3081%" y="1045" width="0.0147%" height="15" fill="rgb(213,184,43)" fg:x="5693" fg:w="9"/><text x="9.5581%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (9 samples, 0.01%)</title><rect x="9.3081%" y="1029" width="0.0147%" height="15" fill="rgb(231,61,34)" fg:x="5693" fg:w="9"/><text x="9.5581%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 0.06%)</title><rect x="9.2656%" y="1077" width="0.0589%" height="15" fill="rgb(235,75,3)" fg:x="5667" fg:w="36"/><text x="9.5156%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (11 samples, 0.02%)</title><rect x="9.3849%" y="917" width="0.0180%" height="15" fill="rgb(220,106,47)" fg:x="5740" fg:w="11"/><text x="9.6349%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="9.4078%" y="885" width="0.0114%" height="15" fill="rgb(210,196,33)" fg:x="5754" fg:w="7"/><text x="9.6578%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (8 samples, 0.01%)</title><rect x="9.4078%" y="901" width="0.0131%" height="15" fill="rgb(229,154,42)" fg:x="5754" fg:w="8"/><text x="9.6578%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (30 samples, 0.05%)</title><rect x="9.3735%" y="949" width="0.0491%" height="15" fill="rgb(228,114,26)" fg:x="5733" fg:w="30"/><text x="9.6235%" y="959.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 0.05%)</title><rect x="9.3751%" y="933" width="0.0474%" height="15" fill="rgb(208,144,1)" fg:x="5734" fg:w="29"/><text x="9.6251%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (12 samples, 0.02%)</title><rect x="9.4029%" y="917" width="0.0196%" height="15" fill="rgb(239,112,37)" fg:x="5751" fg:w="12"/><text x="9.6529%" y="927.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.02%)</title><rect x="9.4225%" y="933" width="0.0164%" height="15" fill="rgb(210,96,50)" fg:x="5763" fg:w="10"/><text x="9.6725%" y="943.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.01%)</title><rect x="9.4242%" y="917" width="0.0147%" height="15" fill="rgb(222,178,2)" fg:x="5764" fg:w="9"/><text x="9.6742%" y="927.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.02%)</title><rect x="9.4225%" y="949" width="0.0213%" height="15" fill="rgb(226,74,18)" fg:x="5763" fg:w="13"/><text x="9.6725%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (49 samples, 0.08%)</title><rect x="9.3686%" y="965" width="0.0801%" height="15" fill="rgb(225,67,54)" fg:x="5730" fg:w="49"/><text x="9.6186%" y="975.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (58 samples, 0.09%)</title><rect x="9.3588%" y="981" width="0.0948%" height="15" fill="rgb(251,92,32)" fg:x="5724" fg:w="58"/><text x="9.6088%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="9.4585%" y="981" width="0.0131%" height="15" fill="rgb(228,149,22)" fg:x="5785" fg:w="8"/><text x="9.7085%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (83 samples, 0.14%)</title><rect x="9.3391%" y="1029" width="0.1357%" height="15" fill="rgb(243,54,13)" fg:x="5712" fg:w="83"/><text x="9.5891%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (81 samples, 0.13%)</title><rect x="9.3424%" y="1013" width="0.1324%" height="15" fill="rgb(243,180,28)" fg:x="5714" fg:w="81"/><text x="9.5924%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (81 samples, 0.13%)</title><rect x="9.3424%" y="997" width="0.1324%" height="15" fill="rgb(208,167,24)" fg:x="5714" fg:w="81"/><text x="9.5924%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="9.4830%" y="1013" width="0.0114%" height="15" fill="rgb(245,73,45)" fg:x="5800" fg:w="7"/><text x="9.7330%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.02%)</title><rect x="9.5043%" y="997" width="0.0213%" height="15" fill="rgb(237,203,48)" fg:x="5813" fg:w="13"/><text x="9.7543%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.02%)</title><rect x="9.5043%" y="981" width="0.0213%" height="15" fill="rgb(211,197,16)" fg:x="5813" fg:w="13"/><text x="9.7543%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 0.03%)</title><rect x="9.4945%" y="1013" width="0.0327%" height="15" fill="rgb(243,99,51)" fg:x="5807" fg:w="20"/><text x="9.7445%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (33 samples, 0.05%)</title><rect x="9.4765%" y="1029" width="0.0540%" height="15" fill="rgb(215,123,29)" fg:x="5796" fg:w="33"/><text x="9.7265%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (129 samples, 0.21%)</title><rect x="9.3326%" y="1045" width="0.2109%" height="15" fill="rgb(239,186,37)" fg:x="5708" fg:w="129"/><text x="9.5826%" y="1055.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (134 samples, 0.22%)</title><rect x="9.3261%" y="1077" width="0.2191%" height="15" fill="rgb(252,136,39)" fg:x="5704" fg:w="134"/><text x="9.5761%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (131 samples, 0.21%)</title><rect x="9.3310%" y="1061" width="0.2142%" height="15" fill="rgb(223,213,32)" fg:x="5707" fg:w="131"/><text x="9.5810%" y="1071.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (186 samples, 0.30%)</title><rect x="9.2541%" y="1125" width="0.3041%" height="15" fill="rgb(233,115,5)" fg:x="5660" fg:w="186"/><text x="9.5041%" y="1135.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (184 samples, 0.30%)</title><rect x="9.2574%" y="1109" width="0.3008%" height="15" fill="rgb(207,226,44)" fg:x="5662" fg:w="184"/><text x="9.5074%" y="1119.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (182 samples, 0.30%)</title><rect x="9.2607%" y="1093" width="0.2976%" height="15" fill="rgb(208,126,0)" fg:x="5664" fg:w="182"/><text x="9.5107%" y="1103.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (198 samples, 0.32%)</title><rect x="9.2476%" y="1157" width="0.3237%" height="15" fill="rgb(244,66,21)" fg:x="5656" fg:w="198"/><text x="9.4976%" y="1167.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (197 samples, 0.32%)</title><rect x="9.2492%" y="1141" width="0.3221%" height="15" fill="rgb(222,97,12)" fg:x="5657" fg:w="197"/><text x="9.4992%" y="1151.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (201 samples, 0.33%)</title><rect x="9.2459%" y="1173" width="0.3286%" height="15" fill="rgb(219,213,19)" fg:x="5655" fg:w="201"/><text x="9.4959%" y="1183.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (14 samples, 0.02%)</title><rect x="9.5746%" y="1173" width="0.0229%" height="15" fill="rgb(252,169,30)" fg:x="5856" fg:w="14"/><text x="9.8246%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="9.6154%" y="1045" width="0.0114%" height="15" fill="rgb(206,32,51)" fg:x="5881" fg:w="7"/><text x="9.8654%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="9.6154%" y="1077" width="0.0131%" height="15" fill="rgb(250,172,42)" fg:x="5881" fg:w="8"/><text x="9.8654%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (8 samples, 0.01%)</title><rect x="9.6154%" y="1061" width="0.0131%" height="15" fill="rgb(209,34,43)" fg:x="5881" fg:w="8"/><text x="9.8654%" y="1071.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (22 samples, 0.04%)</title><rect x="9.5975%" y="1173" width="0.0360%" height="15" fill="rgb(223,11,35)" fg:x="5870" fg:w="22"/><text x="9.8475%" y="1183.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (21 samples, 0.03%)</title><rect x="9.5991%" y="1157" width="0.0343%" height="15" fill="rgb(251,219,26)" fg:x="5871" fg:w="21"/><text x="9.8491%" y="1167.50"></text></g><g><title>sk-gen`&lt;&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta as serde::de::Deserialize&gt;::deserialize::Visitor as serde::de::Visitor&gt;::visit_map (21 samples, 0.03%)</title><rect x="9.5991%" y="1141" width="0.0343%" height="15" fill="rgb(231,119,3)" fg:x="5871" fg:w="21"/><text x="9.8491%" y="1151.50"></text></g><g><title>sk-gen`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (12 samples, 0.02%)</title><rect x="9.6138%" y="1125" width="0.0196%" height="15" fill="rgb(216,97,11)" fg:x="5880" fg:w="12"/><text x="9.8638%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.02%)</title><rect x="9.6138%" y="1109" width="0.0196%" height="15" fill="rgb(223,59,9)" fg:x="5880" fg:w="12"/><text x="9.8638%" y="1119.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (11 samples, 0.02%)</title><rect x="9.6154%" y="1093" width="0.0180%" height="15" fill="rgb(233,93,31)" fg:x="5881" fg:w="11"/><text x="9.8654%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.02%)</title><rect x="9.6759%" y="1125" width="0.0164%" height="15" fill="rgb(239,81,33)" fg:x="5918" fg:w="10"/><text x="9.9259%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="9.7577%" y="1061" width="0.0114%" height="15" fill="rgb(213,120,34)" fg:x="5968" fg:w="7"/><text x="10.0077%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (81 samples, 0.13%)</title><rect x="9.6400%" y="1173" width="0.1324%" height="15" fill="rgb(243,49,53)" fg:x="5896" fg:w="81"/><text x="9.8900%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (74 samples, 0.12%)</title><rect x="9.6514%" y="1157" width="0.1210%" height="15" fill="rgb(247,216,33)" fg:x="5903" fg:w="74"/><text x="9.9014%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (61 samples, 0.10%)</title><rect x="9.6727%" y="1141" width="0.0997%" height="15" fill="rgb(226,26,14)" fg:x="5916" fg:w="61"/><text x="9.9227%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (46 samples, 0.08%)</title><rect x="9.6972%" y="1125" width="0.0752%" height="15" fill="rgb(215,49,53)" fg:x="5931" fg:w="46"/><text x="9.9472%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (36 samples, 0.06%)</title><rect x="9.7135%" y="1109" width="0.0589%" height="15" fill="rgb(245,162,40)" fg:x="5941" fg:w="36"/><text x="9.9635%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (26 samples, 0.04%)</title><rect x="9.7299%" y="1093" width="0.0425%" height="15" fill="rgb(229,68,17)" fg:x="5951" fg:w="26"/><text x="9.9799%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (11 samples, 0.02%)</title><rect x="9.7544%" y="1077" width="0.0180%" height="15" fill="rgb(213,182,10)" fg:x="5966" fg:w="11"/><text x="10.0044%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="9.8378%" y="1061" width="0.0164%" height="15" fill="rgb(245,125,30)" fg:x="6017" fg:w="10"/><text x="10.0878%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="9.8411%" y="1045" width="0.0131%" height="15" fill="rgb(232,202,2)" fg:x="6019" fg:w="8"/><text x="10.0911%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.03%)</title><rect x="9.8313%" y="1077" width="0.0278%" height="15" fill="rgb(237,140,51)" fg:x="6013" fg:w="17"/><text x="10.0813%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="9.8918%" y="1013" width="0.0147%" height="15" fill="rgb(236,157,25)" fg:x="6050" fg:w="9"/><text x="10.1418%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="9.9310%" y="949" width="0.0131%" height="15" fill="rgb(219,209,0)" fg:x="6074" fg:w="8"/><text x="10.1810%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 0.03%)</title><rect x="9.9196%" y="965" width="0.0343%" height="15" fill="rgb(240,116,54)" fg:x="6067" fg:w="21"/><text x="10.1696%" y="975.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (31 samples, 0.05%)</title><rect x="9.9065%" y="1013" width="0.0507%" height="15" fill="rgb(216,10,36)" fg:x="6059" fg:w="31"/><text x="10.1565%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (26 samples, 0.04%)</title><rect x="9.9147%" y="997" width="0.0425%" height="15" fill="rgb(222,72,44)" fg:x="6064" fg:w="26"/><text x="10.1647%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (24 samples, 0.04%)</title><rect x="9.9179%" y="981" width="0.0392%" height="15" fill="rgb(232,159,9)" fg:x="6066" fg:w="24"/><text x="10.1679%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="9.9621%" y="981" width="0.0114%" height="15" fill="rgb(210,39,32)" fg:x="6093" fg:w="7"/><text x="10.2121%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.02%)</title><rect x="9.9588%" y="997" width="0.0164%" height="15" fill="rgb(216,194,45)" fg:x="6091" fg:w="10"/><text x="10.2088%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (67 samples, 0.11%)</title><rect x="9.8672%" y="1029" width="0.1095%" height="15" fill="rgb(218,18,35)" fg:x="6035" fg:w="67"/><text x="10.1172%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (12 samples, 0.02%)</title><rect x="9.9572%" y="1013" width="0.0196%" height="15" fill="rgb(207,83,51)" fg:x="6090" fg:w="12"/><text x="10.2072%" y="1023.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (73 samples, 0.12%)</title><rect x="9.8591%" y="1077" width="0.1194%" height="15" fill="rgb(225,63,43)" fg:x="6030" fg:w="73"/><text x="10.1091%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (70 samples, 0.11%)</title><rect x="9.8640%" y="1061" width="0.1145%" height="15" fill="rgb(207,57,36)" fg:x="6033" fg:w="70"/><text x="10.1140%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (70 samples, 0.11%)</title><rect x="9.8640%" y="1045" width="0.1145%" height="15" fill="rgb(216,99,33)" fg:x="6033" fg:w="70"/><text x="10.1140%" y="1055.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (113 samples, 0.18%)</title><rect x="9.8051%" y="1093" width="0.1848%" height="15" fill="rgb(225,42,16)" fg:x="5997" fg:w="113"/><text x="10.0551%" y="1103.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (125 samples, 0.20%)</title><rect x="9.7888%" y="1125" width="0.2044%" height="15" fill="rgb(220,201,45)" fg:x="5987" fg:w="125"/><text x="10.0388%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (116 samples, 0.19%)</title><rect x="9.8035%" y="1109" width="0.1897%" height="15" fill="rgb(225,33,4)" fg:x="5996" fg:w="116"/><text x="10.0535%" y="1119.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (480 samples, 0.78%)</title><rect x="9.2100%" y="1205" width="0.7848%" height="15" fill="rgb(224,33,50)" fg:x="5633" fg:w="480"/><text x="9.4600%" y="1215.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (475 samples, 0.78%)</title><rect x="9.2181%" y="1189" width="0.7766%" height="15" fill="rgb(246,198,51)" fg:x="5638" fg:w="475"/><text x="9.4681%" y="1199.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (135 samples, 0.22%)</title><rect x="9.7740%" y="1173" width="0.2207%" height="15" fill="rgb(205,22,4)" fg:x="5978" fg:w="135"/><text x="10.0240%" y="1183.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (135 samples, 0.22%)</title><rect x="9.7740%" y="1157" width="0.2207%" height="15" fill="rgb(206,3,8)" fg:x="5978" fg:w="135"/><text x="10.0240%" y="1167.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (127 samples, 0.21%)</title><rect x="9.7871%" y="1141" width="0.2076%" height="15" fill="rgb(251,23,15)" fg:x="5986" fg:w="127"/><text x="10.0371%" y="1151.50"></text></g><g><title>sk-gen`sk_gen::Node::apply_patch (1,817 samples, 2.97%)</title><rect x="7.0256%" y="1221" width="2.9708%" height="15" fill="rgb(252,88,28)" fg:x="4297" fg:w="1817"/><text x="7.2756%" y="1231.50">sk-..</text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.01%)</title><rect x="10.0749%" y="1061" width="0.0131%" height="15" fill="rgb(212,127,14)" fg:x="6162" fg:w="8"/><text x="10.3249%" y="1071.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="10.0749%" y="1077" width="0.0147%" height="15" fill="rgb(247,145,37)" fg:x="6162" fg:w="9"/><text x="10.3249%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.01%)</title><rect x="10.0896%" y="1077" width="0.0131%" height="15" fill="rgb(209,117,53)" fg:x="6171" fg:w="8"/><text x="10.3396%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (32 samples, 0.05%)</title><rect x="10.0602%" y="1093" width="0.0523%" height="15" fill="rgb(212,90,42)" fg:x="6153" fg:w="32"/><text x="10.3102%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (33 samples, 0.05%)</title><rect x="10.0602%" y="1109" width="0.0540%" height="15" fill="rgb(218,164,37)" fg:x="6153" fg:w="33"/><text x="10.3102%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (52 samples, 0.09%)</title><rect x="10.0438%" y="1125" width="0.0850%" height="15" fill="rgb(246,65,34)" fg:x="6143" fg:w="52"/><text x="10.2938%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (62 samples, 0.10%)</title><rect x="10.0324%" y="1157" width="0.1014%" height="15" fill="rgb(231,100,33)" fg:x="6136" fg:w="62"/><text x="10.2824%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (58 samples, 0.09%)</title><rect x="10.0389%" y="1141" width="0.0948%" height="15" fill="rgb(228,126,14)" fg:x="6140" fg:w="58"/><text x="10.2889%" y="1151.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (76 samples, 0.12%)</title><rect x="10.0144%" y="1189" width="0.1243%" height="15" fill="rgb(215,173,21)" fg:x="6125" fg:w="76"/><text x="10.2644%" y="1199.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (72 samples, 0.12%)</title><rect x="10.0209%" y="1173" width="0.1177%" height="15" fill="rgb(210,6,40)" fg:x="6129" fg:w="72"/><text x="10.2709%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="10.1926%" y="1125" width="0.0114%" height="15" fill="rgb(212,48,18)" fg:x="6234" fg:w="7"/><text x="10.4426%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.03%)</title><rect x="10.1779%" y="1141" width="0.0278%" height="15" fill="rgb(230,214,11)" fg:x="6225" fg:w="17"/><text x="10.4279%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="10.2400%" y="1109" width="0.0180%" height="15" fill="rgb(254,105,39)" fg:x="6263" fg:w="11"/><text x="10.4900%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="10.2449%" y="1093" width="0.0131%" height="15" fill="rgb(245,158,5)" fg:x="6266" fg:w="8"/><text x="10.4949%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 samples, 0.03%)</title><rect x="10.2302%" y="1125" width="0.0294%" height="15" fill="rgb(249,208,11)" fg:x="6257" fg:w="18"/><text x="10.4802%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="10.2662%" y="1109" width="0.0147%" height="15" fill="rgb(210,39,28)" fg:x="6279" fg:w="9"/><text x="10.5162%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.02%)</title><rect x="10.2956%" y="1093" width="0.0213%" height="15" fill="rgb(211,56,53)" fg:x="6297" fg:w="13"/><text x="10.5456%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="10.2989%" y="1077" width="0.0180%" height="15" fill="rgb(226,201,30)" fg:x="6299" fg:w="11"/><text x="10.5489%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="10.2891%" y="1109" width="0.0311%" height="15" fill="rgb(239,101,34)" fg:x="6293" fg:w="19"/><text x="10.5391%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="10.3675%" y="1061" width="0.0131%" height="15" fill="rgb(226,209,5)" fg:x="6341" fg:w="8"/><text x="10.6175%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="10.4166%" y="1013" width="0.0147%" height="15" fill="rgb(250,105,47)" fg:x="6371" fg:w="9"/><text x="10.6666%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="10.4346%" y="1013" width="0.0196%" height="15" fill="rgb(230,72,3)" fg:x="6382" fg:w="12"/><text x="10.6846%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (37 samples, 0.06%)</title><rect x="10.3953%" y="1045" width="0.0605%" height="15" fill="rgb(232,218,39)" fg:x="6358" fg:w="37"/><text x="10.6453%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (27 samples, 0.04%)</title><rect x="10.4117%" y="1029" width="0.0441%" height="15" fill="rgb(248,166,6)" fg:x="6368" fg:w="27"/><text x="10.6617%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (81 samples, 0.13%)</title><rect x="10.3299%" y="1093" width="0.1324%" height="15" fill="rgb(247,89,20)" fg:x="6318" fg:w="81"/><text x="10.5799%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (71 samples, 0.12%)</title><rect x="10.3463%" y="1077" width="0.1161%" height="15" fill="rgb(248,130,54)" fg:x="6328" fg:w="71"/><text x="10.5963%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (50 samples, 0.08%)</title><rect x="10.3806%" y="1061" width="0.0818%" height="15" fill="rgb(234,196,4)" fg:x="6349" fg:w="50"/><text x="10.6306%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (193 samples, 0.32%)</title><rect x="10.1485%" y="1173" width="0.3156%" height="15" fill="rgb(250,143,31)" fg:x="6207" fg:w="193"/><text x="10.3985%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (184 samples, 0.30%)</title><rect x="10.1632%" y="1157" width="0.3008%" height="15" fill="rgb(211,110,34)" fg:x="6216" fg:w="184"/><text x="10.4132%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (158 samples, 0.26%)</title><rect x="10.2057%" y="1141" width="0.2583%" height="15" fill="rgb(215,124,48)" fg:x="6242" fg:w="158"/><text x="10.4557%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (125 samples, 0.20%)</title><rect x="10.2596%" y="1125" width="0.2044%" height="15" fill="rgb(216,46,13)" fg:x="6275" fg:w="125"/><text x="10.5096%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (88 samples, 0.14%)</title><rect x="10.3201%" y="1109" width="0.1439%" height="15" fill="rgb(205,184,25)" fg:x="6312" fg:w="88"/><text x="10.5701%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="10.4755%" y="1157" width="0.0131%" height="15" fill="rgb(228,1,10)" fg:x="6407" fg:w="8"/><text x="10.7255%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="10.4934%" y="1141" width="0.0131%" height="15" fill="rgb(213,116,27)" fg:x="6418" fg:w="8"/><text x="10.7434%" y="1151.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 0.05%)</title><rect x="10.4885%" y="1157" width="0.0474%" height="15" fill="rgb(241,95,50)" fg:x="6415" fg:w="29"/><text x="10.7385%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (14 samples, 0.02%)</title><rect x="10.5131%" y="1141" width="0.0229%" height="15" fill="rgb(238,48,32)" fg:x="6430" fg:w="14"/><text x="10.7631%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (9 samples, 0.01%)</title><rect x="10.5212%" y="1125" width="0.0147%" height="15" fill="rgb(235,113,49)" fg:x="6435" fg:w="9"/><text x="10.7712%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="10.5245%" y="1109" width="0.0114%" height="15" fill="rgb(205,127,43)" fg:x="6437" fg:w="7"/><text x="10.7745%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (10 samples, 0.02%)</title><rect x="10.5572%" y="1141" width="0.0164%" height="15" fill="rgb(250,162,2)" fg:x="6457" fg:w="10"/><text x="10.8072%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="10.5915%" y="1109" width="0.0114%" height="15" fill="rgb(220,13,41)" fg:x="6478" fg:w="7"/><text x="10.8415%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.02%)</title><rect x="10.6733%" y="1045" width="0.0213%" height="15" fill="rgb(249,221,25)" fg:x="6528" fg:w="13"/><text x="10.9233%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (8 samples, 0.01%)</title><rect x="10.6815%" y="1029" width="0.0131%" height="15" fill="rgb(215,208,19)" fg:x="6533" fg:w="8"/><text x="10.9315%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="10.6831%" y="1013" width="0.0114%" height="15" fill="rgb(236,175,2)" fg:x="6534" fg:w="7"/><text x="10.9331%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="10.6831%" y="997" width="0.0114%" height="15" fill="rgb(241,52,2)" fg:x="6534" fg:w="7"/><text x="10.9331%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="10.7256%" y="1013" width="0.0114%" height="15" fill="rgb(248,140,14)" fg:x="6560" fg:w="7"/><text x="10.9756%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (18 samples, 0.03%)</title><rect x="10.7142%" y="1029" width="0.0294%" height="15" fill="rgb(253,22,42)" fg:x="6553" fg:w="18"/><text x="10.9642%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (19 samples, 0.03%)</title><rect x="10.7796%" y="997" width="0.0311%" height="15" fill="rgb(234,61,47)" fg:x="6593" fg:w="19"/><text x="11.0296%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="10.8368%" y="965" width="0.0114%" height="15" fill="rgb(208,226,15)" fg:x="6628" fg:w="7"/><text x="11.0868%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (17 samples, 0.03%)</title><rect x="10.8319%" y="981" width="0.0278%" height="15" fill="rgb(217,221,4)" fg:x="6625" fg:w="17"/><text x="11.0819%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.01%)</title><rect x="10.8482%" y="965" width="0.0114%" height="15" fill="rgb(212,174,34)" fg:x="6635" fg:w="7"/><text x="11.0982%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (12 samples, 0.02%)</title><rect x="10.8907%" y="949" width="0.0196%" height="15" fill="rgb(253,83,4)" fg:x="6661" fg:w="12"/><text x="11.1407%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (11 samples, 0.02%)</title><rect x="10.8924%" y="933" width="0.0180%" height="15" fill="rgb(250,195,49)" fg:x="6662" fg:w="11"/><text x="11.1424%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="10.8973%" y="917" width="0.0131%" height="15" fill="rgb(241,192,25)" fg:x="6665" fg:w="8"/><text x="11.1473%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="10.8989%" y="901" width="0.0114%" height="15" fill="rgb(208,124,10)" fg:x="6666" fg:w="7"/><text x="11.1489%" y="911.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (104 samples, 0.17%)</title><rect x="10.7567%" y="1013" width="0.1700%" height="15" fill="rgb(222,33,0)" fg:x="6579" fg:w="104"/><text x="11.0067%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (70 samples, 0.11%)</title><rect x="10.8123%" y="997" width="0.1145%" height="15" fill="rgb(234,209,28)" fg:x="6613" fg:w="70"/><text x="11.0623%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (41 samples, 0.07%)</title><rect x="10.8597%" y="981" width="0.0670%" height="15" fill="rgb(224,11,23)" fg:x="6642" fg:w="41"/><text x="11.1097%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (33 samples, 0.05%)</title><rect x="10.8728%" y="965" width="0.0540%" height="15" fill="rgb(232,99,1)" fg:x="6650" fg:w="33"/><text x="11.1228%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.01%)</title><rect x="10.9120%" y="949" width="0.0147%" height="15" fill="rgb(237,95,45)" fg:x="6674" fg:w="9"/><text x="11.1620%" y="959.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (168 samples, 0.27%)</title><rect x="10.6537%" y="1061" width="0.2747%" height="15" fill="rgb(208,109,11)" fg:x="6516" fg:w="168"/><text x="10.9037%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (142 samples, 0.23%)</title><rect x="10.6962%" y="1045" width="0.2322%" height="15" fill="rgb(216,190,48)" fg:x="6542" fg:w="142"/><text x="10.9462%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (113 samples, 0.18%)</title><rect x="10.7436%" y="1029" width="0.1848%" height="15" fill="rgb(251,171,36)" fg:x="6571" fg:w="113"/><text x="10.9936%" y="1039.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (285 samples, 0.47%)</title><rect x="10.4656%" y="1173" width="0.4660%" height="15" fill="rgb(230,62,22)" fg:x="6401" fg:w="285"/><text x="10.7156%" y="1183.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (235 samples, 0.38%)</title><rect x="10.5474%" y="1157" width="0.3842%" height="15" fill="rgb(225,114,35)" fg:x="6451" fg:w="235"/><text x="10.7974%" y="1167.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (219 samples, 0.36%)</title><rect x="10.5736%" y="1141" width="0.3581%" height="15" fill="rgb(215,118,42)" fg:x="6467" fg:w="219"/><text x="10.8236%" y="1151.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (216 samples, 0.35%)</title><rect x="10.5785%" y="1125" width="0.3532%" height="15" fill="rgb(243,119,21)" fg:x="6470" fg:w="216"/><text x="10.8285%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (201 samples, 0.33%)</title><rect x="10.6030%" y="1109" width="0.3286%" height="15" fill="rgb(252,177,53)" fg:x="6485" fg:w="201"/><text x="10.8530%" y="1119.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (197 samples, 0.32%)</title><rect x="10.6095%" y="1093" width="0.3221%" height="15" fill="rgb(237,209,29)" fg:x="6489" fg:w="197"/><text x="10.8595%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (188 samples, 0.31%)</title><rect x="10.6242%" y="1077" width="0.3074%" height="15" fill="rgb(212,65,23)" fg:x="6498" fg:w="188"/><text x="10.8742%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.02%)</title><rect x="10.9414%" y="1125" width="0.0180%" height="15" fill="rgb(230,222,46)" fg:x="6692" fg:w="11"/><text x="11.1914%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (16 samples, 0.03%)</title><rect x="10.9349%" y="1141" width="0.0262%" height="15" fill="rgb(215,135,32)" fg:x="6688" fg:w="16"/><text x="11.1849%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (18 samples, 0.03%)</title><rect x="10.9333%" y="1157" width="0.0294%" height="15" fill="rgb(246,101,22)" fg:x="6687" fg:w="18"/><text x="11.1833%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.02%)</title><rect x="11.0379%" y="1093" width="0.0196%" height="15" fill="rgb(206,107,13)" fg:x="6751" fg:w="12"/><text x="11.2879%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 samples, 0.02%)</title><rect x="11.0641%" y="1093" width="0.0245%" height="15" fill="rgb(250,100,44)" fg:x="6767" fg:w="15"/><text x="11.3141%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="11.0722%" y="1077" width="0.0164%" height="15" fill="rgb(231,147,38)" fg:x="6772" fg:w="10"/><text x="11.3222%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.01%)</title><rect x="11.0739%" y="1061" width="0.0147%" height="15" fill="rgb(229,8,40)" fg:x="6773" fg:w="9"/><text x="11.3239%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.02%)</title><rect x="11.0968%" y="1077" width="0.0164%" height="15" fill="rgb(221,135,30)" fg:x="6787" fg:w="10"/><text x="11.3468%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="11.1147%" y="1077" width="0.0180%" height="15" fill="rgb(249,193,18)" fg:x="6798" fg:w="11"/><text x="11.3647%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="11.1573%" y="1045" width="0.0147%" height="15" fill="rgb(209,133,39)" fg:x="6824" fg:w="9"/><text x="11.4073%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="11.1769%" y="1045" width="0.0180%" height="15" fill="rgb(232,100,14)" fg:x="6836" fg:w="11"/><text x="11.4269%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="11.1801%" y="1029" width="0.0147%" height="15" fill="rgb(224,185,1)" fg:x="6838" fg:w="9"/><text x="11.4301%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="11.1818%" y="1013" width="0.0131%" height="15" fill="rgb(223,139,8)" fg:x="6839" fg:w="8"/><text x="11.4318%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="11.2455%" y="997" width="0.0114%" height="15" fill="rgb(232,213,38)" fg:x="6878" fg:w="7"/><text x="11.4955%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="11.2406%" y="1013" width="0.0180%" height="15" fill="rgb(207,94,22)" fg:x="6875" fg:w="11"/><text x="11.4906%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (181 samples, 0.30%)</title><rect x="10.9643%" y="1157" width="0.2959%" height="15" fill="rgb(219,183,54)" fg:x="6706" fg:w="181"/><text x="11.2143%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (175 samples, 0.29%)</title><rect x="10.9741%" y="1141" width="0.2861%" height="15" fill="rgb(216,185,54)" fg:x="6712" fg:w="175"/><text x="11.2241%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (165 samples, 0.27%)</title><rect x="10.9905%" y="1125" width="0.2698%" height="15" fill="rgb(254,217,39)" fg:x="6722" fg:w="165"/><text x="11.2405%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (143 samples, 0.23%)</title><rect x="11.0265%" y="1109" width="0.2338%" height="15" fill="rgb(240,178,23)" fg:x="6744" fg:w="143"/><text x="11.2765%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (105 samples, 0.17%)</title><rect x="11.0886%" y="1093" width="0.1717%" height="15" fill="rgb(218,11,47)" fg:x="6782" fg:w="105"/><text x="11.3386%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (78 samples, 0.13%)</title><rect x="11.1327%" y="1077" width="0.1275%" height="15" fill="rgb(218,51,51)" fg:x="6809" fg:w="78"/><text x="11.3827%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (66 samples, 0.11%)</title><rect x="11.1523%" y="1061" width="0.1079%" height="15" fill="rgb(238,126,27)" fg:x="6821" fg:w="66"/><text x="11.4023%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (40 samples, 0.07%)</title><rect x="11.1949%" y="1045" width="0.0654%" height="15" fill="rgb(249,202,22)" fg:x="6847" fg:w="40"/><text x="11.4449%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 0.04%)</title><rect x="11.2243%" y="1029" width="0.0360%" height="15" fill="rgb(254,195,49)" fg:x="6865" fg:w="22"/><text x="11.4743%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="11.2619%" y="1141" width="0.0164%" height="15" fill="rgb(208,123,14)" fg:x="6888" fg:w="10"/><text x="11.5119%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="11.3060%" y="1093" width="0.0114%" height="15" fill="rgb(224,200,8)" fg:x="6915" fg:w="7"/><text x="11.5560%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="11.3044%" y="1109" width="0.0213%" height="15" fill="rgb(217,61,36)" fg:x="6914" fg:w="13"/><text x="11.5544%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="11.3731%" y="1061" width="0.0131%" height="15" fill="rgb(206,35,45)" fg:x="6956" fg:w="8"/><text x="11.6231%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 0.04%)</title><rect x="11.3698%" y="1077" width="0.0425%" height="15" fill="rgb(217,65,33)" fg:x="6954" fg:w="26"/><text x="11.6198%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (16 samples, 0.03%)</title><rect x="11.3862%" y="1061" width="0.0262%" height="15" fill="rgb(222,158,48)" fg:x="6964" fg:w="16"/><text x="11.6362%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="11.4548%" y="1029" width="0.0147%" height="15" fill="rgb(254,2,54)" fg:x="7006" fg:w="9"/><text x="11.7048%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (17 samples, 0.03%)</title><rect x="11.4712%" y="1029" width="0.0278%" height="15" fill="rgb(250,143,38)" fg:x="7016" fg:w="17"/><text x="11.7212%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (30 samples, 0.05%)</title><rect x="11.4516%" y="1045" width="0.0491%" height="15" fill="rgb(248,25,0)" fg:x="7004" fg:w="30"/><text x="11.7016%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="11.5366%" y="1029" width="0.0245%" height="15" fill="rgb(206,152,27)" fg:x="7056" fg:w="15"/><text x="11.7866%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14 samples, 0.02%)</title><rect x="11.5382%" y="1013" width="0.0229%" height="15" fill="rgb(240,77,30)" fg:x="7057" fg:w="14"/><text x="11.7882%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.01%)</title><rect x="11.5464%" y="997" width="0.0147%" height="15" fill="rgb(231,5,3)" fg:x="7062" fg:w="9"/><text x="11.7964%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (8 samples, 0.01%)</title><rect x="11.5480%" y="981" width="0.0131%" height="15" fill="rgb(207,226,32)" fg:x="7063" fg:w="8"/><text x="11.7980%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="11.6020%" y="1013" width="0.0229%" height="15" fill="rgb(222,207,47)" fg:x="7096" fg:w="14"/><text x="11.8520%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (11 samples, 0.02%)</title><rect x="11.6559%" y="965" width="0.0180%" height="15" fill="rgb(229,115,45)" fg:x="7129" fg:w="11"/><text x="11.9059%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (21 samples, 0.03%)</title><rect x="11.6412%" y="981" width="0.0343%" height="15" fill="rgb(224,191,6)" fg:x="7120" fg:w="21"/><text x="11.8912%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="11.6805%" y="965" width="0.0114%" height="15" fill="rgb(230,227,24)" fg:x="7144" fg:w="7"/><text x="11.9305%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="11.7099%" y="965" width="0.0213%" height="15" fill="rgb(228,80,19)" fg:x="7162" fg:w="13"/><text x="11.9599%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="11.7148%" y="949" width="0.0164%" height="15" fill="rgb(247,229,0)" fg:x="7165" fg:w="10"/><text x="11.9648%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="11.7540%" y="949" width="0.0164%" height="15" fill="rgb(237,194,15)" fg:x="7189" fg:w="10"/><text x="12.0040%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.04%)</title><rect x="11.7737%" y="949" width="0.0360%" height="15" fill="rgb(219,203,20)" fg:x="7201" fg:w="22"/><text x="12.0237%" y="959.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (9 samples, 0.01%)</title><rect x="11.7949%" y="933" width="0.0147%" height="15" fill="rgb(234,128,8)" fg:x="7214" fg:w="9"/><text x="12.0449%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="11.7982%" y="917" width="0.0114%" height="15" fill="rgb(248,202,8)" fg:x="7216" fg:w="7"/><text x="12.0482%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="11.8292%" y="917" width="0.0196%" height="15" fill="rgb(206,104,37)" fg:x="7235" fg:w="12"/><text x="12.0792%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="11.8603%" y="901" width="0.0114%" height="15" fill="rgb(223,8,27)" fg:x="7254" fg:w="7"/><text x="12.1103%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="11.8603%" y="885" width="0.0114%" height="15" fill="rgb(216,217,28)" fg:x="7254" fg:w="7"/><text x="12.1103%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="11.8767%" y="885" width="0.0164%" height="15" fill="rgb(249,199,1)" fg:x="7264" fg:w="10"/><text x="12.1267%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="11.8783%" y="869" width="0.0147%" height="15" fill="rgb(240,85,17)" fg:x="7265" fg:w="9"/><text x="12.1283%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 0.04%)</title><rect x="11.8505%" y="917" width="0.0441%" height="15" fill="rgb(206,108,45)" fg:x="7248" fg:w="27"/><text x="12.1005%" y="927.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (14 samples, 0.02%)</title><rect x="11.8718%" y="901" width="0.0229%" height="15" fill="rgb(245,210,41)" fg:x="7261" fg:w="14"/><text x="12.1218%" y="911.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (53 samples, 0.09%)</title><rect x="11.8129%" y="949" width="0.0867%" height="15" fill="rgb(206,13,37)" fg:x="7225" fg:w="53"/><text x="12.0629%" y="959.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (46 samples, 0.08%)</title><rect x="11.8243%" y="933" width="0.0752%" height="15" fill="rgb(250,61,18)" fg:x="7232" fg:w="46"/><text x="12.0743%" y="943.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="11.9322%" y="885" width="0.0164%" height="15" fill="rgb(235,172,48)" fg:x="7298" fg:w="10"/><text x="12.1822%" y="895.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="11.9273%" y="901" width="0.0245%" height="15" fill="rgb(249,201,17)" fg:x="7295" fg:w="15"/><text x="12.1773%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.04%)</title><rect x="11.9175%" y="917" width="0.0360%" height="15" fill="rgb(219,208,6)" fg:x="7289" fg:w="22"/><text x="12.1675%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (174 samples, 0.28%)</title><rect x="11.6772%" y="981" width="0.2845%" height="15" fill="rgb(248,31,23)" fg:x="7142" fg:w="174"/><text x="11.9272%" y="991.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (138 samples, 0.23%)</title><rect x="11.7360%" y="965" width="0.2256%" height="15" fill="rgb(245,15,42)" fg:x="7178" fg:w="138"/><text x="11.9860%" y="975.50"></text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (38 samples, 0.06%)</title><rect x="11.8995%" y="949" width="0.0621%" height="15" fill="rgb(222,217,39)" fg:x="7278" fg:w="38"/><text x="12.1495%" y="959.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (31 samples, 0.05%)</title><rect x="11.9110%" y="933" width="0.0507%" height="15" fill="rgb(210,219,27)" fg:x="7285" fg:w="31"/><text x="12.1610%" y="943.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (206 samples, 0.34%)</title><rect x="11.6281%" y="1013" width="0.3368%" height="15" fill="rgb(252,166,36)" fg:x="7112" fg:w="206"/><text x="11.8781%" y="1023.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (205 samples, 0.34%)</title><rect x="11.6298%" y="997" width="0.3352%" height="15" fill="rgb(245,132,34)" fg:x="7113" fg:w="205"/><text x="11.8798%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="12.0091%" y="933" width="0.0229%" height="15" fill="rgb(236,54,3)" fg:x="7345" fg:w="14"/><text x="12.2591%" y="943.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="12.0107%" y="917" width="0.0213%" height="15" fill="rgb(241,173,43)" fg:x="7346" fg:w="13"/><text x="12.2607%" y="927.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="12.0189%" y="901" width="0.0131%" height="15" fill="rgb(215,190,9)" fg:x="7351" fg:w="8"/><text x="12.2689%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="12.0189%" y="885" width="0.0131%" height="15" fill="rgb(242,101,16)" fg:x="7351" fg:w="8"/><text x="12.2689%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="12.0483%" y="901" width="0.0327%" height="15" fill="rgb(223,190,21)" fg:x="7369" fg:w="20"/><text x="12.2983%" y="911.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="12.0581%" y="885" width="0.0229%" height="15" fill="rgb(215,228,25)" fg:x="7375" fg:w="14"/><text x="12.3081%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="12.0647%" y="869" width="0.0164%" height="15" fill="rgb(225,36,22)" fg:x="7379" fg:w="10"/><text x="12.3147%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.06%)</title><rect x="12.0320%" y="933" width="0.0556%" height="15" fill="rgb(251,106,46)" fg:x="7359" fg:w="34"/><text x="12.2820%" y="943.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (26 samples, 0.04%)</title><rect x="12.0451%" y="917" width="0.0425%" height="15" fill="rgb(208,90,1)" fg:x="7367" fg:w="26"/><text x="12.2951%" y="927.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (52 samples, 0.09%)</title><rect x="12.0058%" y="949" width="0.0850%" height="15" fill="rgb(243,10,4)" fg:x="7343" fg:w="52"/><text x="12.2558%" y="959.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.11%)</title><rect x="11.9829%" y="965" width="0.1112%" height="15" fill="rgb(212,137,27)" fg:x="7329" fg:w="68"/><text x="12.2329%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (77 samples, 0.13%)</title><rect x="11.9715%" y="981" width="0.1259%" height="15" fill="rgb(231,220,49)" fg:x="7322" fg:w="77"/><text x="12.2215%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (363 samples, 0.59%)</title><rect x="11.5055%" y="1045" width="0.5935%" height="15" fill="rgb(237,96,20)" fg:x="7037" fg:w="363"/><text x="11.7555%" y="1055.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (328 samples, 0.54%)</title><rect x="11.5627%" y="1029" width="0.5363%" height="15" fill="rgb(239,229,30)" fg:x="7072" fg:w="328"/><text x="11.8127%" y="1039.50"></text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (81 samples, 0.13%)</title><rect x="11.9666%" y="1013" width="0.1324%" height="15" fill="rgb(219,65,33)" fg:x="7319" fg:w="81"/><text x="12.2166%" y="1023.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (81 samples, 0.13%)</title><rect x="11.9666%" y="997" width="0.1324%" height="15" fill="rgb(243,134,7)" fg:x="7319" fg:w="81"/><text x="12.2166%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (421 samples, 0.69%)</title><rect x="11.4156%" y="1077" width="0.6883%" height="15" fill="rgb(216,177,54)" fg:x="6982" fg:w="421"/><text x="11.6656%" y="1087.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (406 samples, 0.66%)</title><rect x="11.4401%" y="1061" width="0.6638%" height="15" fill="rgb(211,160,20)" fg:x="6997" fg:w="406"/><text x="11.6901%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (477 samples, 0.78%)</title><rect x="11.3273%" y="1109" width="0.7799%" height="15" fill="rgb(239,85,39)" fg:x="6928" fg:w="477"/><text x="11.5773%" y="1119.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (455 samples, 0.74%)</title><rect x="11.3633%" y="1093" width="0.7439%" height="15" fill="rgb(232,125,22)" fg:x="6950" fg:w="455"/><text x="11.6133%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (510 samples, 0.83%)</title><rect x="11.2815%" y="1141" width="0.8339%" height="15" fill="rgb(244,57,34)" fg:x="6900" fg:w="510"/><text x="11.5315%" y="1151.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (499 samples, 0.82%)</title><rect x="11.2995%" y="1125" width="0.8159%" height="15" fill="rgb(214,203,32)" fg:x="6911" fg:w="499"/><text x="11.5495%" y="1135.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::cmp::PartialEq&gt;::eq (1,211 samples, 1.98%)</title><rect x="10.1386%" y="1189" width="1.9800%" height="15" fill="rgb(207,58,43)" fg:x="6201" fg:w="1211"/><text x="10.3886%" y="1199.50">s..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_eq (726 samples, 1.19%)</title><rect x="10.9316%" y="1173" width="1.1870%" height="15" fill="rgb(215,193,15)" fg:x="6686" fg:w="726"/><text x="11.1816%" y="1183.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (525 samples, 0.86%)</title><rect x="11.2603%" y="1157" width="0.8584%" height="15" fill="rgb(232,15,44)" fg:x="6887" fg:w="525"/><text x="11.5103%" y="1167.50"></text></g><g><title>sk-gen`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,289 samples, 2.11%)</title><rect x="10.0128%" y="1205" width="2.1075%" height="15" fill="rgb(212,3,48)" fg:x="6124" fg:w="1289"/><text x="10.2628%" y="1215.50">s..</text></g><g><title>sk-gen`petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::filter_map (3,860 samples, 6.31%)</title><rect x="5.8173%" y="1237" width="6.3111%" height="15" fill="rgb(218,128,7)" fg:x="3558" fg:w="3860"/><text x="6.0673%" y="1247.50">sk-gen`p..</text></g><g><title>sk-gen`sk_gen::diff_objects (1,304 samples, 2.13%)</title><rect x="9.9964%" y="1221" width="2.1320%" height="15" fill="rgb(226,216,39)" fg:x="6114" fg:w="1304"/><text x="10.2464%" y="1231.50">s..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="12.1383%" y="1173" width="0.0164%" height="15" fill="rgb(243,47,51)" fg:x="7424" fg:w="10"/><text x="12.3883%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (10 samples, 0.02%)</title><rect x="12.1710%" y="1125" width="0.0164%" height="15" fill="rgb(241,183,40)" fg:x="7444" fg:w="10"/><text x="12.4210%" y="1135.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (23 samples, 0.04%)</title><rect x="12.1644%" y="1157" width="0.0376%" height="15" fill="rgb(231,217,32)" fg:x="7440" fg:w="23"/><text x="12.4144%" y="1167.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (20 samples, 0.03%)</title><rect x="12.1693%" y="1141" width="0.0327%" height="15" fill="rgb(229,61,38)" fg:x="7443" fg:w="20"/><text x="12.4193%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (9 samples, 0.01%)</title><rect x="12.1873%" y="1125" width="0.0147%" height="15" fill="rgb(225,210,5)" fg:x="7454" fg:w="9"/><text x="12.4373%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (30 samples, 0.05%)</title><rect x="12.1546%" y="1173" width="0.0491%" height="15" fill="rgb(231,79,45)" fg:x="7434" fg:w="30"/><text x="12.4046%" y="1183.50"></text></g><g><title>sk-gen`petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::map (55 samples, 0.09%)</title><rect x="12.1284%" y="1237" width="0.0899%" height="15" fill="rgb(224,100,7)" fg:x="7418" fg:w="55"/><text x="12.3784%" y="1247.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 0.09%)</title><rect x="12.1284%" y="1221" width="0.0899%" height="15" fill="rgb(241,198,18)" fg:x="7418" fg:w="55"/><text x="12.3784%" y="1231.50"></text></g><g><title>sk-gen`alloc::fmt::format::format_inner (50 samples, 0.08%)</title><rect x="12.1366%" y="1205" width="0.0818%" height="15" fill="rgb(252,97,53)" fg:x="7423" fg:w="50"/><text x="12.3866%" y="1215.50"></text></g><g><title>sk-gen`core::fmt::write (49 samples, 0.08%)</title><rect x="12.1383%" y="1189" width="0.0801%" height="15" fill="rgb(220,88,7)" fg:x="7424" fg:w="49"/><text x="12.3883%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.03%)</title><rect x="12.2691%" y="1221" width="0.0278%" height="15" fill="rgb(213,176,14)" fg:x="7504" fg:w="17"/><text x="12.5191%" y="1231.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (23 samples, 0.04%)</title><rect x="12.2985%" y="1221" width="0.0376%" height="15" fill="rgb(246,73,7)" fg:x="7522" fg:w="23"/><text x="12.5485%" y="1231.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.03%)</title><rect x="12.3819%" y="1173" width="0.0278%" height="15" fill="rgb(245,64,36)" fg:x="7573" fg:w="17"/><text x="12.6319%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.03%)</title><rect x="12.3819%" y="1157" width="0.0278%" height="15" fill="rgb(245,80,10)" fg:x="7573" fg:w="17"/><text x="12.6319%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="12.3900%" y="1141" width="0.0196%" height="15" fill="rgb(232,107,50)" fg:x="7578" fg:w="12"/><text x="12.6400%" y="1151.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.03%)</title><rect x="12.4097%" y="1173" width="0.0278%" height="15" fill="rgb(253,3,0)" fg:x="7590" fg:w="17"/><text x="12.6597%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="12.4685%" y="1141" width="0.0213%" height="15" fill="rgb(212,99,53)" fg:x="7626" fg:w="13"/><text x="12.7185%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="12.4718%" y="1125" width="0.0180%" height="15" fill="rgb(249,111,54)" fg:x="7628" fg:w="11"/><text x="12.7218%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="12.4767%" y="1109" width="0.0131%" height="15" fill="rgb(249,55,30)" fg:x="7631" fg:w="8"/><text x="12.7267%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="12.4898%" y="1141" width="0.0114%" height="15" fill="rgb(237,47,42)" fg:x="7639" fg:w="7"/><text x="12.7398%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="12.5225%" y="1125" width="0.0262%" height="15" fill="rgb(211,20,18)" fg:x="7659" fg:w="16"/><text x="12.7725%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.02%)</title><rect x="12.5290%" y="1109" width="0.0196%" height="15" fill="rgb(231,203,46)" fg:x="7663" fg:w="12"/><text x="12.7790%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.01%)</title><rect x="12.5372%" y="1093" width="0.0114%" height="15" fill="rgb(237,142,3)" fg:x="7668" fg:w="7"/><text x="12.7872%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.02%)</title><rect x="12.5486%" y="1125" width="0.0213%" height="15" fill="rgb(241,107,1)" fg:x="7675" fg:w="13"/><text x="12.7986%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="12.5977%" y="1093" width="0.0131%" height="15" fill="rgb(229,83,13)" fg:x="7705" fg:w="8"/><text x="12.8477%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.02%)</title><rect x="12.6108%" y="1093" width="0.0196%" height="15" fill="rgb(241,91,40)" fg:x="7713" fg:w="12"/><text x="12.8608%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="12.6500%" y="1061" width="0.0147%" height="15" fill="rgb(225,3,45)" fg:x="7737" fg:w="9"/><text x="12.9000%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="12.6664%" y="1061" width="0.0164%" height="15" fill="rgb(244,223,14)" fg:x="7747" fg:w="10"/><text x="12.9164%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="12.6664%" y="1045" width="0.0164%" height="15" fill="rgb(224,124,37)" fg:x="7747" fg:w="10"/><text x="12.9164%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="12.6696%" y="1029" width="0.0131%" height="15" fill="rgb(251,171,30)" fg:x="7749" fg:w="8"/><text x="12.9196%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="12.6827%" y="1061" width="0.0147%" height="15" fill="rgb(236,46,54)" fg:x="7757" fg:w="9"/><text x="12.9327%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="12.6974%" y="1061" width="0.0229%" height="15" fill="rgb(245,213,5)" fg:x="7766" fg:w="14"/><text x="12.9474%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="12.7023%" y="1045" width="0.0180%" height="15" fill="rgb(230,144,27)" fg:x="7769" fg:w="11"/><text x="12.9523%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (48 samples, 0.08%)</title><rect x="12.6451%" y="1077" width="0.0785%" height="15" fill="rgb(220,86,6)" fg:x="7734" fg:w="48"/><text x="12.8951%" y="1087.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (60 samples, 0.10%)</title><rect x="12.6304%" y="1093" width="0.0981%" height="15" fill="rgb(240,20,13)" fg:x="7725" fg:w="60"/><text x="12.8804%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 0.02%)</title><rect x="12.7416%" y="1077" width="0.0213%" height="15" fill="rgb(217,89,34)" fg:x="7793" fg:w="13"/><text x="12.9916%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (26 samples, 0.04%)</title><rect x="12.7285%" y="1093" width="0.0425%" height="15" fill="rgb(229,13,5)" fg:x="7785" fg:w="26"/><text x="12.9785%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="12.7710%" y="1093" width="0.0262%" height="15" fill="rgb(244,67,35)" fg:x="7811" fg:w="16"/><text x="13.0210%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (13 samples, 0.02%)</title><rect x="12.7759%" y="1077" width="0.0213%" height="15" fill="rgb(221,40,2)" fg:x="7814" fg:w="13"/><text x="13.0259%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (138 samples, 0.23%)</title><rect x="12.5781%" y="1109" width="0.2256%" height="15" fill="rgb(237,157,21)" fg:x="7693" fg:w="138"/><text x="12.8281%" y="1119.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (149 samples, 0.24%)</title><rect x="12.5699%" y="1125" width="0.2436%" height="15" fill="rgb(222,94,11)" fg:x="7688" fg:w="149"/><text x="12.8199%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (23 samples, 0.04%)</title><rect x="12.8135%" y="1125" width="0.0376%" height="15" fill="rgb(249,113,6)" fg:x="7837" fg:w="23"/><text x="13.0635%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (23 samples, 0.04%)</title><rect x="12.8511%" y="1125" width="0.0376%" height="15" fill="rgb(238,137,36)" fg:x="7860" fg:w="23"/><text x="13.1011%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (18 samples, 0.03%)</title><rect x="12.8593%" y="1109" width="0.0294%" height="15" fill="rgb(210,102,26)" fg:x="7865" fg:w="18"/><text x="13.1093%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (240 samples, 0.39%)</title><rect x="12.5012%" y="1141" width="0.3924%" height="15" fill="rgb(218,30,30)" fg:x="7646" fg:w="240"/><text x="12.7512%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="12.8936%" y="1141" width="0.0164%" height="15" fill="rgb(214,67,26)" fg:x="7886" fg:w="10"/><text x="13.1436%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (278 samples, 0.45%)</title><rect x="12.4571%" y="1157" width="0.4545%" height="15" fill="rgb(251,9,53)" fg:x="7619" fg:w="278"/><text x="12.7071%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (297 samples, 0.49%)</title><rect x="12.4375%" y="1173" width="0.4856%" height="15" fill="rgb(228,204,25)" fg:x="7607" fg:w="297"/><text x="12.6875%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="12.9116%" y="1157" width="0.0114%" height="15" fill="rgb(207,153,8)" fg:x="7897" fg:w="7"/><text x="13.1616%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="12.9231%" y="1173" width="0.0131%" height="15" fill="rgb(242,9,16)" fg:x="7904" fg:w="8"/><text x="13.1731%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (349 samples, 0.57%)</title><rect x="12.3688%" y="1189" width="0.5706%" height="15" fill="rgb(217,211,10)" fg:x="7565" fg:w="349"/><text x="12.6188%" y="1199.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (360 samples, 0.59%)</title><rect x="12.3590%" y="1205" width="0.5886%" height="15" fill="rgb(219,228,52)" fg:x="7559" fg:w="360"/><text x="12.6090%" y="1215.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (383 samples, 0.63%)</title><rect x="12.3459%" y="1221" width="0.6262%" height="15" fill="rgb(231,92,29)" fg:x="7551" fg:w="383"/><text x="12.5959%" y="1231.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="12.9476%" y="1205" width="0.0245%" height="15" fill="rgb(232,8,23)" fg:x="7919" fg:w="15"/><text x="13.1976%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`_free (10 samples, 0.02%)</title><rect x="12.9934%" y="1173" width="0.0164%" height="15" fill="rgb(216,211,34)" fg:x="7947" fg:w="10"/><text x="13.2434%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="13.0097%" y="1173" width="0.0131%" height="15" fill="rgb(236,151,0)" fg:x="7957" fg:w="8"/><text x="13.2597%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="13.0244%" y="1173" width="0.0196%" height="15" fill="rgb(209,168,3)" fg:x="7966" fg:w="12"/><text x="13.2744%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_free (12 samples, 0.02%)</title><rect x="13.0506%" y="1157" width="0.0196%" height="15" fill="rgb(208,129,28)" fg:x="7982" fg:w="12"/><text x="13.3006%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.03%)</title><rect x="13.0702%" y="1157" width="0.0327%" height="15" fill="rgb(229,78,22)" fg:x="7994" fg:w="20"/><text x="13.3202%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.04%)</title><rect x="13.1356%" y="1141" width="0.0376%" height="15" fill="rgb(228,187,13)" fg:x="8034" fg:w="23"/><text x="13.3856%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.03%)</title><rect x="13.1421%" y="1125" width="0.0311%" height="15" fill="rgb(240,119,24)" fg:x="8038" fg:w="19"/><text x="13.3921%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="13.1601%" y="1109" width="0.0131%" height="15" fill="rgb(209,194,42)" fg:x="8049" fg:w="8"/><text x="13.4101%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (40 samples, 0.07%)</title><rect x="13.1144%" y="1157" width="0.0654%" height="15" fill="rgb(247,200,46)" fg:x="8021" fg:w="40"/><text x="13.3644%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_free (24 samples, 0.04%)</title><rect x="13.1912%" y="1141" width="0.0392%" height="15" fill="rgb(218,76,16)" fg:x="8068" fg:w="24"/><text x="13.4412%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (24 samples, 0.04%)</title><rect x="13.2304%" y="1141" width="0.0392%" height="15" fill="rgb(225,21,48)" fg:x="8092" fg:w="24"/><text x="13.4804%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (26 samples, 0.04%)</title><rect x="13.2958%" y="1125" width="0.0425%" height="15" fill="rgb(239,223,50)" fg:x="8132" fg:w="26"/><text x="13.5458%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.03%)</title><rect x="13.3056%" y="1109" width="0.0327%" height="15" fill="rgb(244,45,21)" fg:x="8138" fg:w="20"/><text x="13.5556%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (45 samples, 0.07%)</title><rect x="13.2762%" y="1141" width="0.0736%" height="15" fill="rgb(232,33,43)" fg:x="8120" fg:w="45"/><text x="13.5262%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (29 samples, 0.05%)</title><rect x="13.3629%" y="1125" width="0.0474%" height="15" fill="rgb(209,8,3)" fg:x="8173" fg:w="29"/><text x="13.6129%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.04%)</title><rect x="13.4364%" y="1109" width="0.0376%" height="15" fill="rgb(214,25,53)" fg:x="8218" fg:w="23"/><text x="13.6864%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.03%)</title><rect x="13.4479%" y="1093" width="0.0262%" height="15" fill="rgb(254,186,54)" fg:x="8225" fg:w="16"/><text x="13.6979%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (37 samples, 0.06%)</title><rect x="13.4185%" y="1125" width="0.0605%" height="15" fill="rgb(208,174,49)" fg:x="8207" fg:w="37"/><text x="13.6685%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="13.4871%" y="1109" width="0.0147%" height="15" fill="rgb(233,191,51)" fg:x="8249" fg:w="9"/><text x="13.7371%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="13.5018%" y="1109" width="0.0147%" height="15" fill="rgb(222,134,10)" fg:x="8258" fg:w="9"/><text x="13.7518%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_free (9 samples, 0.01%)</title><rect x="13.5198%" y="1093" width="0.0147%" height="15" fill="rgb(230,226,20)" fg:x="8269" fg:w="9"/><text x="13.7698%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (32 samples, 0.05%)</title><rect x="13.5476%" y="1077" width="0.0523%" height="15" fill="rgb(251,111,25)" fg:x="8286" fg:w="32"/><text x="13.7976%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="13.6081%" y="1061" width="0.0180%" height="15" fill="rgb(224,40,46)" fg:x="8323" fg:w="11"/><text x="13.8581%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="13.6147%" y="1045" width="0.0114%" height="15" fill="rgb(236,108,47)" fg:x="8327" fg:w="7"/><text x="13.8647%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 samples, 0.02%)</title><rect x="13.6065%" y="1077" width="0.0245%" height="15" fill="rgb(234,93,0)" fg:x="8322" fg:w="15"/><text x="13.8565%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.03%)</title><rect x="13.6637%" y="1045" width="0.0278%" height="15" fill="rgb(224,213,32)" fg:x="8357" fg:w="17"/><text x="13.9137%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="13.6752%" y="1029" width="0.0164%" height="15" fill="rgb(251,11,48)" fg:x="8364" fg:w="10"/><text x="13.9252%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (25 samples, 0.04%)</title><rect x="13.6555%" y="1061" width="0.0409%" height="15" fill="rgb(236,173,5)" fg:x="8352" fg:w="25"/><text x="13.9055%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="13.7079%" y="1045" width="0.0114%" height="15" fill="rgb(230,95,12)" fg:x="8384" fg:w="7"/><text x="13.9579%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21 samples, 0.03%)</title><rect x="13.7291%" y="1029" width="0.0343%" height="15" fill="rgb(232,209,1)" fg:x="8397" fg:w="21"/><text x="13.9791%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="13.7749%" y="1013" width="0.0114%" height="15" fill="rgb(232,6,1)" fg:x="8425" fg:w="7"/><text x="14.0249%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (16 samples, 0.03%)</title><rect x="13.7684%" y="1029" width="0.0262%" height="15" fill="rgb(210,224,50)" fg:x="8421" fg:w="16"/><text x="14.0184%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (44 samples, 0.07%)</title><rect x="13.7242%" y="1045" width="0.0719%" height="15" fill="rgb(228,127,35)" fg:x="8394" fg:w="44"/><text x="13.9742%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (62 samples, 0.10%)</title><rect x="13.6964%" y="1061" width="0.1014%" height="15" fill="rgb(245,102,45)" fg:x="8377" fg:w="62"/><text x="13.9464%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="13.8060%" y="1029" width="0.0131%" height="15" fill="rgb(214,1,49)" fg:x="8444" fg:w="8"/><text x="14.0560%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (508 samples, 0.83%)</title><rect x="12.9901%" y="1189" width="0.8306%" height="15" fill="rgb(226,163,40)" fg:x="7945" fg:w="508"/><text x="13.2401%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (475 samples, 0.78%)</title><rect x="13.0440%" y="1173" width="0.7766%" height="15" fill="rgb(239,212,28)" fg:x="7978" fg:w="475"/><text x="13.2940%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (392 samples, 0.64%)</title><rect x="13.1798%" y="1157" width="0.6409%" height="15" fill="rgb(220,20,13)" fg:x="8061" fg:w="392"/><text x="13.4298%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (288 samples, 0.47%)</title><rect x="13.3498%" y="1141" width="0.4709%" height="15" fill="rgb(210,164,35)" fg:x="8165" fg:w="288"/><text x="13.5998%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (209 samples, 0.34%)</title><rect x="13.4790%" y="1125" width="0.3417%" height="15" fill="rgb(248,109,41)" fg:x="8244" fg:w="209"/><text x="13.7290%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (186 samples, 0.30%)</title><rect x="13.5166%" y="1109" width="0.3041%" height="15" fill="rgb(238,23,50)" fg:x="8267" fg:w="186"/><text x="13.7666%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (169 samples, 0.28%)</title><rect x="13.5444%" y="1093" width="0.2763%" height="15" fill="rgb(211,48,49)" fg:x="8284" fg:w="169"/><text x="13.7944%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (116 samples, 0.19%)</title><rect x="13.6310%" y="1077" width="0.1897%" height="15" fill="rgb(223,36,21)" fg:x="8337" fg:w="116"/><text x="13.8810%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 0.02%)</title><rect x="13.7994%" y="1061" width="0.0213%" height="15" fill="rgb(207,123,46)" fg:x="8440" fg:w="13"/><text x="14.0494%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="13.8043%" y="1045" width="0.0164%" height="15" fill="rgb(240,218,32)" fg:x="8443" fg:w="10"/><text x="14.0543%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.04%)</title><rect x="13.8288%" y="1173" width="0.0360%" height="15" fill="rgb(252,5,43)" fg:x="8458" fg:w="22"/><text x="14.0788%" y="1183.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.03%)</title><rect x="13.8697%" y="1173" width="0.0294%" height="15" fill="rgb(252,84,19)" fg:x="8483" fg:w="18"/><text x="14.1197%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="13.9319%" y="1157" width="0.0180%" height="15" fill="rgb(243,152,39)" fg:x="8521" fg:w="11"/><text x="14.1819%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.03%)</title><rect x="13.9498%" y="1157" width="0.0343%" height="15" fill="rgb(234,160,15)" fg:x="8532" fg:w="21"/><text x="14.1998%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.01%)</title><rect x="14.0152%" y="1093" width="0.0114%" height="15" fill="rgb(237,34,20)" fg:x="8572" fg:w="7"/><text x="14.2652%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.04%)</title><rect x="14.0054%" y="1125" width="0.0409%" height="15" fill="rgb(229,97,13)" fg:x="8566" fg:w="25"/><text x="14.2554%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.04%)</title><rect x="14.0103%" y="1109" width="0.0360%" height="15" fill="rgb(234,71,50)" fg:x="8569" fg:w="22"/><text x="14.2603%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="14.0267%" y="1093" width="0.0196%" height="15" fill="rgb(253,155,4)" fg:x="8579" fg:w="12"/><text x="14.2767%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (30 samples, 0.05%)</title><rect x="13.9989%" y="1141" width="0.0491%" height="15" fill="rgb(222,185,37)" fg:x="8562" fg:w="30"/><text x="14.2489%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (40 samples, 0.07%)</title><rect x="13.9842%" y="1157" width="0.0654%" height="15" fill="rgb(251,177,13)" fg:x="8553" fg:w="40"/><text x="14.2342%" y="1167.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (87 samples, 0.14%)</title><rect x="13.9122%" y="1173" width="0.1422%" height="15" fill="rgb(250,179,40)" fg:x="8509" fg:w="87"/><text x="14.1622%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.02%)</title><rect x="14.0806%" y="1157" width="0.0196%" height="15" fill="rgb(242,44,2)" fg:x="8612" fg:w="12"/><text x="14.3306%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="14.1281%" y="1125" width="0.0147%" height="15" fill="rgb(216,177,13)" fg:x="8641" fg:w="9"/><text x="14.3781%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="14.1297%" y="1109" width="0.0131%" height="15" fill="rgb(216,106,43)" fg:x="8642" fg:w="8"/><text x="14.3797%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (16 samples, 0.03%)</title><rect x="14.1231%" y="1141" width="0.0262%" height="15" fill="rgb(216,183,2)" fg:x="8638" fg:w="16"/><text x="14.3731%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (28 samples, 0.05%)</title><rect x="14.1052%" y="1157" width="0.0458%" height="15" fill="rgb(249,75,3)" fg:x="8627" fg:w="28"/><text x="14.3552%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="14.1935%" y="1125" width="0.0114%" height="15" fill="rgb(219,67,39)" fg:x="8681" fg:w="7"/><text x="14.4435%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (27 samples, 0.04%)</title><rect x="14.2196%" y="1125" width="0.0441%" height="15" fill="rgb(253,228,2)" fg:x="8697" fg:w="27"/><text x="14.4696%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (21 samples, 0.03%)</title><rect x="14.2294%" y="1109" width="0.0343%" height="15" fill="rgb(235,138,27)" fg:x="8703" fg:w="21"/><text x="14.4794%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="14.2376%" y="1093" width="0.0262%" height="15" fill="rgb(236,97,51)" fg:x="8708" fg:w="16"/><text x="14.4876%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.02%)</title><rect x="14.2392%" y="1077" width="0.0245%" height="15" fill="rgb(240,80,30)" fg:x="8709" fg:w="15"/><text x="14.4892%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="14.2490%" y="1061" width="0.0147%" height="15" fill="rgb(230,178,19)" fg:x="8715" fg:w="9"/><text x="14.4990%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="14.3324%" y="1061" width="0.0262%" height="15" fill="rgb(210,190,27)" fg:x="8766" fg:w="16"/><text x="14.5824%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.02%)</title><rect x="14.3390%" y="1045" width="0.0196%" height="15" fill="rgb(222,107,31)" fg:x="8770" fg:w="12"/><text x="14.5890%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.01%)</title><rect x="14.3471%" y="1029" width="0.0114%" height="15" fill="rgb(216,127,34)" fg:x="8775" fg:w="7"/><text x="14.5971%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (23 samples, 0.04%)</title><rect x="14.3226%" y="1093" width="0.0376%" height="15" fill="rgb(234,116,52)" fg:x="8760" fg:w="23"/><text x="14.5726%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (20 samples, 0.03%)</title><rect x="14.3275%" y="1077" width="0.0327%" height="15" fill="rgb(222,124,15)" fg:x="8763" fg:w="20"/><text x="14.5775%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="14.3897%" y="1077" width="0.0131%" height="15" fill="rgb(231,179,28)" fg:x="8801" fg:w="8"/><text x="14.6397%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="14.4027%" y="1077" width="0.0164%" height="15" fill="rgb(226,93,45)" fg:x="8809" fg:w="10"/><text x="14.6527%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14 samples, 0.02%)</title><rect x="14.4485%" y="1061" width="0.0229%" height="15" fill="rgb(215,8,51)" fg:x="8837" fg:w="14"/><text x="14.6985%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.02%)</title><rect x="14.5450%" y="997" width="0.0164%" height="15" fill="rgb(223,106,5)" fg:x="8896" fg:w="10"/><text x="14.7950%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.05%)</title><rect x="14.5417%" y="1029" width="0.0540%" height="15" fill="rgb(250,191,5)" fg:x="8894" fg:w="33"/><text x="14.7917%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.05%)</title><rect x="14.5417%" y="1013" width="0.0540%" height="15" fill="rgb(242,132,44)" fg:x="8894" fg:w="33"/><text x="14.7917%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (21 samples, 0.03%)</title><rect x="14.5613%" y="997" width="0.0343%" height="15" fill="rgb(251,152,29)" fg:x="8906" fg:w="21"/><text x="14.8113%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (46 samples, 0.08%)</title><rect x="14.5286%" y="1045" width="0.0752%" height="15" fill="rgb(218,179,5)" fg:x="8886" fg:w="46"/><text x="14.7786%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (66 samples, 0.11%)</title><rect x="14.4992%" y="1061" width="0.1079%" height="15" fill="rgb(227,67,19)" fg:x="8868" fg:w="66"/><text x="14.7492%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (15 samples, 0.02%)</title><rect x="14.6349%" y="1045" width="0.0245%" height="15" fill="rgb(233,119,31)" fg:x="8951" fg:w="15"/><text x="14.8849%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="14.6905%" y="997" width="0.0147%" height="15" fill="rgb(241,120,22)" fg:x="8985" fg:w="9"/><text x="14.9405%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="14.6905%" y="981" width="0.0147%" height="15" fill="rgb(224,102,30)" fg:x="8985" fg:w="9"/><text x="14.9405%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.02%)</title><rect x="14.6872%" y="1029" width="0.0213%" height="15" fill="rgb(210,164,37)" fg:x="8983" fg:w="13"/><text x="14.9372%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (13 samples, 0.02%)</title><rect x="14.6872%" y="1013" width="0.0213%" height="15" fill="rgb(226,191,16)" fg:x="8983" fg:w="13"/><text x="14.9372%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (30 samples, 0.05%)</title><rect x="14.6741%" y="1045" width="0.0491%" height="15" fill="rgb(214,40,45)" fg:x="8975" fg:w="30"/><text x="14.9241%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.01%)</title><rect x="14.7117%" y="1029" width="0.0114%" height="15" fill="rgb(244,29,26)" fg:x="8998" fg:w="7"/><text x="14.9617%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="14.7395%" y="1029" width="0.0114%" height="15" fill="rgb(216,16,5)" fg:x="9015" fg:w="7"/><text x="14.9895%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="14.7510%" y="1029" width="0.0131%" height="15" fill="rgb(249,76,35)" fg:x="9022" fg:w="8"/><text x="15.0010%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (23 samples, 0.04%)</title><rect x="14.7935%" y="1013" width="0.0376%" height="15" fill="rgb(207,11,44)" fg:x="9048" fg:w="23"/><text x="15.0435%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="14.8311%" y="1013" width="0.0131%" height="15" fill="rgb(228,190,49)" fg:x="9071" fg:w="8"/><text x="15.0811%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="14.9194%" y="981" width="0.0229%" height="15" fill="rgb(214,173,12)" fg:x="9125" fg:w="14"/><text x="15.1694%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="14.9259%" y="965" width="0.0164%" height="15" fill="rgb(218,26,35)" fg:x="9129" fg:w="10"/><text x="15.1759%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (24 samples, 0.04%)</title><rect x="14.9096%" y="997" width="0.0392%" height="15" fill="rgb(220,200,19)" fg:x="9119" fg:w="24"/><text x="15.1596%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (49 samples, 0.08%)</title><rect x="14.8736%" y="1013" width="0.0801%" height="15" fill="rgb(239,95,49)" fg:x="9097" fg:w="49"/><text x="15.1236%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="14.9815%" y="997" width="0.0180%" height="15" fill="rgb(235,85,53)" fg:x="9163" fg:w="11"/><text x="15.2315%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (16 samples, 0.03%)</title><rect x="15.0420%" y="981" width="0.0262%" height="15" fill="rgb(233,133,31)" fg:x="9200" fg:w="16"/><text x="15.2920%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (14 samples, 0.02%)</title><rect x="15.0453%" y="965" width="0.0229%" height="15" fill="rgb(218,25,20)" fg:x="9202" fg:w="14"/><text x="15.2953%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="15.0453%" y="949" width="0.0229%" height="15" fill="rgb(252,210,38)" fg:x="9202" fg:w="14"/><text x="15.2953%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.02%)</title><rect x="15.0486%" y="933" width="0.0196%" height="15" fill="rgb(242,134,21)" fg:x="9204" fg:w="12"/><text x="15.2986%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (7 samples, 0.01%)</title><rect x="15.0943%" y="933" width="0.0114%" height="15" fill="rgb(213,28,48)" fg:x="9232" fg:w="7"/><text x="15.3443%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.01%)</title><rect x="15.0927%" y="949" width="0.0147%" height="15" fill="rgb(250,196,2)" fg:x="9231" fg:w="9"/><text x="15.3427%" y="959.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (29 samples, 0.05%)</title><rect x="15.0813%" y="965" width="0.0474%" height="15" fill="rgb(227,5,17)" fg:x="9224" fg:w="29"/><text x="15.3313%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 0.02%)</title><rect x="15.1074%" y="949" width="0.0213%" height="15" fill="rgb(221,226,24)" fg:x="9240" fg:w="13"/><text x="15.3574%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.02%)</title><rect x="15.1091%" y="933" width="0.0196%" height="15" fill="rgb(211,5,48)" fg:x="9241" fg:w="12"/><text x="15.3591%" y="943.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (67 samples, 0.11%)</title><rect x="15.0208%" y="997" width="0.1095%" height="15" fill="rgb(219,150,6)" fg:x="9187" fg:w="67"/><text x="15.2708%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 0.06%)</title><rect x="15.0682%" y="981" width="0.0621%" height="15" fill="rgb(251,46,16)" fg:x="9216" fg:w="38"/><text x="15.3182%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="15.1941%" y="965" width="0.0131%" height="15" fill="rgb(220,204,40)" fg:x="9293" fg:w="8"/><text x="15.4441%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (23 samples, 0.04%)</title><rect x="15.2268%" y="949" width="0.0376%" height="15" fill="rgb(211,85,2)" fg:x="9313" fg:w="23"/><text x="15.4768%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.04%)</title><rect x="15.2284%" y="933" width="0.0360%" height="15" fill="rgb(229,17,7)" fg:x="9314" fg:w="22"/><text x="15.4784%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.03%)</title><rect x="15.2349%" y="917" width="0.0294%" height="15" fill="rgb(239,72,28)" fg:x="9318" fg:w="18"/><text x="15.4849%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="15.2464%" y="901" width="0.0180%" height="15" fill="rgb(230,47,54)" fg:x="9325" fg:w="11"/><text x="15.4964%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (32 samples, 0.05%)</title><rect x="15.2137%" y="965" width="0.0523%" height="15" fill="rgb(214,50,8)" fg:x="9305" fg:w="32"/><text x="15.4637%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (76 samples, 0.12%)</title><rect x="15.1712%" y="981" width="0.1243%" height="15" fill="rgb(216,198,43)" fg:x="9279" fg:w="76"/><text x="15.4212%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 0.02%)</title><rect x="15.2742%" y="965" width="0.0213%" height="15" fill="rgb(234,20,35)" fg:x="9342" fg:w="13"/><text x="15.5242%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="15.2807%" y="949" width="0.0147%" height="15" fill="rgb(254,45,19)" fg:x="9346" fg:w="9"/><text x="15.5307%" y="959.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (321 samples, 0.52%)</title><rect x="14.7755%" y="1029" width="0.5248%" height="15" fill="rgb(219,14,44)" fg:x="9037" fg:w="321"/><text x="15.0255%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (208 samples, 0.34%)</title><rect x="14.9603%" y="1013" width="0.3401%" height="15" fill="rgb(217,220,26)" fg:x="9150" fg:w="208"/><text x="15.2103%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (104 samples, 0.17%)</title><rect x="15.1303%" y="997" width="0.1700%" height="15" fill="rgb(213,158,28)" fg:x="9254" fg:w="104"/><text x="15.3803%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (617 samples, 1.01%)</title><rect x="14.2932%" y="1109" width="1.0088%" height="15" fill="rgb(252,51,52)" fg:x="8742" fg:w="617"/><text x="14.5432%" y="1119.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (572 samples, 0.94%)</title><rect x="14.3668%" y="1093" width="0.9352%" height="15" fill="rgb(246,89,16)" fg:x="8787" fg:w="572"/><text x="14.6168%" y="1103.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (533 samples, 0.87%)</title><rect x="14.4305%" y="1077" width="0.8715%" height="15" fill="rgb(216,158,49)" fg:x="8826" fg:w="533"/><text x="14.6805%" y="1087.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (422 samples, 0.69%)</title><rect x="14.6120%" y="1061" width="0.6900%" height="15" fill="rgb(236,107,19)" fg:x="8937" fg:w="422"/><text x="14.8620%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (354 samples, 0.58%)</title><rect x="14.7232%" y="1045" width="0.5788%" height="15" fill="rgb(228,185,30)" fg:x="9005" fg:w="354"/><text x="14.9732%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (691 samples, 1.13%)</title><rect x="14.1738%" y="1141" width="1.1298%" height="15" fill="rgb(246,134,8)" fg:x="8669" fg:w="691"/><text x="14.4238%" y="1151.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (632 samples, 1.03%)</title><rect x="14.2703%" y="1125" width="1.0333%" height="15" fill="rgb(214,143,50)" fg:x="8728" fg:w="632"/><text x="14.5203%" y="1135.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (909 samples, 1.49%)</title><rect x="13.8239%" y="1189" width="1.4862%" height="15" fill="rgb(228,75,8)" fg:x="8455" fg:w="909"/><text x="14.0739%" y="1199.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (760 samples, 1.24%)</title><rect x="14.0676%" y="1173" width="1.2426%" height="15" fill="rgb(207,175,4)" fg:x="8604" fg:w="760"/><text x="14.3176%" y="1183.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (707 samples, 1.16%)</title><rect x="14.1542%" y="1157" width="1.1559%" height="15" fill="rgb(205,108,24)" fg:x="8657" fg:w="707"/><text x="14.4042%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.01%)</title><rect x="15.3347%" y="1141" width="0.0114%" height="15" fill="rgb(244,120,49)" fg:x="9379" fg:w="7"/><text x="15.5847%" y="1151.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.02%)</title><rect x="15.3543%" y="1125" width="0.0196%" height="15" fill="rgb(223,47,38)" fg:x="9391" fg:w="12"/><text x="15.6043%" y="1135.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.02%)</title><rect x="15.4083%" y="1077" width="0.0213%" height="15" fill="rgb(229,179,11)" fg:x="9424" fg:w="13"/><text x="15.6583%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.02%)</title><rect x="15.4295%" y="1077" width="0.0180%" height="15" fill="rgb(231,122,1)" fg:x="9437" fg:w="11"/><text x="15.6795%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (31 samples, 0.05%)</title><rect x="15.3985%" y="1093" width="0.0507%" height="15" fill="rgb(245,119,9)" fg:x="9418" fg:w="31"/><text x="15.6485%" y="1103.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (41 samples, 0.07%)</title><rect x="15.3886%" y="1109" width="0.0670%" height="15" fill="rgb(241,163,25)" fg:x="9412" fg:w="41"/><text x="15.6386%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (56 samples, 0.09%)</title><rect x="15.3739%" y="1125" width="0.0916%" height="15" fill="rgb(217,214,3)" fg:x="9403" fg:w="56"/><text x="15.6239%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (80 samples, 0.13%)</title><rect x="15.3461%" y="1141" width="0.1308%" height="15" fill="rgb(240,86,28)" fg:x="9386" fg:w="80"/><text x="15.5961%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="15.4655%" y="1125" width="0.0114%" height="15" fill="rgb(215,47,9)" fg:x="9459" fg:w="7"/><text x="15.7155%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (94 samples, 0.15%)</title><rect x="15.3265%" y="1157" width="0.1537%" height="15" fill="rgb(252,25,45)" fg:x="9374" fg:w="94"/><text x="15.5765%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (103 samples, 0.17%)</title><rect x="15.3151%" y="1173" width="0.1684%" height="15" fill="rgb(251,164,9)" fg:x="9367" fg:w="103"/><text x="15.5651%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="15.5113%" y="1141" width="0.0131%" height="15" fill="rgb(233,194,0)" fg:x="9487" fg:w="8"/><text x="15.7613%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="15.5342%" y="1125" width="0.0114%" height="15" fill="rgb(249,111,24)" fg:x="9501" fg:w="7"/><text x="15.7842%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 samples, 0.02%)</title><rect x="15.5260%" y="1141" width="0.0245%" height="15" fill="rgb(250,223,3)" fg:x="9496" fg:w="15"/><text x="15.7760%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (9 samples, 0.01%)</title><rect x="15.5587%" y="1125" width="0.0147%" height="15" fill="rgb(236,178,37)" fg:x="9516" fg:w="9"/><text x="15.8087%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.03%)</title><rect x="15.5734%" y="1125" width="0.0327%" height="15" fill="rgb(241,158,50)" fg:x="9525" fg:w="20"/><text x="15.8234%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="15.6192%" y="1109" width="0.0196%" height="15" fill="rgb(213,121,41)" fg:x="9553" fg:w="12"/><text x="15.8692%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="15.6274%" y="1093" width="0.0114%" height="15" fill="rgb(240,92,3)" fg:x="9558" fg:w="7"/><text x="15.8774%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="15.6110%" y="1125" width="0.0311%" height="15" fill="rgb(205,123,3)" fg:x="9548" fg:w="19"/><text x="15.8610%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_free (12 samples, 0.02%)</title><rect x="15.6535%" y="1109" width="0.0196%" height="15" fill="rgb(205,97,47)" fg:x="9574" fg:w="12"/><text x="15.9035%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (28 samples, 0.05%)</title><rect x="15.6731%" y="1109" width="0.0458%" height="15" fill="rgb(247,152,14)" fg:x="9586" fg:w="28"/><text x="15.9231%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.04%)</title><rect x="15.7483%" y="1093" width="0.0360%" height="15" fill="rgb(248,195,53)" fg:x="9632" fg:w="22"/><text x="15.9983%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.03%)</title><rect x="15.7549%" y="1077" width="0.0294%" height="15" fill="rgb(226,201,16)" fg:x="9636" fg:w="18"/><text x="16.0049%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (35 samples, 0.06%)</title><rect x="15.7369%" y="1109" width="0.0572%" height="15" fill="rgb(205,98,0)" fg:x="9625" fg:w="35"/><text x="15.9869%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (29 samples, 0.05%)</title><rect x="15.8137%" y="1093" width="0.0474%" height="15" fill="rgb(214,191,48)" fg:x="9672" fg:w="29"/><text x="16.0637%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.03%)</title><rect x="15.8890%" y="1077" width="0.0278%" height="15" fill="rgb(237,112,39)" fg:x="9718" fg:w="17"/><text x="16.1390%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.02%)</title><rect x="15.8939%" y="1061" width="0.0229%" height="15" fill="rgb(247,203,27)" fg:x="9721" fg:w="14"/><text x="16.1439%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (35 samples, 0.06%)</title><rect x="15.8693%" y="1093" width="0.0572%" height="15" fill="rgb(235,124,28)" fg:x="9706" fg:w="35"/><text x="16.1193%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="15.9364%" y="1077" width="0.0131%" height="15" fill="rgb(208,207,46)" fg:x="9747" fg:w="8"/><text x="16.1864%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="15.9494%" y="1077" width="0.0114%" height="15" fill="rgb(234,176,4)" fg:x="9755" fg:w="7"/><text x="16.1994%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="15.9707%" y="1077" width="0.0164%" height="15" fill="rgb(230,133,28)" fg:x="9768" fg:w="10"/><text x="16.2207%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.03%)</title><rect x="15.9969%" y="1061" width="0.0327%" height="15" fill="rgb(211,137,40)" fg:x="9784" fg:w="20"/><text x="16.2469%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.03%)</title><rect x="16.0557%" y="1045" width="0.0278%" height="15" fill="rgb(254,35,13)" fg:x="9820" fg:w="17"/><text x="16.3057%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="16.0672%" y="1029" width="0.0164%" height="15" fill="rgb(225,49,51)" fg:x="9827" fg:w="10"/><text x="16.3172%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (27 samples, 0.04%)</title><rect x="16.0410%" y="1061" width="0.0441%" height="15" fill="rgb(251,10,15)" fg:x="9811" fg:w="27"/><text x="16.2910%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_free (17 samples, 0.03%)</title><rect x="16.1031%" y="1045" width="0.0278%" height="15" fill="rgb(228,207,15)" fg:x="9849" fg:w="17"/><text x="16.3531%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="16.1309%" y="1045" width="0.0213%" height="15" fill="rgb(241,99,19)" fg:x="9866" fg:w="13"/><text x="16.3809%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="16.1669%" y="1029" width="0.0196%" height="15" fill="rgb(207,104,49)" fg:x="9888" fg:w="12"/><text x="16.4169%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (22 samples, 0.04%)</title><rect x="16.1571%" y="1045" width="0.0360%" height="15" fill="rgb(234,99,18)" fg:x="9882" fg:w="22"/><text x="16.4071%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.03%)</title><rect x="16.2012%" y="1029" width="0.0327%" height="15" fill="rgb(213,191,49)" fg:x="9909" fg:w="20"/><text x="16.4512%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.04%)</title><rect x="16.2519%" y="1013" width="0.0392%" height="15" fill="rgb(210,226,19)" fg:x="9940" fg:w="24"/><text x="16.5019%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.03%)</title><rect x="16.2617%" y="997" width="0.0294%" height="15" fill="rgb(229,97,18)" fg:x="9946" fg:w="18"/><text x="16.5117%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (38 samples, 0.06%)</title><rect x="16.2388%" y="1029" width="0.0621%" height="15" fill="rgb(211,167,15)" fg:x="9932" fg:w="38"/><text x="16.4888%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (490 samples, 0.80%)</title><rect x="15.5015%" y="1157" width="0.8012%" height="15" fill="rgb(210,169,34)" fg:x="9481" fg:w="490"/><text x="15.7515%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (460 samples, 0.75%)</title><rect x="15.5505%" y="1141" width="0.7521%" height="15" fill="rgb(241,121,31)" fg:x="9511" fg:w="460"/><text x="15.8005%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (404 samples, 0.66%)</title><rect x="15.6421%" y="1125" width="0.6605%" height="15" fill="rgb(232,40,11)" fg:x="9567" fg:w="404"/><text x="15.8921%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (311 samples, 0.51%)</title><rect x="15.7941%" y="1109" width="0.5085%" height="15" fill="rgb(205,86,26)" fg:x="9660" fg:w="311"/><text x="16.0441%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (230 samples, 0.38%)</title><rect x="15.9266%" y="1093" width="0.3761%" height="15" fill="rgb(231,126,28)" fg:x="9741" fg:w="230"/><text x="16.1766%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (193 samples, 0.32%)</title><rect x="15.9871%" y="1077" width="0.3156%" height="15" fill="rgb(219,221,18)" fg:x="9778" fg:w="193"/><text x="16.2371%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (133 samples, 0.22%)</title><rect x="16.0852%" y="1061" width="0.2175%" height="15" fill="rgb(211,40,0)" fg:x="9838" fg:w="133"/><text x="16.3352%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (67 samples, 0.11%)</title><rect x="16.1931%" y="1045" width="0.1095%" height="15" fill="rgb(239,85,43)" fg:x="9904" fg:w="67"/><text x="16.4431%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (495 samples, 0.81%)</title><rect x="15.4949%" y="1173" width="0.8093%" height="15" fill="rgb(231,55,21)" fg:x="9477" fg:w="495"/><text x="15.7449%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (8 samples, 0.01%)</title><rect x="16.3271%" y="1141" width="0.0131%" height="15" fill="rgb(225,184,43)" fg:x="9986" fg:w="8"/><text x="16.5771%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="16.3091%" y="1157" width="0.0327%" height="15" fill="rgb(251,158,41)" fg:x="9975" fg:w="20"/><text x="16.5591%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="16.3533%" y="1141" width="0.0131%" height="15" fill="rgb(234,159,37)" fg:x="10002" fg:w="8"/><text x="16.6033%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="16.3713%" y="1141" width="0.0131%" height="15" fill="rgb(216,204,22)" fg:x="10013" fg:w="8"/><text x="16.6213%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="16.3729%" y="1125" width="0.0114%" height="15" fill="rgb(214,17,3)" fg:x="10014" fg:w="7"/><text x="16.6229%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="16.4122%" y="1109" width="0.0147%" height="15" fill="rgb(212,111,17)" fg:x="10038" fg:w="9"/><text x="16.6622%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="16.4122%" y="1093" width="0.0147%" height="15" fill="rgb(221,157,24)" fg:x="10038" fg:w="9"/><text x="16.6622%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (37 samples, 0.06%)</title><rect x="16.4318%" y="1109" width="0.0605%" height="15" fill="rgb(252,16,13)" fg:x="10050" fg:w="37"/><text x="16.6818%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (53 samples, 0.09%)</title><rect x="16.4089%" y="1125" width="0.0867%" height="15" fill="rgb(221,62,2)" fg:x="10036" fg:w="53"/><text x="16.6589%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="16.5364%" y="1109" width="0.0164%" height="15" fill="rgb(247,87,22)" fg:x="10114" fg:w="10"/><text x="16.7864%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="16.5528%" y="1109" width="0.0213%" height="15" fill="rgb(215,73,9)" fg:x="10124" fg:w="13"/><text x="16.8028%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="16.5593%" y="1093" width="0.0147%" height="15" fill="rgb(207,175,33)" fg:x="10128" fg:w="9"/><text x="16.8093%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.04%)</title><rect x="16.6198%" y="1077" width="0.0360%" height="15" fill="rgb(243,129,54)" fg:x="10165" fg:w="22"/><text x="16.8698%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.03%)</title><rect x="16.6280%" y="1061" width="0.0278%" height="15" fill="rgb(227,119,45)" fg:x="10170" fg:w="17"/><text x="16.8780%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="16.6329%" y="1045" width="0.0229%" height="15" fill="rgb(205,109,36)" fg:x="10173" fg:w="14"/><text x="16.8829%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (25 samples, 0.04%)</title><rect x="16.6672%" y="1077" width="0.0409%" height="15" fill="rgb(205,6,39)" fg:x="10194" fg:w="25"/><text x="16.9172%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="16.6966%" y="1061" width="0.0114%" height="15" fill="rgb(221,32,16)" fg:x="10212" fg:w="7"/><text x="16.9466%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (67 samples, 0.11%)</title><rect x="16.6018%" y="1093" width="0.1095%" height="15" fill="rgb(228,144,50)" fg:x="10154" fg:w="67"/><text x="16.8518%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (7 samples, 0.01%)</title><rect x="16.8111%" y="1029" width="0.0114%" height="15" fill="rgb(229,201,53)" fg:x="10282" fg:w="7"/><text x="17.0611%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.04%)</title><rect x="16.8095%" y="1045" width="0.0441%" height="15" fill="rgb(249,153,27)" fg:x="10281" fg:w="27"/><text x="17.0595%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.03%)</title><rect x="16.8242%" y="1029" width="0.0294%" height="15" fill="rgb(227,106,25)" fg:x="10290" fg:w="18"/><text x="17.0742%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="16.8373%" y="1013" width="0.0164%" height="15" fill="rgb(230,65,29)" fg:x="10298" fg:w="10"/><text x="17.0873%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (29 samples, 0.05%)</title><rect x="16.8569%" y="1045" width="0.0474%" height="15" fill="rgb(221,57,46)" fg:x="10310" fg:w="29"/><text x="17.1069%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (63 samples, 0.10%)</title><rect x="16.8046%" y="1061" width="0.1030%" height="15" fill="rgb(229,161,17)" fg:x="10278" fg:w="63"/><text x="17.0546%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="16.9076%" y="1061" width="0.0147%" height="15" fill="rgb(222,213,11)" fg:x="10341" fg:w="9"/><text x="17.1576%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="16.9550%" y="1045" width="0.0164%" height="15" fill="rgb(235,35,13)" fg:x="10370" fg:w="10"/><text x="17.2050%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="16.9762%" y="1045" width="0.0327%" height="15" fill="rgb(233,158,34)" fg:x="10383" fg:w="20"/><text x="17.2262%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (18 samples, 0.03%)</title><rect x="16.9795%" y="1029" width="0.0294%" height="15" fill="rgb(215,151,48)" fg:x="10385" fg:w="18"/><text x="17.2295%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="17.0416%" y="1029" width="0.0131%" height="15" fill="rgb(229,84,14)" fg:x="10423" fg:w="8"/><text x="17.2916%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="17.0547%" y="1029" width="0.0164%" height="15" fill="rgb(229,68,14)" fg:x="10431" fg:w="10"/><text x="17.3047%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="17.0711%" y="1029" width="0.0196%" height="15" fill="rgb(243,106,26)" fg:x="10441" fg:w="12"/><text x="17.3211%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="17.0776%" y="1013" width="0.0131%" height="15" fill="rgb(206,45,38)" fg:x="10445" fg:w="8"/><text x="17.3276%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.04%)</title><rect x="17.0907%" y="1029" width="0.0360%" height="15" fill="rgb(226,6,15)" fg:x="10453" fg:w="22"/><text x="17.3407%" y="1039.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (7 samples, 0.01%)</title><rect x="17.1152%" y="1013" width="0.0114%" height="15" fill="rgb(232,22,54)" fg:x="10468" fg:w="7"/><text x="17.3652%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="17.1561%" y="981" width="0.0131%" height="15" fill="rgb(229,222,32)" fg:x="10493" fg:w="8"/><text x="17.4061%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (41 samples, 0.07%)</title><rect x="17.1512%" y="997" width="0.0670%" height="15" fill="rgb(228,62,29)" fg:x="10490" fg:w="41"/><text x="17.4012%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (27 samples, 0.04%)</title><rect x="17.1741%" y="981" width="0.0441%" height="15" fill="rgb(251,103,34)" fg:x="10504" fg:w="27"/><text x="17.4241%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.02%)</title><rect x="17.2395%" y="981" width="0.0229%" height="15" fill="rgb(233,12,30)" fg:x="10544" fg:w="14"/><text x="17.4895%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.02%)</title><rect x="17.2705%" y="981" width="0.0229%" height="15" fill="rgb(238,52,0)" fg:x="10563" fg:w="14"/><text x="17.5205%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="17.3000%" y="981" width="0.0262%" height="15" fill="rgb(223,98,5)" fg:x="10581" fg:w="16"/><text x="17.5500%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14 samples, 0.02%)</title><rect x="17.3032%" y="965" width="0.0229%" height="15" fill="rgb(228,75,37)" fg:x="10583" fg:w="14"/><text x="17.5532%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="17.3801%" y="949" width="0.0213%" height="15" fill="rgb(205,115,49)" fg:x="10630" fg:w="13"/><text x="17.6301%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="17.3833%" y="933" width="0.0180%" height="15" fill="rgb(250,154,43)" fg:x="10632" fg:w="11"/><text x="17.6333%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (29 samples, 0.05%)</title><rect x="17.3735%" y="965" width="0.0474%" height="15" fill="rgb(226,43,29)" fg:x="10626" fg:w="29"/><text x="17.6235%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (12 samples, 0.02%)</title><rect x="17.4013%" y="949" width="0.0196%" height="15" fill="rgb(249,228,39)" fg:x="10643" fg:w="12"/><text x="17.6513%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="17.4700%" y="933" width="0.0327%" height="15" fill="rgb(216,79,43)" fg:x="10685" fg:w="20"/><text x="17.7200%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (11 samples, 0.02%)</title><rect x="17.4847%" y="917" width="0.0180%" height="15" fill="rgb(228,95,12)" fg:x="10694" fg:w="11"/><text x="17.7347%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.04%)</title><rect x="17.5060%" y="933" width="0.0392%" height="15" fill="rgb(249,221,15)" fg:x="10707" fg:w="24"/><text x="17.7560%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 0.11%)</title><rect x="17.4340%" y="965" width="0.1128%" height="15" fill="rgb(233,34,13)" fg:x="10663" fg:w="69"/><text x="17.6840%" y="975.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (56 samples, 0.09%)</title><rect x="17.4553%" y="949" width="0.0916%" height="15" fill="rgb(214,103,39)" fg:x="10676" fg:w="56"/><text x="17.7053%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.02%)</title><rect x="17.5926%" y="917" width="0.0245%" height="15" fill="rgb(251,126,39)" fg:x="10760" fg:w="15"/><text x="17.8426%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="17.5992%" y="901" width="0.0180%" height="15" fill="rgb(214,216,36)" fg:x="10764" fg:w="11"/><text x="17.8492%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (20 samples, 0.03%)</title><rect x="17.6188%" y="917" width="0.0327%" height="15" fill="rgb(220,221,8)" fg:x="10776" fg:w="20"/><text x="17.8688%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (42 samples, 0.07%)</title><rect x="17.5861%" y="933" width="0.0687%" height="15" fill="rgb(240,216,3)" fg:x="10756" fg:w="42"/><text x="17.8361%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="17.6924%" y="917" width="0.0229%" height="15" fill="rgb(232,218,17)" fg:x="10821" fg:w="14"/><text x="17.9424%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="17.7022%" y="901" width="0.0131%" height="15" fill="rgb(229,163,45)" fg:x="10827" fg:w="8"/><text x="17.9522%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="17.7267%" y="901" width="0.0114%" height="15" fill="rgb(231,110,42)" fg:x="10842" fg:w="7"/><text x="17.9767%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (24 samples, 0.04%)</title><rect x="17.7381%" y="901" width="0.0392%" height="15" fill="rgb(208,170,48)" fg:x="10849" fg:w="24"/><text x="17.9881%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (22 samples, 0.04%)</title><rect x="17.7414%" y="885" width="0.0360%" height="15" fill="rgb(239,116,25)" fg:x="10851" fg:w="22"/><text x="17.9914%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (11 samples, 0.02%)</title><rect x="17.7594%" y="869" width="0.0180%" height="15" fill="rgb(219,200,50)" fg:x="10862" fg:w="11"/><text x="18.0094%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (11 samples, 0.02%)</title><rect x="17.7594%" y="853" width="0.0180%" height="15" fill="rgb(245,200,0)" fg:x="10862" fg:w="11"/><text x="18.0094%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 0.12%)</title><rect x="17.6580%" y="933" width="0.1210%" height="15" fill="rgb(245,119,33)" fg:x="10800" fg:w="74"/><text x="17.9080%" y="943.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (38 samples, 0.06%)</title><rect x="17.7169%" y="917" width="0.0621%" height="15" fill="rgb(231,125,12)" fg:x="10836" fg:w="38"/><text x="17.9669%" y="927.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (146 samples, 0.24%)</title><rect x="17.5517%" y="965" width="0.2387%" height="15" fill="rgb(216,96,41)" fg:x="10735" fg:w="146"/><text x="17.8017%" y="975.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (131 samples, 0.21%)</title><rect x="17.5763%" y="949" width="0.2142%" height="15" fill="rgb(248,43,45)" fg:x="10750" fg:w="131"/><text x="17.8263%" y="959.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.02%)</title><rect x="17.8003%" y="949" width="0.0180%" height="15" fill="rgb(217,222,7)" fg:x="10887" fg:w="11"/><text x="18.0503%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="17.8379%" y="917" width="0.0114%" height="15" fill="rgb(233,28,6)" fg:x="10910" fg:w="7"/><text x="18.0879%" y="927.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="17.8493%" y="917" width="0.0213%" height="15" fill="rgb(231,218,15)" fg:x="10917" fg:w="13"/><text x="18.0993%" y="927.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.03%)</title><rect x="17.8787%" y="901" width="0.0294%" height="15" fill="rgb(226,171,48)" fg:x="10935" fg:w="18"/><text x="18.1287%" y="911.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.04%)</title><rect x="17.8706%" y="917" width="0.0425%" height="15" fill="rgb(235,201,9)" fg:x="10930" fg:w="26"/><text x="18.1206%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 0.08%)</title><rect x="17.8346%" y="933" width="0.0801%" height="15" fill="rgb(217,80,15)" fg:x="10908" fg:w="49"/><text x="18.0846%" y="943.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (65 samples, 0.11%)</title><rect x="17.8183%" y="949" width="0.1063%" height="15" fill="rgb(219,152,8)" fg:x="10898" fg:w="65"/><text x="18.0683%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (432 samples, 0.71%)</title><rect x="17.2198%" y="997" width="0.7063%" height="15" fill="rgb(243,107,38)" fg:x="10532" fg:w="432"/><text x="17.4698%" y="1007.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (360 samples, 0.59%)</title><rect x="17.3376%" y="981" width="0.5886%" height="15" fill="rgb(231,17,5)" fg:x="10604" fg:w="360"/><text x="17.5876%" y="991.50"></text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (81 samples, 0.13%)</title><rect x="17.7937%" y="965" width="0.1324%" height="15" fill="rgb(209,25,54)" fg:x="10883" fg:w="81"/><text x="18.0437%" y="975.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (492 samples, 0.80%)</title><rect x="17.1316%" y="1029" width="0.8044%" height="15" fill="rgb(219,0,2)" fg:x="10478" fg:w="492"/><text x="17.3816%" y="1039.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (486 samples, 0.79%)</title><rect x="17.1414%" y="1013" width="0.7946%" height="15" fill="rgb(246,9,5)" fg:x="10484" fg:w="486"/><text x="17.3914%" y="1023.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="17.9425%" y="1013" width="0.0114%" height="15" fill="rgb(226,159,4)" fg:x="10974" fg:w="7"/><text x="18.1925%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="17.9752%" y="997" width="0.0131%" height="15" fill="rgb(219,175,34)" fg:x="10994" fg:w="8"/><text x="18.2252%" y="1007.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="17.9948%" y="981" width="0.0131%" height="15" fill="rgb(236,10,46)" fg:x="11006" fg:w="8"/><text x="18.2448%" y="991.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.03%)</title><rect x="18.0275%" y="965" width="0.0311%" height="15" fill="rgb(240,211,16)" fg:x="11026" fg:w="19"/><text x="18.2775%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="18.1387%" y="901" width="0.0180%" height="15" fill="rgb(205,3,43)" fg:x="11094" fg:w="11"/><text x="18.3887%" y="911.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="18.1436%" y="885" width="0.0131%" height="15" fill="rgb(245,7,22)" fg:x="11097" fg:w="8"/><text x="18.3936%" y="895.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (20 samples, 0.03%)</title><rect x="18.1256%" y="917" width="0.0327%" height="15" fill="rgb(239,132,32)" fg:x="11086" fg:w="20"/><text x="18.3756%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 0.07%)</title><rect x="18.0897%" y="949" width="0.0703%" height="15" fill="rgb(228,202,34)" fg:x="11064" fg:w="43"/><text x="18.3397%" y="959.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.06%)</title><rect x="18.1011%" y="933" width="0.0589%" height="15" fill="rgb(254,200,22)" fg:x="11071" fg:w="36"/><text x="18.3511%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.02%)</title><rect x="18.1878%" y="917" width="0.0164%" height="15" fill="rgb(219,10,39)" fg:x="11124" fg:w="10"/><text x="18.4378%" y="927.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="18.2254%" y="901" width="0.0114%" height="15" fill="rgb(226,210,39)" fg:x="11147" fg:w="7"/><text x="18.4754%" y="911.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.03%)</title><rect x="18.2532%" y="885" width="0.0294%" height="15" fill="rgb(208,219,16)" fg:x="11164" fg:w="18"/><text x="18.5032%" y="895.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.05%)</title><rect x="18.2368%" y="901" width="0.0507%" height="15" fill="rgb(216,158,51)" fg:x="11154" fg:w="31"/><text x="18.4868%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 0.08%)</title><rect x="18.2057%" y="917" width="0.0834%" height="15" fill="rgb(233,14,44)" fg:x="11135" fg:w="51"/><text x="18.4557%" y="927.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85 samples, 0.14%)</title><rect x="18.1600%" y="949" width="0.1390%" height="15" fill="rgb(237,97,39)" fg:x="11107" fg:w="85"/><text x="18.4100%" y="959.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (75 samples, 0.12%)</title><rect x="18.1763%" y="933" width="0.1226%" height="15" fill="rgb(218,198,43)" fg:x="11117" fg:w="75"/><text x="18.4263%" y="943.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (151 samples, 0.25%)</title><rect x="18.0586%" y="965" width="0.2469%" height="15" fill="rgb(231,104,20)" fg:x="11045" fg:w="151"/><text x="18.3086%" y="975.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (185 samples, 0.30%)</title><rect x="18.0079%" y="981" width="0.3025%" height="15" fill="rgb(254,36,13)" fg:x="11014" fg:w="185"/><text x="18.2579%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (198 samples, 0.32%)</title><rect x="17.9883%" y="997" width="0.3237%" height="15" fill="rgb(248,14,50)" fg:x="11002" fg:w="198"/><text x="18.2383%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (859 samples, 1.40%)</title><rect x="16.9223%" y="1061" width="1.4045%" height="15" fill="rgb(217,107,29)" fg:x="10350" fg:w="859"/><text x="17.1723%" y="1071.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (801 samples, 1.31%)</title><rect x="17.0171%" y="1045" width="1.3096%" height="15" fill="rgb(251,169,33)" fg:x="10408" fg:w="801"/><text x="17.2671%" y="1055.50"></text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (239 samples, 0.39%)</title><rect x="17.9360%" y="1029" width="0.3908%" height="15" fill="rgb(217,108,32)" fg:x="10970" fg:w="239"/><text x="18.1860%" y="1039.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (228 samples, 0.37%)</title><rect x="17.9540%" y="1013" width="0.3728%" height="15" fill="rgb(219,66,42)" fg:x="10981" fg:w="228"/><text x="18.2040%" y="1023.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="18.3120%" y="997" width="0.0147%" height="15" fill="rgb(206,180,7)" fg:x="11200" fg:w="9"/><text x="18.5620%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (993 samples, 1.62%)</title><rect x="16.7195%" y="1093" width="1.6236%" height="15" fill="rgb(208,226,31)" fg:x="10226" fg:w="993"/><text x="16.9695%" y="1103.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (953 samples, 1.56%)</title><rect x="16.7849%" y="1077" width="1.5582%" height="15" fill="rgb(218,26,49)" fg:x="10266" fg:w="953"/><text x="17.0349%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,135 samples, 1.86%)</title><rect x="16.5004%" y="1125" width="1.8557%" height="15" fill="rgb(233,197,48)" fg:x="10092" fg:w="1135"/><text x="16.7504%" y="1135.50">s..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (1,085 samples, 1.77%)</title><rect x="16.5822%" y="1109" width="1.7740%" height="15" fill="rgb(252,181,51)" fg:x="10142" fg:w="1085"/><text x="16.8322%" y="1119.50">s..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,241 samples, 2.03%)</title><rect x="16.3418%" y="1157" width="2.0290%" height="15" fill="rgb(253,90,19)" fg:x="9995" fg:w="1241"/><text x="16.5918%" y="1167.50">s..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (1,211 samples, 1.98%)</title><rect x="16.3909%" y="1141" width="1.9800%" height="15" fill="rgb(215,171,30)" fg:x="10025" fg:w="1211"/><text x="16.6409%" y="1151.50">s..</text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::cmp::PartialEq&gt;::eq (3,298 samples, 5.39%)</title><rect x="12.9819%" y="1205" width="5.3922%" height="15" fill="rgb(214,222,9)" fg:x="7940" fg:w="3298"/><text x="13.2319%" y="1215.50">sk-gen`..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_eq (1,874 samples, 3.06%)</title><rect x="15.3102%" y="1189" width="3.0640%" height="15" fill="rgb(223,3,22)" fg:x="9364" fg:w="1874"/><text x="15.5602%" y="1199.50">sk-..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (1,266 samples, 2.07%)</title><rect x="16.3042%" y="1173" width="2.0699%" height="15" fill="rgb(225,196,46)" fg:x="9972" fg:w="1266"/><text x="16.5542%" y="1183.50">s..</text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3,305 samples, 5.40%)</title><rect x="12.9721%" y="1221" width="5.4037%" height="15" fill="rgb(209,110,37)" fg:x="7934" fg:w="3305"/><text x="13.2221%" y="1231.50">sk-gen`..</text></g><g><title>libsystem_malloc.dylib`_free (41 samples, 0.07%)</title><rect x="18.3921%" y="1189" width="0.0670%" height="15" fill="rgb(249,89,12)" fg:x="11249" fg:w="41"/><text x="18.6421%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="18.4592%" y="1189" width="0.0147%" height="15" fill="rgb(226,27,33)" fg:x="11290" fg:w="9"/><text x="18.7092%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.03%)</title><rect x="18.4739%" y="1189" width="0.0262%" height="15" fill="rgb(213,82,22)" fg:x="11299" fg:w="16"/><text x="18.7239%" y="1199.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (139 samples, 0.23%)</title><rect x="18.5197%" y="1189" width="0.2273%" height="15" fill="rgb(248,140,0)" fg:x="11327" fg:w="139"/><text x="18.7697%" y="1199.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="18.8009%" y="1141" width="0.0147%" height="15" fill="rgb(228,106,3)" fg:x="11499" fg:w="9"/><text x="19.0509%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="18.8221%" y="1125" width="0.0164%" height="15" fill="rgb(209,23,37)" fg:x="11512" fg:w="10"/><text x="19.0721%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="18.8238%" y="1109" width="0.0147%" height="15" fill="rgb(241,93,50)" fg:x="11513" fg:w="9"/><text x="19.0738%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="18.8385%" y="1125" width="0.0131%" height="15" fill="rgb(253,46,43)" fg:x="11522" fg:w="8"/><text x="19.0885%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="18.8696%" y="1109" width="0.0164%" height="15" fill="rgb(226,206,43)" fg:x="11541" fg:w="10"/><text x="19.1196%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="18.8859%" y="1109" width="0.0131%" height="15" fill="rgb(217,54,7)" fg:x="11551" fg:w="8"/><text x="19.1359%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="18.8859%" y="1093" width="0.0131%" height="15" fill="rgb(223,5,52)" fg:x="11551" fg:w="8"/><text x="19.1359%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.02%)</title><rect x="18.8990%" y="1109" width="0.0229%" height="15" fill="rgb(206,52,46)" fg:x="11559" fg:w="14"/><text x="19.1490%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="18.9807%" y="1045" width="0.0114%" height="15" fill="rgb(253,136,11)" fg:x="11609" fg:w="7"/><text x="19.2307%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="18.9922%" y="1045" width="0.0131%" height="15" fill="rgb(208,106,33)" fg:x="11616" fg:w="8"/><text x="19.2422%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="19.0053%" y="1045" width="0.0164%" height="15" fill="rgb(206,54,4)" fg:x="11624" fg:w="10"/><text x="19.2553%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="19.0216%" y="1045" width="0.0164%" height="15" fill="rgb(213,3,15)" fg:x="11634" fg:w="10"/><text x="19.2716%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="19.0249%" y="1029" width="0.0131%" height="15" fill="rgb(252,211,39)" fg:x="11636" fg:w="8"/><text x="19.2749%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (41 samples, 0.07%)</title><rect x="18.9726%" y="1061" width="0.0670%" height="15" fill="rgb(223,6,36)" fg:x="11604" fg:w="41"/><text x="19.2226%" y="1071.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (54 samples, 0.09%)</title><rect x="18.9562%" y="1077" width="0.0883%" height="15" fill="rgb(252,169,45)" fg:x="11594" fg:w="54"/><text x="19.2062%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.01%)</title><rect x="19.0641%" y="1061" width="0.0147%" height="15" fill="rgb(212,48,26)" fg:x="11660" fg:w="9"/><text x="19.3141%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (24 samples, 0.04%)</title><rect x="19.0445%" y="1077" width="0.0392%" height="15" fill="rgb(251,102,48)" fg:x="11648" fg:w="24"/><text x="19.2945%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="19.0837%" y="1077" width="0.0114%" height="15" fill="rgb(243,208,16)" fg:x="11672" fg:w="7"/><text x="19.3337%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (106 samples, 0.17%)</title><rect x="18.9235%" y="1093" width="0.1733%" height="15" fill="rgb(219,96,24)" fg:x="11574" fg:w="106"/><text x="19.1735%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (108 samples, 0.18%)</title><rect x="18.9219%" y="1109" width="0.1766%" height="15" fill="rgb(219,33,29)" fg:x="11573" fg:w="108"/><text x="19.1719%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.01%)</title><rect x="19.0985%" y="1109" width="0.0131%" height="15" fill="rgb(223,176,5)" fg:x="11681" fg:w="8"/><text x="19.3485%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="19.1115%" y="1109" width="0.0164%" height="15" fill="rgb(228,140,14)" fg:x="11689" fg:w="10"/><text x="19.3615%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="19.1164%" y="1093" width="0.0114%" height="15" fill="rgb(217,179,31)" fg:x="11692" fg:w="7"/><text x="19.3664%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (169 samples, 0.28%)</title><rect x="18.8548%" y="1125" width="0.2763%" height="15" fill="rgb(230,9,30)" fg:x="11532" fg:w="169"/><text x="19.1048%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="19.1312%" y="1125" width="0.0180%" height="15" fill="rgb(230,136,20)" fg:x="11701" fg:w="11"/><text x="19.3812%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="19.1377%" y="1109" width="0.0114%" height="15" fill="rgb(215,210,22)" fg:x="11705" fg:w="7"/><text x="19.3877%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (205 samples, 0.34%)</title><rect x="18.8156%" y="1141" width="0.3352%" height="15" fill="rgb(218,43,5)" fg:x="11508" fg:w="205"/><text x="19.0656%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (237 samples, 0.39%)</title><rect x="18.7780%" y="1157" width="0.3875%" height="15" fill="rgb(216,11,5)" fg:x="11485" fg:w="237"/><text x="19.0280%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (260 samples, 0.43%)</title><rect x="18.7502%" y="1173" width="0.4251%" height="15" fill="rgb(209,82,29)" fg:x="11468" fg:w="260"/><text x="19.0002%" y="1183.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (262 samples, 0.43%)</title><rect x="18.7486%" y="1189" width="0.4284%" height="15" fill="rgb(244,115,12)" fg:x="11467" fg:w="262"/><text x="18.9986%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.03%)</title><rect x="19.2162%" y="1125" width="0.0278%" height="15" fill="rgb(222,82,18)" fg:x="11753" fg:w="17"/><text x="19.4662%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="19.2505%" y="1109" width="0.0196%" height="15" fill="rgb(249,227,8)" fg:x="11774" fg:w="12"/><text x="19.5005%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="19.2522%" y="1093" width="0.0180%" height="15" fill="rgb(253,141,45)" fg:x="11775" fg:w="11"/><text x="19.5022%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (49 samples, 0.08%)</title><rect x="19.1933%" y="1157" width="0.0801%" height="15" fill="rgb(234,184,4)" fg:x="11739" fg:w="49"/><text x="19.4433%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (39 samples, 0.06%)</title><rect x="19.2096%" y="1141" width="0.0638%" height="15" fill="rgb(218,194,23)" fg:x="11749" fg:w="39"/><text x="19.4596%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.03%)</title><rect x="19.2456%" y="1125" width="0.0278%" height="15" fill="rgb(235,66,41)" fg:x="11771" fg:w="17"/><text x="19.4956%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="19.2898%" y="1141" width="0.0114%" height="15" fill="rgb(245,217,1)" fg:x="11798" fg:w="7"/><text x="19.5398%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="19.3094%" y="1125" width="0.0114%" height="15" fill="rgb(229,91,1)" fg:x="11810" fg:w="7"/><text x="19.5594%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="19.3323%" y="1109" width="0.0114%" height="15" fill="rgb(207,101,30)" fg:x="11824" fg:w="7"/><text x="19.5823%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="19.3257%" y="1125" width="0.0213%" height="15" fill="rgb(223,82,49)" fg:x="11820" fg:w="13"/><text x="19.5757%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_free (9 samples, 0.01%)</title><rect x="19.3584%" y="1109" width="0.0147%" height="15" fill="rgb(218,167,17)" fg:x="11840" fg:w="9"/><text x="19.6084%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.02%)</title><rect x="19.3731%" y="1109" width="0.0196%" height="15" fill="rgb(208,103,14)" fg:x="11849" fg:w="12"/><text x="19.6231%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.02%)</title><rect x="19.4075%" y="1093" width="0.0245%" height="15" fill="rgb(238,20,8)" fg:x="11870" fg:w="15"/><text x="19.6575%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="19.4124%" y="1077" width="0.0196%" height="15" fill="rgb(218,80,54)" fg:x="11873" fg:w="12"/><text x="19.6624%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (24 samples, 0.04%)</title><rect x="19.3977%" y="1109" width="0.0392%" height="15" fill="rgb(240,144,17)" fg:x="11864" fg:w="24"/><text x="19.6477%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21 samples, 0.03%)</title><rect x="19.4451%" y="1093" width="0.0343%" height="15" fill="rgb(245,27,50)" fg:x="11893" fg:w="21"/><text x="19.6951%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.03%)</title><rect x="19.4909%" y="1077" width="0.0343%" height="15" fill="rgb(251,51,7)" fg:x="11921" fg:w="21"/><text x="19.7409%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="19.5056%" y="1061" width="0.0196%" height="15" fill="rgb(245,217,29)" fg:x="11930" fg:w="12"/><text x="19.7556%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (34 samples, 0.06%)</title><rect x="19.4811%" y="1093" width="0.0556%" height="15" fill="rgb(221,176,29)" fg:x="11915" fg:w="34"/><text x="19.7311%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.01%)</title><rect x="19.5252%" y="1077" width="0.0114%" height="15" fill="rgb(212,180,24)" fg:x="11942" fg:w="7"/><text x="19.7752%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (11 samples, 0.02%)</title><rect x="19.5481%" y="1061" width="0.0180%" height="15" fill="rgb(254,24,2)" fg:x="11956" fg:w="11"/><text x="19.7981%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.03%)</title><rect x="19.5742%" y="1045" width="0.0262%" height="15" fill="rgb(230,100,2)" fg:x="11972" fg:w="16"/><text x="19.8242%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="19.6151%" y="1045" width="0.0196%" height="15" fill="rgb(219,142,25)" fg:x="11997" fg:w="12"/><text x="19.8651%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="19.6446%" y="1029" width="0.0131%" height="15" fill="rgb(240,73,43)" fg:x="12015" fg:w="8"/><text x="19.8946%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.02%)</title><rect x="19.6658%" y="1013" width="0.0213%" height="15" fill="rgb(214,114,15)" fg:x="12028" fg:w="13"/><text x="19.9158%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.01%)</title><rect x="19.6723%" y="997" width="0.0147%" height="15" fill="rgb(207,130,4)" fg:x="12032" fg:w="9"/><text x="19.9223%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="19.6609%" y="1029" width="0.0311%" height="15" fill="rgb(221,25,40)" fg:x="12025" fg:w="19"/><text x="19.9109%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="19.7132%" y="997" width="0.0213%" height="15" fill="rgb(241,184,7)" fg:x="12057" fg:w="13"/><text x="19.9632%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.02%)</title><rect x="19.7492%" y="981" width="0.0245%" height="15" fill="rgb(235,159,4)" fg:x="12079" fg:w="15"/><text x="19.9992%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="19.7574%" y="965" width="0.0164%" height="15" fill="rgb(214,87,48)" fg:x="12084" fg:w="10"/><text x="20.0074%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (25 samples, 0.04%)</title><rect x="19.7394%" y="997" width="0.0409%" height="15" fill="rgb(246,198,24)" fg:x="12073" fg:w="25"/><text x="19.9894%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (55 samples, 0.09%)</title><rect x="19.6920%" y="1029" width="0.0899%" height="15" fill="rgb(209,66,40)" fg:x="12044" fg:w="55"/><text x="19.9420%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (45 samples, 0.07%)</title><rect x="19.7083%" y="1013" width="0.0736%" height="15" fill="rgb(233,147,39)" fg:x="12054" fg:w="45"/><text x="19.9583%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (152 samples, 0.25%)</title><rect x="19.5481%" y="1077" width="0.2485%" height="15" fill="rgb(231,145,52)" fg:x="11956" fg:w="152"/><text x="19.7981%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (138 samples, 0.23%)</title><rect x="19.5710%" y="1061" width="0.2256%" height="15" fill="rgb(206,20,26)" fg:x="11970" fg:w="138"/><text x="19.8210%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (99 samples, 0.16%)</title><rect x="19.6347%" y="1045" width="0.1619%" height="15" fill="rgb(238,220,4)" fg:x="12009" fg:w="99"/><text x="19.8847%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.01%)</title><rect x="19.7819%" y="1029" width="0.0147%" height="15" fill="rgb(252,195,42)" fg:x="12099" fg:w="9"/><text x="20.0319%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="19.7835%" y="1013" width="0.0131%" height="15" fill="rgb(209,10,6)" fg:x="12100" fg:w="8"/><text x="20.0335%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (380 samples, 0.62%)</title><rect x="19.1786%" y="1173" width="0.6213%" height="15" fill="rgb(229,3,52)" fg:x="11730" fg:w="380"/><text x="19.4286%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (322 samples, 0.53%)</title><rect x="19.2734%" y="1157" width="0.5265%" height="15" fill="rgb(253,49,37)" fg:x="11788" fg:w="322"/><text x="19.5234%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (305 samples, 0.50%)</title><rect x="19.3012%" y="1141" width="0.4987%" height="15" fill="rgb(240,103,49)" fg:x="11805" fg:w="305"/><text x="19.5512%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (277 samples, 0.45%)</title><rect x="19.3470%" y="1125" width="0.4529%" height="15" fill="rgb(250,182,30)" fg:x="11833" fg:w="277"/><text x="19.5970%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (222 samples, 0.36%)</title><rect x="19.4369%" y="1109" width="0.3630%" height="15" fill="rgb(248,8,30)" fg:x="11888" fg:w="222"/><text x="19.6869%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (161 samples, 0.26%)</title><rect x="19.5366%" y="1093" width="0.2632%" height="15" fill="rgb(237,120,30)" fg:x="11949" fg:w="161"/><text x="19.7866%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="19.8408%" y="1109" width="0.0114%" height="15" fill="rgb(221,146,34)" fg:x="12135" fg:w="7"/><text x="20.0908%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="19.8522%" y="1109" width="0.0114%" height="15" fill="rgb(242,55,13)" fg:x="12142" fg:w="7"/><text x="20.1022%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="19.9339%" y="1061" width="0.0131%" height="15" fill="rgb(242,112,31)" fg:x="12192" fg:w="8"/><text x="20.1839%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.02%)</title><rect x="19.9617%" y="1029" width="0.0196%" height="15" fill="rgb(249,192,27)" fg:x="12209" fg:w="12"/><text x="20.2117%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="20.0026%" y="997" width="0.0131%" height="15" fill="rgb(208,204,44)" fg:x="12234" fg:w="8"/><text x="20.2526%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="20.0043%" y="981" width="0.0114%" height="15" fill="rgb(208,93,54)" fg:x="12235" fg:w="7"/><text x="20.2543%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="20.0173%" y="997" width="0.0131%" height="15" fill="rgb(242,1,31)" fg:x="12243" fg:w="8"/><text x="20.2673%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (28 samples, 0.05%)</title><rect x="19.9912%" y="1013" width="0.0458%" height="15" fill="rgb(241,83,25)" fg:x="12227" fg:w="28"/><text x="20.2412%" y="1023.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (35 samples, 0.06%)</title><rect x="19.9814%" y="1029" width="0.0572%" height="15" fill="rgb(205,169,50)" fg:x="12221" fg:w="35"/><text x="20.2314%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.01%)</title><rect x="20.0582%" y="1013" width="0.0147%" height="15" fill="rgb(239,186,37)" fg:x="12268" fg:w="9"/><text x="20.3082%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (23 samples, 0.04%)</title><rect x="20.0386%" y="1029" width="0.0376%" height="15" fill="rgb(205,221,10)" fg:x="12256" fg:w="23"/><text x="20.2886%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (84 samples, 0.14%)</title><rect x="19.9487%" y="1045" width="0.1373%" height="15" fill="rgb(218,196,15)" fg:x="12201" fg:w="84"/><text x="20.1987%" y="1055.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (87 samples, 0.14%)</title><rect x="19.9470%" y="1061" width="0.1422%" height="15" fill="rgb(218,196,35)" fg:x="12200" fg:w="87"/><text x="20.1970%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.02%)</title><rect x="20.0893%" y="1061" width="0.0180%" height="15" fill="rgb(233,63,24)" fg:x="12287" fg:w="11"/><text x="20.3393%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="20.1073%" y="1061" width="0.0131%" height="15" fill="rgb(225,8,4)" fg:x="12298" fg:w="8"/><text x="20.3573%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="20.1089%" y="1045" width="0.0114%" height="15" fill="rgb(234,105,35)" fg:x="12299" fg:w="7"/><text x="20.3589%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (131 samples, 0.21%)</title><rect x="19.9094%" y="1077" width="0.2142%" height="15" fill="rgb(236,21,32)" fg:x="12177" fg:w="131"/><text x="20.1594%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (163 samples, 0.27%)</title><rect x="19.8636%" y="1109" width="0.2665%" height="15" fill="rgb(228,109,6)" fg:x="12149" fg:w="163"/><text x="20.1136%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (152 samples, 0.25%)</title><rect x="19.8816%" y="1093" width="0.2485%" height="15" fill="rgb(229,215,31)" fg:x="12160" fg:w="152"/><text x="20.1316%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (186 samples, 0.30%)</title><rect x="19.8342%" y="1125" width="0.3041%" height="15" fill="rgb(221,52,54)" fg:x="12131" fg:w="186"/><text x="20.0842%" y="1135.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (192 samples, 0.31%)</title><rect x="19.8260%" y="1141" width="0.3139%" height="15" fill="rgb(252,129,43)" fg:x="12126" fg:w="192"/><text x="20.0760%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (11 samples, 0.02%)</title><rect x="20.1514%" y="1109" width="0.0180%" height="15" fill="rgb(248,183,27)" fg:x="12325" fg:w="11"/><text x="20.4014%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="20.1694%" y="1109" width="0.0147%" height="15" fill="rgb(250,0,22)" fg:x="12336" fg:w="9"/><text x="20.4194%" y="1119.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (9 samples, 0.01%)</title><rect x="20.1857%" y="1109" width="0.0147%" height="15" fill="rgb(213,166,10)" fg:x="12346" fg:w="9"/><text x="20.4357%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="20.2070%" y="1093" width="0.0114%" height="15" fill="rgb(207,163,36)" fg:x="12359" fg:w="7"/><text x="20.4570%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (14 samples, 0.02%)</title><rect x="20.2005%" y="1109" width="0.0229%" height="15" fill="rgb(208,122,22)" fg:x="12355" fg:w="14"/><text x="20.4505%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.01%)</title><rect x="20.2413%" y="1093" width="0.0114%" height="15" fill="rgb(207,104,49)" fg:x="12380" fg:w="7"/><text x="20.4913%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (24 samples, 0.04%)</title><rect x="20.2528%" y="1093" width="0.0392%" height="15" fill="rgb(248,211,50)" fg:x="12387" fg:w="24"/><text x="20.5028%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.04%)</title><rect x="20.3198%" y="1077" width="0.0360%" height="15" fill="rgb(217,13,45)" fg:x="12428" fg:w="22"/><text x="20.5698%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.03%)</title><rect x="20.3247%" y="1061" width="0.0311%" height="15" fill="rgb(211,216,49)" fg:x="12431" fg:w="19"/><text x="20.5747%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.01%)</title><rect x="20.3443%" y="1045" width="0.0114%" height="15" fill="rgb(221,58,53)" fg:x="12443" fg:w="7"/><text x="20.5943%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (39 samples, 0.06%)</title><rect x="20.3002%" y="1093" width="0.0638%" height="15" fill="rgb(220,112,41)" fg:x="12416" fg:w="39"/><text x="20.5502%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (17 samples, 0.03%)</title><rect x="20.3803%" y="1077" width="0.0278%" height="15" fill="rgb(236,38,28)" fg:x="12465" fg:w="17"/><text x="20.6303%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (28 samples, 0.05%)</title><rect x="20.4081%" y="1077" width="0.0458%" height="15" fill="rgb(227,195,22)" fg:x="12482" fg:w="28"/><text x="20.6581%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (38 samples, 0.06%)</title><rect x="20.4898%" y="1061" width="0.0621%" height="15" fill="rgb(214,55,33)" fg:x="12532" fg:w="38"/><text x="20.7398%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.04%)</title><rect x="20.5078%" y="1045" width="0.0441%" height="15" fill="rgb(248,80,13)" fg:x="12543" fg:w="27"/><text x="20.7578%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (64 samples, 0.10%)</title><rect x="20.4637%" y="1077" width="0.1046%" height="15" fill="rgb(238,52,6)" fg:x="12516" fg:w="64"/><text x="20.7137%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.01%)</title><rect x="20.5552%" y="1061" width="0.0131%" height="15" fill="rgb(224,198,47)" fg:x="12572" fg:w="8"/><text x="20.8052%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (35 samples, 0.06%)</title><rect x="20.5847%" y="1061" width="0.0572%" height="15" fill="rgb(233,171,20)" fg:x="12590" fg:w="35"/><text x="20.8347%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (34 samples, 0.06%)</title><rect x="20.6713%" y="1045" width="0.0556%" height="15" fill="rgb(241,30,25)" fg:x="12643" fg:w="34"/><text x="20.9213%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (30 samples, 0.05%)</title><rect x="20.6779%" y="1029" width="0.0491%" height="15" fill="rgb(207,171,38)" fg:x="12647" fg:w="30"/><text x="20.9279%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (58 samples, 0.09%)</title><rect x="20.6435%" y="1061" width="0.0948%" height="15" fill="rgb(234,70,1)" fg:x="12626" fg:w="58"/><text x="20.8935%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.02%)</title><rect x="20.7514%" y="1045" width="0.0180%" height="15" fill="rgb(232,178,18)" fg:x="12692" fg:w="11"/><text x="21.0014%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="20.7776%" y="1029" width="0.0131%" height="15" fill="rgb(241,78,40)" fg:x="12708" fg:w="8"/><text x="21.0276%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="20.7776%" y="1013" width="0.0131%" height="15" fill="rgb(222,35,25)" fg:x="12708" fg:w="8"/><text x="21.0276%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="20.7711%" y="1045" width="0.0213%" height="15" fill="rgb(207,92,16)" fg:x="12704" fg:w="13"/><text x="21.0211%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="20.7956%" y="1029" width="0.0131%" height="15" fill="rgb(216,59,51)" fg:x="12719" fg:w="8"/><text x="21.0456%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36 samples, 0.06%)</title><rect x="20.8381%" y="1013" width="0.0589%" height="15" fill="rgb(213,80,28)" fg:x="12745" fg:w="36"/><text x="21.0881%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (10 samples, 0.02%)</title><rect x="20.8986%" y="1013" width="0.0164%" height="15" fill="rgb(220,93,7)" fg:x="12782" fg:w="10"/><text x="21.1486%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.03%)</title><rect x="20.9280%" y="997" width="0.0327%" height="15" fill="rgb(225,24,44)" fg:x="12800" fg:w="20"/><text x="21.1780%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.02%)</title><rect x="20.9362%" y="981" width="0.0245%" height="15" fill="rgb(243,74,40)" fg:x="12805" fg:w="15"/><text x="21.1862%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (32 samples, 0.05%)</title><rect x="20.9149%" y="1013" width="0.0523%" height="15" fill="rgb(228,39,7)" fg:x="12792" fg:w="32"/><text x="21.1649%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="21.0049%" y="981" width="0.0180%" height="15" fill="rgb(227,79,8)" fg:x="12847" fg:w="11"/><text x="21.2549%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="21.0065%" y="965" width="0.0164%" height="15" fill="rgb(236,58,11)" fg:x="12848" fg:w="10"/><text x="21.2565%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (22 samples, 0.04%)</title><rect x="20.9951%" y="997" width="0.0360%" height="15" fill="rgb(249,63,35)" fg:x="12841" fg:w="22"/><text x="21.2451%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_free (10 samples, 0.02%)</title><rect x="21.0425%" y="981" width="0.0164%" height="15" fill="rgb(252,114,16)" fg:x="12870" fg:w="10"/><text x="21.2925%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="21.0588%" y="981" width="0.0131%" height="15" fill="rgb(254,151,24)" fg:x="12880" fg:w="8"/><text x="21.3088%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (29 samples, 0.05%)</title><rect x="21.0866%" y="965" width="0.0474%" height="15" fill="rgb(253,54,39)" fg:x="12897" fg:w="29"/><text x="21.3366%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.03%)</title><rect x="21.1569%" y="949" width="0.0343%" height="15" fill="rgb(243,25,45)" fg:x="12940" fg:w="21"/><text x="21.4069%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.03%)</title><rect x="21.1651%" y="933" width="0.0262%" height="15" fill="rgb(234,134,9)" fg:x="12945" fg:w="16"/><text x="21.4151%" y="943.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (103 samples, 0.17%)</title><rect x="21.0310%" y="997" width="0.1684%" height="15" fill="rgb(227,166,31)" fg:x="12863" fg:w="103"/><text x="21.2810%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (74 samples, 0.12%)</title><rect x="21.0784%" y="981" width="0.1210%" height="15" fill="rgb(245,143,41)" fg:x="12892" fg:w="74"/><text x="21.3284%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (37 samples, 0.06%)</title><rect x="21.1389%" y="965" width="0.0605%" height="15" fill="rgb(238,181,32)" fg:x="12929" fg:w="37"/><text x="21.3889%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="21.2011%" y="981" width="0.0147%" height="15" fill="rgb(224,113,18)" fg:x="12967" fg:w="9"/><text x="21.4511%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="21.2191%" y="981" width="0.0213%" height="15" fill="rgb(240,229,28)" fg:x="12978" fg:w="13"/><text x="21.4691%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="21.2256%" y="965" width="0.0147%" height="15" fill="rgb(250,185,3)" fg:x="12982" fg:w="9"/><text x="21.4756%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.01%)</title><rect x="21.2256%" y="949" width="0.0147%" height="15" fill="rgb(212,59,25)" fg:x="12982" fg:w="9"/><text x="21.4756%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (253 samples, 0.41%)</title><rect x="20.8283%" y="1029" width="0.4137%" height="15" fill="rgb(221,87,20)" fg:x="12739" fg:w="253"/><text x="21.0783%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (168 samples, 0.27%)</title><rect x="20.9673%" y="1013" width="0.2747%" height="15" fill="rgb(213,74,28)" fg:x="12824" fg:w="168"/><text x="21.2173%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (26 samples, 0.04%)</title><rect x="21.1994%" y="997" width="0.0425%" height="15" fill="rgb(224,132,34)" fg:x="12966" fg:w="26"/><text x="21.4494%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (276 samples, 0.45%)</title><rect x="20.7923%" y="1045" width="0.4513%" height="15" fill="rgb(222,101,24)" fg:x="12717" fg:w="276"/><text x="21.0423%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (672 samples, 1.10%)</title><rect x="20.1481%" y="1125" width="1.0987%" height="15" fill="rgb(254,142,4)" fg:x="12323" fg:w="672"/><text x="20.3981%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (626 samples, 1.02%)</title><rect x="20.2233%" y="1109" width="1.0235%" height="15" fill="rgb(230,229,49)" fg:x="12369" fg:w="626"/><text x="20.4733%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (540 samples, 0.88%)</title><rect x="20.3640%" y="1093" width="0.8829%" height="15" fill="rgb(238,70,47)" fg:x="12455" fg:w="540"/><text x="20.6140%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (415 samples, 0.68%)</title><rect x="20.5683%" y="1077" width="0.6785%" height="15" fill="rgb(231,160,17)" fg:x="12580" fg:w="415"/><text x="20.8183%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (310 samples, 0.51%)</title><rect x="20.7400%" y="1061" width="0.5069%" height="15" fill="rgb(218,68,53)" fg:x="12685" fg:w="310"/><text x="20.9900%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="21.2648%" y="1109" width="0.0180%" height="15" fill="rgb(236,111,10)" fg:x="13006" fg:w="11"/><text x="21.5148%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (20 samples, 0.03%)</title><rect x="21.2845%" y="1109" width="0.0327%" height="15" fill="rgb(224,34,41)" fg:x="13018" fg:w="20"/><text x="21.5345%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="21.3335%" y="1093" width="0.0180%" height="15" fill="rgb(241,118,19)" fg:x="13048" fg:w="11"/><text x="21.5835%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="21.3580%" y="1093" width="0.0147%" height="15" fill="rgb(238,129,25)" fg:x="13063" fg:w="9"/><text x="21.6080%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.04%)</title><rect x="21.3875%" y="1061" width="0.0441%" height="15" fill="rgb(238,22,31)" fg:x="13081" fg:w="27"/><text x="21.6375%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.03%)</title><rect x="21.3989%" y="1045" width="0.0327%" height="15" fill="rgb(222,174,48)" fg:x="13088" fg:w="20"/><text x="21.6489%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="21.4120%" y="1029" width="0.0196%" height="15" fill="rgb(206,152,40)" fg:x="13096" fg:w="12"/><text x="21.6620%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (33 samples, 0.05%)</title><rect x="21.3809%" y="1077" width="0.0540%" height="15" fill="rgb(218,99,54)" fg:x="13077" fg:w="33"/><text x="21.6309%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (39 samples, 0.06%)</title><rect x="21.3727%" y="1093" width="0.0638%" height="15" fill="rgb(220,174,26)" fg:x="13072" fg:w="39"/><text x="21.6227%" y="1103.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (73 samples, 0.12%)</title><rect x="21.3204%" y="1109" width="0.1194%" height="15" fill="rgb(245,116,9)" fg:x="13040" fg:w="73"/><text x="21.5704%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="21.4692%" y="1093" width="0.0147%" height="15" fill="rgb(209,72,35)" fg:x="13131" fg:w="9"/><text x="21.7192%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (7 samples, 0.01%)</title><rect x="21.5085%" y="1077" width="0.0114%" height="15" fill="rgb(226,126,21)" fg:x="13155" fg:w="7"/><text x="21.7585%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (17 samples, 0.03%)</title><rect x="21.4954%" y="1093" width="0.0278%" height="15" fill="rgb(227,192,1)" fg:x="13147" fg:w="17"/><text x="21.7454%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="21.5281%" y="1077" width="0.0147%" height="15" fill="rgb(237,180,29)" fg:x="13167" fg:w="9"/><text x="21.7781%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="21.5559%" y="1061" width="0.0131%" height="15" fill="rgb(230,197,35)" fg:x="13184" fg:w="8"/><text x="21.8059%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="21.5689%" y="1061" width="0.0131%" height="15" fill="rgb(246,193,31)" fg:x="13192" fg:w="8"/><text x="21.8189%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (15 samples, 0.02%)</title><rect x="21.5820%" y="1061" width="0.0245%" height="15" fill="rgb(241,36,4)" fg:x="13200" fg:w="15"/><text x="21.8320%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.03%)</title><rect x="21.6311%" y="1045" width="0.0262%" height="15" fill="rgb(241,130,17)" fg:x="13230" fg:w="16"/><text x="21.8811%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (24 samples, 0.04%)</title><rect x="21.6916%" y="1029" width="0.0392%" height="15" fill="rgb(206,137,32)" fg:x="13267" fg:w="24"/><text x="21.9416%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (20 samples, 0.03%)</title><rect x="21.6981%" y="1013" width="0.0327%" height="15" fill="rgb(237,228,51)" fg:x="13271" fg:w="20"/><text x="21.9481%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="21.7079%" y="997" width="0.0229%" height="15" fill="rgb(243,6,42)" fg:x="13277" fg:w="14"/><text x="21.9579%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.02%)</title><rect x="21.7112%" y="981" width="0.0196%" height="15" fill="rgb(251,74,28)" fg:x="13279" fg:w="12"/><text x="21.9612%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="21.7161%" y="965" width="0.0147%" height="15" fill="rgb(218,20,49)" fg:x="13282" fg:w="9"/><text x="21.9661%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.02%)</title><rect x="21.7488%" y="1013" width="0.0213%" height="15" fill="rgb(238,28,14)" fg:x="13302" fg:w="13"/><text x="21.9988%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (30 samples, 0.05%)</title><rect x="21.7701%" y="1013" width="0.0491%" height="15" fill="rgb(229,40,46)" fg:x="13315" fg:w="30"/><text x="22.0201%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="21.8191%" y="1013" width="0.0180%" height="15" fill="rgb(244,195,20)" fg:x="13345" fg:w="11"/><text x="22.0691%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (17 samples, 0.03%)</title><rect x="21.8665%" y="997" width="0.0278%" height="15" fill="rgb(253,56,35)" fg:x="13374" fg:w="17"/><text x="22.1165%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.01%)</title><rect x="21.8943%" y="997" width="0.0147%" height="15" fill="rgb(210,149,44)" fg:x="13391" fg:w="9"/><text x="22.1443%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="21.9090%" y="997" width="0.0180%" height="15" fill="rgb(240,135,12)" fg:x="13400" fg:w="11"/><text x="22.1590%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.04%)</title><rect x="21.9875%" y="965" width="0.0392%" height="15" fill="rgb(251,24,50)" fg:x="13448" fg:w="24"/><text x="22.2375%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.03%)</title><rect x="21.9924%" y="949" width="0.0343%" height="15" fill="rgb(243,200,47)" fg:x="13451" fg:w="21"/><text x="22.2424%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="22.0071%" y="933" width="0.0196%" height="15" fill="rgb(224,166,26)" fg:x="13460" fg:w="12"/><text x="22.2571%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (38 samples, 0.06%)</title><rect x="21.9695%" y="981" width="0.0621%" height="15" fill="rgb(233,0,47)" fg:x="13437" fg:w="38"/><text x="22.2195%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (64 samples, 0.10%)</title><rect x="21.9336%" y="997" width="0.1046%" height="15" fill="rgb(253,80,5)" fg:x="13415" fg:w="64"/><text x="22.1836%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14 samples, 0.02%)</title><rect x="22.0709%" y="981" width="0.0229%" height="15" fill="rgb(214,133,25)" fg:x="13499" fg:w="14"/><text x="22.3209%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (10 samples, 0.02%)</title><rect x="22.1330%" y="949" width="0.0164%" height="15" fill="rgb(209,27,14)" fg:x="13537" fg:w="10"/><text x="22.3830%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="22.1347%" y="933" width="0.0147%" height="15" fill="rgb(219,102,51)" fg:x="13538" fg:w="9"/><text x="22.3847%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="22.1363%" y="917" width="0.0131%" height="15" fill="rgb(237,18,16)" fg:x="13539" fg:w="8"/><text x="22.3863%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (17 samples, 0.03%)</title><rect x="22.1248%" y="965" width="0.0278%" height="15" fill="rgb(241,85,17)" fg:x="13532" fg:w="17"/><text x="22.3748%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (32 samples, 0.05%)</title><rect x="22.1052%" y="981" width="0.0523%" height="15" fill="rgb(236,90,42)" fg:x="13520" fg:w="32"/><text x="22.3552%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="22.1608%" y="965" width="0.0147%" height="15" fill="rgb(249,57,21)" fg:x="13554" fg:w="9"/><text x="22.4108%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.02%)</title><rect x="22.1755%" y="965" width="0.0196%" height="15" fill="rgb(243,12,36)" fg:x="13563" fg:w="12"/><text x="22.4255%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="22.1952%" y="965" width="0.0180%" height="15" fill="rgb(253,128,47)" fg:x="13575" fg:w="11"/><text x="22.4452%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="22.2180%" y="965" width="0.0131%" height="15" fill="rgb(207,33,20)" fg:x="13589" fg:w="8"/><text x="22.4680%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (18 samples, 0.03%)</title><rect x="22.2409%" y="949" width="0.0294%" height="15" fill="rgb(233,215,35)" fg:x="13603" fg:w="18"/><text x="22.4909%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.02%)</title><rect x="22.2704%" y="949" width="0.0180%" height="15" fill="rgb(249,188,52)" fg:x="13621" fg:w="11"/><text x="22.5204%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="22.2883%" y="949" width="0.0164%" height="15" fill="rgb(225,12,32)" fg:x="13632" fg:w="10"/><text x="22.5383%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="22.3766%" y="917" width="0.0229%" height="15" fill="rgb(247,98,14)" fg:x="13686" fg:w="14"/><text x="22.6266%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.02%)</title><rect x="22.3783%" y="901" width="0.0213%" height="15" fill="rgb(247,219,48)" fg:x="13687" fg:w="13"/><text x="22.6283%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="22.3848%" y="885" width="0.0147%" height="15" fill="rgb(253,60,48)" fg:x="13691" fg:w="9"/><text x="22.6348%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (28 samples, 0.05%)</title><rect x="22.3587%" y="933" width="0.0458%" height="15" fill="rgb(245,15,52)" fg:x="13675" fg:w="28"/><text x="22.6087%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (57 samples, 0.09%)</title><rect x="22.3161%" y="949" width="0.0932%" height="15" fill="rgb(220,133,28)" fg:x="13649" fg:w="57"/><text x="22.5661%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="22.4371%" y="933" width="0.0131%" height="15" fill="rgb(217,180,4)" fg:x="13723" fg:w="8"/><text x="22.6871%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (18 samples, 0.03%)</title><rect x="22.5009%" y="901" width="0.0294%" height="15" fill="rgb(251,24,1)" fg:x="13762" fg:w="18"/><text x="22.7509%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="22.5091%" y="885" width="0.0213%" height="15" fill="rgb(212,185,49)" fg:x="13767" fg:w="13"/><text x="22.7591%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.02%)</title><rect x="22.5091%" y="869" width="0.0213%" height="15" fill="rgb(215,175,22)" fg:x="13767" fg:w="13"/><text x="22.7591%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="22.5172%" y="853" width="0.0131%" height="15" fill="rgb(250,205,14)" fg:x="13772" fg:w="8"/><text x="22.7672%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (26 samples, 0.04%)</title><rect x="22.4911%" y="917" width="0.0425%" height="15" fill="rgb(225,211,22)" fg:x="13756" fg:w="26"/><text x="22.7411%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="22.5483%" y="901" width="0.0114%" height="15" fill="rgb(251,179,42)" fg:x="13791" fg:w="7"/><text x="22.7983%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="22.5761%" y="853" width="0.0114%" height="15" fill="rgb(208,216,51)" fg:x="13808" fg:w="7"/><text x="22.8261%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.02%)</title><rect x="22.5712%" y="885" width="0.0180%" height="15" fill="rgb(235,36,11)" fg:x="13805" fg:w="11"/><text x="22.8212%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (8 samples, 0.01%)</title><rect x="22.5761%" y="869" width="0.0131%" height="15" fill="rgb(213,189,28)" fg:x="13808" fg:w="8"/><text x="22.8261%" y="879.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (82 samples, 0.13%)</title><rect x="22.4731%" y="933" width="0.1341%" height="15" fill="rgb(227,203,42)" fg:x="13745" fg:w="82"/><text x="22.7231%" y="943.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 0.07%)</title><rect x="22.5336%" y="917" width="0.0736%" height="15" fill="rgb(244,72,36)" fg:x="13782" fg:w="45"/><text x="22.7836%" y="927.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (27 samples, 0.04%)</title><rect x="22.5630%" y="901" width="0.0441%" height="15" fill="rgb(213,53,17)" fg:x="13800" fg:w="27"/><text x="22.8130%" y="911.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.02%)</title><rect x="22.5908%" y="885" width="0.0164%" height="15" fill="rgb(207,167,3)" fg:x="13817" fg:w="10"/><text x="22.8408%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.02%)</title><rect x="22.6301%" y="917" width="0.0196%" height="15" fill="rgb(216,98,30)" fg:x="13841" fg:w="12"/><text x="22.8801%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="22.6497%" y="917" width="0.0180%" height="15" fill="rgb(236,123,15)" fg:x="13853" fg:w="11"/><text x="22.8997%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="22.6693%" y="917" width="0.0114%" height="15" fill="rgb(248,81,50)" fg:x="13865" fg:w="7"/><text x="22.9193%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.02%)</title><rect x="22.6955%" y="901" width="0.0196%" height="15" fill="rgb(214,120,4)" fg:x="13881" fg:w="12"/><text x="22.9455%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="22.7249%" y="901" width="0.0180%" height="15" fill="rgb(208,179,34)" fg:x="13899" fg:w="11"/><text x="22.9749%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.04%)</title><rect x="22.8017%" y="869" width="0.0409%" height="15" fill="rgb(227,140,7)" fg:x="13946" fg:w="25"/><text x="23.0517%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.03%)</title><rect x="22.8165%" y="853" width="0.0262%" height="15" fill="rgb(214,22,6)" fg:x="13955" fg:w="16"/><text x="23.0665%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="22.8295%" y="837" width="0.0131%" height="15" fill="rgb(207,137,27)" fg:x="13963" fg:w="8"/><text x="23.0795%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (40 samples, 0.07%)</title><rect x="22.7788%" y="885" width="0.0654%" height="15" fill="rgb(210,8,46)" fg:x="13932" fg:w="40"/><text x="23.0288%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (54 samples, 0.09%)</title><rect x="22.7609%" y="901" width="0.0883%" height="15" fill="rgb(240,16,54)" fg:x="13921" fg:w="54"/><text x="23.0109%" y="911.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (397 samples, 0.65%)</title><rect x="22.2311%" y="965" width="0.6491%" height="15" fill="rgb(211,209,29)" fg:x="13597" fg:w="397"/><text x="22.4811%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (288 samples, 0.47%)</title><rect x="22.4093%" y="949" width="0.4709%" height="15" fill="rgb(226,228,24)" fg:x="13706" fg:w="288"/><text x="22.6593%" y="959.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (167 samples, 0.27%)</title><rect x="22.6072%" y="933" width="0.2730%" height="15" fill="rgb(222,84,9)" fg:x="13827" fg:w="167"/><text x="22.8572%" y="943.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (122 samples, 0.20%)</title><rect x="22.6807%" y="917" width="0.1995%" height="15" fill="rgb(234,203,30)" fg:x="13872" fg:w="122"/><text x="22.9307%" y="927.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 0.02%)</title><rect x="22.8557%" y="901" width="0.0245%" height="15" fill="rgb(238,109,14)" fg:x="13979" fg:w="15"/><text x="23.1057%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="22.8655%" y="885" width="0.0147%" height="15" fill="rgb(233,206,34)" fg:x="13985" fg:w="9"/><text x="23.1155%" y="895.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (635 samples, 1.04%)</title><rect x="21.8502%" y="1013" width="1.0382%" height="15" fill="rgb(220,167,47)" fg:x="13364" fg:w="635"/><text x="22.1002%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (515 samples, 0.84%)</title><rect x="22.0464%" y="997" width="0.8420%" height="15" fill="rgb(238,105,10)" fg:x="13484" fg:w="515"/><text x="22.2964%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (447 samples, 0.73%)</title><rect x="22.1575%" y="981" width="0.7308%" height="15" fill="rgb(213,227,17)" fg:x="13552" fg:w="447"/><text x="22.4075%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (818 samples, 1.34%)</title><rect x="21.5542%" y="1077" width="1.3374%" height="15" fill="rgb(217,132,38)" fg:x="13183" fg:w="818"/><text x="21.8042%" y="1087.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (783 samples, 1.28%)</title><rect x="21.6115%" y="1061" width="1.2802%" height="15" fill="rgb(242,146,4)" fg:x="13218" fg:w="783"/><text x="21.8615%" y="1071.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (747 samples, 1.22%)</title><rect x="21.6703%" y="1045" width="1.2213%" height="15" fill="rgb(212,61,9)" fg:x="13254" fg:w="747"/><text x="21.9203%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (704 samples, 1.15%)</title><rect x="21.7406%" y="1029" width="1.1510%" height="15" fill="rgb(247,126,22)" fg:x="13297" fg:w="704"/><text x="21.9906%" y="1039.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1,005 samples, 1.64%)</title><rect x="21.2518%" y="1125" width="1.6432%" height="15" fill="rgb(220,196,2)" fg:x="12998" fg:w="1005"/><text x="21.5018%" y="1135.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (876 samples, 1.43%)</title><rect x="21.4627%" y="1109" width="1.4323%" height="15" fill="rgb(208,46,4)" fg:x="13127" fg:w="876"/><text x="21.7127%" y="1119.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (839 samples, 1.37%)</title><rect x="21.5232%" y="1093" width="1.3718%" height="15" fill="rgb(252,104,46)" fg:x="13164" fg:w="839"/><text x="21.7732%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.01%)</title><rect x="22.9129%" y="1093" width="0.0114%" height="15" fill="rgb(237,152,48)" fg:x="14014" fg:w="7"/><text x="23.1629%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="22.9325%" y="1077" width="0.0131%" height="15" fill="rgb(221,59,37)" fg:x="14026" fg:w="8"/><text x="23.1825%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.02%)</title><rect x="22.9587%" y="1061" width="0.0164%" height="15" fill="rgb(209,202,51)" fg:x="14042" fg:w="10"/><text x="23.2087%" y="1071.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.02%)</title><rect x="23.0028%" y="1013" width="0.0180%" height="15" fill="rgb(228,81,30)" fg:x="14069" fg:w="11"/><text x="23.2528%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.01%)</title><rect x="23.0208%" y="1013" width="0.0147%" height="15" fill="rgb(227,42,39)" fg:x="14080" fg:w="9"/><text x="23.2708%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (30 samples, 0.05%)</title><rect x="22.9963%" y="1029" width="0.0491%" height="15" fill="rgb(221,26,2)" fg:x="14065" fg:w="30"/><text x="23.2463%" y="1039.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (38 samples, 0.06%)</title><rect x="22.9881%" y="1045" width="0.0621%" height="15" fill="rgb(254,61,31)" fg:x="14060" fg:w="38"/><text x="23.2381%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (49 samples, 0.08%)</title><rect x="22.9750%" y="1061" width="0.0801%" height="15" fill="rgb(222,173,38)" fg:x="14052" fg:w="49"/><text x="23.2250%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (74 samples, 0.12%)</title><rect x="22.9456%" y="1077" width="0.1210%" height="15" fill="rgb(218,50,12)" fg:x="14034" fg:w="74"/><text x="23.1956%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (92 samples, 0.15%)</title><rect x="22.9244%" y="1093" width="0.1504%" height="15" fill="rgb(223,88,40)" fg:x="14021" fg:w="92"/><text x="23.1744%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (109 samples, 0.18%)</title><rect x="22.9031%" y="1109" width="0.1782%" height="15" fill="rgb(237,54,19)" fg:x="14008" fg:w="109"/><text x="23.1531%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="23.0993%" y="1077" width="0.0131%" height="15" fill="rgb(251,129,25)" fg:x="14128" fg:w="8"/><text x="23.3493%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18 samples, 0.03%)</title><rect x="23.1124%" y="1077" width="0.0294%" height="15" fill="rgb(238,97,19)" fg:x="14136" fg:w="18"/><text x="23.3624%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="23.1713%" y="1061" width="0.0164%" height="15" fill="rgb(240,169,18)" fg:x="14172" fg:w="10"/><text x="23.4213%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="23.1713%" y="1045" width="0.0164%" height="15" fill="rgb(230,187,49)" fg:x="14172" fg:w="10"/><text x="23.4213%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (24 samples, 0.04%)</title><rect x="23.1500%" y="1077" width="0.0392%" height="15" fill="rgb(209,44,26)" fg:x="14159" fg:w="24"/><text x="23.4000%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (13 samples, 0.02%)</title><rect x="23.1990%" y="1061" width="0.0213%" height="15" fill="rgb(244,0,6)" fg:x="14189" fg:w="13"/><text x="23.4490%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.03%)</title><rect x="23.2203%" y="1061" width="0.0262%" height="15" fill="rgb(248,18,21)" fg:x="14202" fg:w="16"/><text x="23.4703%" y="1071.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (9 samples, 0.01%)</title><rect x="23.2465%" y="1061" width="0.0147%" height="15" fill="rgb(245,180,19)" fg:x="14218" fg:w="9"/><text x="23.4965%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.02%)</title><rect x="23.3037%" y="1045" width="0.0245%" height="15" fill="rgb(252,118,36)" fg:x="14253" fg:w="15"/><text x="23.5537%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="23.3070%" y="1029" width="0.0213%" height="15" fill="rgb(210,224,19)" fg:x="14255" fg:w="13"/><text x="23.5570%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (41 samples, 0.07%)</title><rect x="23.2628%" y="1061" width="0.0670%" height="15" fill="rgb(218,30,24)" fg:x="14228" fg:w="41"/><text x="23.5128%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_free (20 samples, 0.03%)</title><rect x="23.3609%" y="1045" width="0.0327%" height="15" fill="rgb(219,75,50)" fg:x="14288" fg:w="20"/><text x="23.6109%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (37 samples, 0.06%)</title><rect x="23.3936%" y="1045" width="0.0605%" height="15" fill="rgb(234,72,50)" fg:x="14308" fg:w="37"/><text x="23.6436%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (35 samples, 0.06%)</title><rect x="23.4933%" y="1029" width="0.0572%" height="15" fill="rgb(219,100,48)" fg:x="14369" fg:w="35"/><text x="23.7433%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.03%)</title><rect x="23.5179%" y="1013" width="0.0327%" height="15" fill="rgb(253,5,41)" fg:x="14384" fg:w="20"/><text x="23.7679%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (56 samples, 0.09%)</title><rect x="23.4721%" y="1045" width="0.0916%" height="15" fill="rgb(247,181,11)" fg:x="14356" fg:w="56"/><text x="23.7221%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.01%)</title><rect x="23.5506%" y="1029" width="0.0131%" height="15" fill="rgb(222,223,25)" fg:x="14404" fg:w="8"/><text x="23.8006%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (46 samples, 0.08%)</title><rect x="23.5914%" y="1029" width="0.0752%" height="15" fill="rgb(214,198,28)" fg:x="14429" fg:w="46"/><text x="23.8414%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (39 samples, 0.06%)</title><rect x="23.7026%" y="1013" width="0.0638%" height="15" fill="rgb(230,46,43)" fg:x="14497" fg:w="39"/><text x="23.9526%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.04%)</title><rect x="23.7272%" y="997" width="0.0392%" height="15" fill="rgb(233,65,53)" fg:x="14512" fg:w="24"/><text x="23.9772%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.01%)</title><rect x="23.7549%" y="981" width="0.0114%" height="15" fill="rgb(221,121,27)" fg:x="14529" fg:w="7"/><text x="24.0049%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (63 samples, 0.10%)</title><rect x="23.6716%" y="1029" width="0.1030%" height="15" fill="rgb(247,70,47)" fg:x="14478" fg:w="63"/><text x="23.9216%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (11 samples, 0.02%)</title><rect x="23.7991%" y="1013" width="0.0180%" height="15" fill="rgb(228,85,35)" fg:x="14556" fg:w="11"/><text x="24.0491%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.03%)</title><rect x="23.8171%" y="1013" width="0.0262%" height="15" fill="rgb(209,50,18)" fg:x="14567" fg:w="16"/><text x="24.0671%" y="1023.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (8 samples, 0.01%)</title><rect x="23.8449%" y="1013" width="0.0131%" height="15" fill="rgb(250,19,35)" fg:x="14584" fg:w="8"/><text x="24.0949%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="23.8710%" y="997" width="0.0147%" height="15" fill="rgb(253,107,29)" fg:x="14600" fg:w="9"/><text x="24.1210%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.03%)</title><rect x="23.8596%" y="1013" width="0.0278%" height="15" fill="rgb(252,179,29)" fg:x="14593" fg:w="17"/><text x="24.1096%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (33 samples, 0.05%)</title><rect x="23.9086%" y="997" width="0.0540%" height="15" fill="rgb(238,194,6)" fg:x="14623" fg:w="33"/><text x="24.1586%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (10 samples, 0.02%)</title><rect x="23.9626%" y="997" width="0.0164%" height="15" fill="rgb(238,164,29)" fg:x="14656" fg:w="10"/><text x="24.2126%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="23.9953%" y="981" width="0.0229%" height="15" fill="rgb(224,25,9)" fg:x="14676" fg:w="14"/><text x="24.2453%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="24.0002%" y="965" width="0.0180%" height="15" fill="rgb(244,153,23)" fg:x="14679" fg:w="11"/><text x="24.2502%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (26 samples, 0.04%)</title><rect x="23.9806%" y="997" width="0.0425%" height="15" fill="rgb(212,203,14)" fg:x="14667" fg:w="26"/><text x="24.2306%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_free (15 samples, 0.02%)</title><rect x="24.0378%" y="981" width="0.0245%" height="15" fill="rgb(220,164,20)" fg:x="14702" fg:w="15"/><text x="24.2878%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="24.0623%" y="981" width="0.0245%" height="15" fill="rgb(222,203,48)" fg:x="14717" fg:w="15"/><text x="24.3123%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="24.1130%" y="965" width="0.0196%" height="15" fill="rgb(215,159,22)" fg:x="14748" fg:w="12"/><text x="24.3630%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="24.1196%" y="949" width="0.0131%" height="15" fill="rgb(216,183,47)" fg:x="14752" fg:w="8"/><text x="24.3696%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (25 samples, 0.04%)</title><rect x="24.0950%" y="981" width="0.0409%" height="15" fill="rgb(229,195,25)" fg:x="14737" fg:w="25"/><text x="24.3450%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (23 samples, 0.04%)</title><rect x="24.1523%" y="965" width="0.0376%" height="15" fill="rgb(224,132,51)" fg:x="14772" fg:w="23"/><text x="24.4023%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.03%)</title><rect x="24.2127%" y="949" width="0.0294%" height="15" fill="rgb(240,63,7)" fg:x="14809" fg:w="18"/><text x="24.4627%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="24.2226%" y="933" width="0.0196%" height="15" fill="rgb(249,182,41)" fg:x="14815" fg:w="12"/><text x="24.4726%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (35 samples, 0.06%)</title><rect x="24.1997%" y="965" width="0.0572%" height="15" fill="rgb(243,47,26)" fg:x="14801" fg:w="35"/><text x="24.4497%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.01%)</title><rect x="24.2438%" y="949" width="0.0131%" height="15" fill="rgb(233,48,2)" fg:x="14828" fg:w="8"/><text x="24.4938%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (712 samples, 1.16%)</title><rect x="23.0993%" y="1093" width="1.1641%" height="15" fill="rgb(244,165,34)" fg:x="14128" fg:w="712"/><text x="23.3493%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (657 samples, 1.07%)</title><rect x="23.1892%" y="1077" width="1.0742%" height="15" fill="rgb(207,89,7)" fg:x="14183" fg:w="657"/><text x="23.4392%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (571 samples, 0.93%)</title><rect x="23.3298%" y="1061" width="0.9336%" height="15" fill="rgb(244,117,36)" fg:x="14269" fg:w="571"/><text x="23.5798%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (428 samples, 0.70%)</title><rect x="23.5637%" y="1045" width="0.6998%" height="15" fill="rgb(226,144,34)" fg:x="14412" fg:w="428"/><text x="23.8137%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (299 samples, 0.49%)</title><rect x="23.7746%" y="1029" width="0.4889%" height="15" fill="rgb(213,23,19)" fg:x="14541" fg:w="299"/><text x="24.0246%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (230 samples, 0.38%)</title><rect x="23.8874%" y="1013" width="0.3761%" height="15" fill="rgb(217,75,12)" fg:x="14610" fg:w="230"/><text x="24.1374%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (147 samples, 0.24%)</title><rect x="24.0231%" y="997" width="0.2403%" height="15" fill="rgb(224,159,17)" fg:x="14693" fg:w="147"/><text x="24.2731%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (78 samples, 0.13%)</title><rect x="24.1359%" y="981" width="0.1275%" height="15" fill="rgb(217,118,1)" fg:x="14762" fg:w="78"/><text x="24.3859%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (722 samples, 1.18%)</title><rect x="23.0846%" y="1109" width="1.1805%" height="15" fill="rgb(232,180,48)" fg:x="14119" fg:w="722"/><text x="23.3346%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="24.3092%" y="1061" width="0.0114%" height="15" fill="rgb(230,27,33)" fg:x="14868" fg:w="7"/><text x="24.5592%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (19 samples, 0.03%)</title><rect x="24.2945%" y="1077" width="0.0311%" height="15" fill="rgb(205,31,21)" fg:x="14859" fg:w="19"/><text x="24.5445%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (33 samples, 0.05%)</title><rect x="24.2732%" y="1093" width="0.0540%" height="15" fill="rgb(253,59,4)" fg:x="14846" fg:w="33"/><text x="24.5232%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.01%)</title><rect x="24.3419%" y="1077" width="0.0131%" height="15" fill="rgb(224,201,9)" fg:x="14888" fg:w="8"/><text x="24.5919%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="24.3762%" y="1077" width="0.0147%" height="15" fill="rgb(229,206,30)" fg:x="14909" fg:w="9"/><text x="24.6262%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="24.4269%" y="1045" width="0.0196%" height="15" fill="rgb(212,67,47)" fg:x="14940" fg:w="12"/><text x="24.6769%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="24.4286%" y="1029" width="0.0180%" height="15" fill="rgb(211,96,50)" fg:x="14941" fg:w="11"/><text x="24.6786%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (31 samples, 0.05%)</title><rect x="24.4531%" y="1045" width="0.0507%" height="15" fill="rgb(252,114,18)" fg:x="14956" fg:w="31"/><text x="24.7031%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (57 samples, 0.09%)</title><rect x="24.4122%" y="1061" width="0.0932%" height="15" fill="rgb(223,58,37)" fg:x="14931" fg:w="57"/><text x="24.6622%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="24.5054%" y="1061" width="0.0114%" height="15" fill="rgb(237,70,4)" fg:x="14988" fg:w="7"/><text x="24.7554%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.02%)</title><rect x="24.5528%" y="1045" width="0.0213%" height="15" fill="rgb(244,85,46)" fg:x="15017" fg:w="13"/><text x="24.8028%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.03%)</title><rect x="24.5855%" y="1045" width="0.0278%" height="15" fill="rgb(223,39,52)" fg:x="15037" fg:w="17"/><text x="24.8355%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="24.6133%" y="1045" width="0.0180%" height="15" fill="rgb(218,200,14)" fg:x="15054" fg:w="11"/><text x="24.8633%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.04%)</title><rect x="24.6313%" y="1045" width="0.0441%" height="15" fill="rgb(208,171,16)" fg:x="15065" fg:w="27"/><text x="24.8813%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (21 samples, 0.03%)</title><rect x="24.6411%" y="1029" width="0.0343%" height="15" fill="rgb(234,200,18)" fg:x="15071" fg:w="21"/><text x="24.8911%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.02%)</title><rect x="24.6967%" y="1029" width="0.0229%" height="15" fill="rgb(228,45,11)" fg:x="15105" fg:w="14"/><text x="24.9467%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="24.7899%" y="981" width="0.0196%" height="15" fill="rgb(237,182,11)" fg:x="15162" fg:w="12"/><text x="25.0399%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.05%)</title><rect x="24.7834%" y="1013" width="0.0523%" height="15" fill="rgb(241,175,49)" fg:x="15158" fg:w="32"/><text x="25.0334%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.05%)</title><rect x="24.7850%" y="997" width="0.0507%" height="15" fill="rgb(247,38,35)" fg:x="15159" fg:w="31"/><text x="25.0350%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.03%)</title><rect x="24.8095%" y="981" width="0.0262%" height="15" fill="rgb(228,39,49)" fg:x="15174" fg:w="16"/><text x="25.0595%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="24.8766%" y="997" width="0.0131%" height="15" fill="rgb(226,101,26)" fg:x="15215" fg:w="8"/><text x="25.1266%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (27 samples, 0.04%)</title><rect x="24.8471%" y="1013" width="0.0441%" height="15" fill="rgb(206,141,19)" fg:x="15197" fg:w="27"/><text x="25.0971%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (94 samples, 0.15%)</title><rect x="24.7392%" y="1029" width="0.1537%" height="15" fill="rgb(211,200,13)" fg:x="15131" fg:w="94"/><text x="24.9892%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (20 samples, 0.03%)</title><rect x="24.9272%" y="1013" width="0.0327%" height="15" fill="rgb(241,121,6)" fg:x="15246" fg:w="20"/><text x="25.1772%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="24.9632%" y="1013" width="0.0114%" height="15" fill="rgb(234,221,29)" fg:x="15268" fg:w="7"/><text x="25.2132%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (25 samples, 0.04%)</title><rect x="24.9747%" y="1013" width="0.0409%" height="15" fill="rgb(229,136,5)" fg:x="15275" fg:w="25"/><text x="25.2247%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (23 samples, 0.04%)</title><rect x="24.9779%" y="997" width="0.0376%" height="15" fill="rgb(238,36,11)" fg:x="15277" fg:w="23"/><text x="25.2279%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.01%)</title><rect x="25.0008%" y="981" width="0.0147%" height="15" fill="rgb(251,55,41)" fg:x="15291" fg:w="9"/><text x="25.2508%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (8 samples, 0.01%)</title><rect x="25.0025%" y="965" width="0.0131%" height="15" fill="rgb(242,34,40)" fg:x="15292" fg:w="8"/><text x="25.2525%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="25.0286%" y="997" width="0.0180%" height="15" fill="rgb(215,42,17)" fg:x="15308" fg:w="11"/><text x="25.2786%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="25.0629%" y="997" width="0.0131%" height="15" fill="rgb(207,44,46)" fg:x="15329" fg:w="8"/><text x="25.3129%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.02%)</title><rect x="25.1202%" y="949" width="0.0180%" height="15" fill="rgb(211,206,28)" fg:x="15364" fg:w="11"/><text x="25.3702%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.05%)</title><rect x="25.1136%" y="981" width="0.0458%" height="15" fill="rgb(237,167,16)" fg:x="15360" fg:w="28"/><text x="25.3636%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.05%)</title><rect x="25.1136%" y="965" width="0.0458%" height="15" fill="rgb(233,66,6)" fg:x="15360" fg:w="28"/><text x="25.3636%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="25.1382%" y="949" width="0.0213%" height="15" fill="rgb(246,123,29)" fg:x="15375" fg:w="13"/><text x="25.3882%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (38 samples, 0.06%)</title><rect x="25.1725%" y="981" width="0.0621%" height="15" fill="rgb(209,62,40)" fg:x="15396" fg:w="38"/><text x="25.4225%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (104 samples, 0.17%)</title><rect x="25.0760%" y="997" width="0.1700%" height="15" fill="rgb(218,4,25)" fg:x="15337" fg:w="104"/><text x="25.3260%" y="1007.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (7 samples, 0.01%)</title><rect x="25.2346%" y="981" width="0.0114%" height="15" fill="rgb(253,91,49)" fg:x="15434" fg:w="7"/><text x="25.4846%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="25.2477%" y="997" width="0.0343%" height="15" fill="rgb(228,155,29)" fg:x="15442" fg:w="21"/><text x="25.4977%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (13 samples, 0.02%)</title><rect x="25.2608%" y="981" width="0.0213%" height="15" fill="rgb(243,57,37)" fg:x="15450" fg:w="13"/><text x="25.5108%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="25.3066%" y="981" width="0.0196%" height="15" fill="rgb(244,167,17)" fg:x="15478" fg:w="12"/><text x="25.5566%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (28 samples, 0.05%)</title><rect x="25.3376%" y="981" width="0.0458%" height="15" fill="rgb(207,181,38)" fg:x="15497" fg:w="28"/><text x="25.5876%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="25.3850%" y="981" width="0.0147%" height="15" fill="rgb(211,8,23)" fg:x="15526" fg:w="9"/><text x="25.6350%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (29 samples, 0.05%)</title><rect x="25.3998%" y="981" width="0.0474%" height="15" fill="rgb(235,11,44)" fg:x="15535" fg:w="29"/><text x="25.6498%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (24 samples, 0.04%)</title><rect x="25.4079%" y="965" width="0.0392%" height="15" fill="rgb(248,18,52)" fg:x="15540" fg:w="24"/><text x="25.6579%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (10 samples, 0.02%)</title><rect x="25.4308%" y="949" width="0.0164%" height="15" fill="rgb(208,4,7)" fg:x="15554" fg:w="10"/><text x="25.6808%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (10 samples, 0.02%)</title><rect x="25.4308%" y="933" width="0.0164%" height="15" fill="rgb(240,17,39)" fg:x="15554" fg:w="10"/><text x="25.6808%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="25.5093%" y="949" width="0.0180%" height="15" fill="rgb(207,170,3)" fg:x="15602" fg:w="11"/><text x="25.7593%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="25.5158%" y="933" width="0.0114%" height="15" fill="rgb(236,100,52)" fg:x="15606" fg:w="7"/><text x="25.7658%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (23 samples, 0.04%)</title><rect x="25.4995%" y="965" width="0.0376%" height="15" fill="rgb(246,78,51)" fg:x="15596" fg:w="23"/><text x="25.7495%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="25.5387%" y="965" width="0.0278%" height="15" fill="rgb(211,17,15)" fg:x="15620" fg:w="17"/><text x="25.7887%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (17 samples, 0.03%)</title><rect x="25.5387%" y="949" width="0.0278%" height="15" fill="rgb(209,59,46)" fg:x="15620" fg:w="17"/><text x="25.7887%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.05%)</title><rect x="25.5665%" y="965" width="0.0474%" height="15" fill="rgb(210,92,25)" fg:x="15637" fg:w="29"/><text x="25.8165%" y="975.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (15 samples, 0.02%)</title><rect x="25.5894%" y="949" width="0.0245%" height="15" fill="rgb(238,174,52)" fg:x="15651" fg:w="15"/><text x="25.8394%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="25.5960%" y="933" width="0.0180%" height="15" fill="rgb(230,73,7)" fg:x="15655" fg:w="11"/><text x="25.8460%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="25.5976%" y="917" width="0.0164%" height="15" fill="rgb(243,124,40)" fg:x="15656" fg:w="10"/><text x="25.8476%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="25.6663%" y="917" width="0.0196%" height="15" fill="rgb(244,170,11)" fg:x="15698" fg:w="12"/><text x="25.9163%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="25.6728%" y="901" width="0.0131%" height="15" fill="rgb(207,114,54)" fg:x="15702" fg:w="8"/><text x="25.9228%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (33 samples, 0.05%)</title><rect x="25.6957%" y="917" width="0.0540%" height="15" fill="rgb(205,42,20)" fg:x="15716" fg:w="33"/><text x="25.9457%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (66 samples, 0.11%)</title><rect x="25.6450%" y="933" width="0.1079%" height="15" fill="rgb(230,30,28)" fg:x="15685" fg:w="66"/><text x="25.8950%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="25.7676%" y="917" width="0.0147%" height="15" fill="rgb(205,73,54)" fg:x="15760" fg:w="9"/><text x="26.0176%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="25.7823%" y="917" width="0.0131%" height="15" fill="rgb(254,227,23)" fg:x="15769" fg:w="8"/><text x="26.0323%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.03%)</title><rect x="25.7954%" y="917" width="0.0294%" height="15" fill="rgb(228,202,34)" fg:x="15777" fg:w="18"/><text x="26.0454%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="25.8249%" y="917" width="0.0180%" height="15" fill="rgb(222,225,37)" fg:x="15795" fg:w="11"/><text x="26.0749%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (24 samples, 0.04%)</title><rect x="25.8428%" y="917" width="0.0392%" height="15" fill="rgb(221,14,54)" fg:x="15806" fg:w="24"/><text x="26.0928%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (20 samples, 0.03%)</title><rect x="25.8494%" y="901" width="0.0327%" height="15" fill="rgb(254,102,2)" fg:x="15810" fg:w="20"/><text x="26.0994%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.01%)</title><rect x="25.8674%" y="885" width="0.0147%" height="15" fill="rgb(232,104,17)" fg:x="15821" fg:w="9"/><text x="26.1174%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.01%)</title><rect x="25.9115%" y="901" width="0.0131%" height="15" fill="rgb(250,220,14)" fg:x="15848" fg:w="8"/><text x="26.1615%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="25.9246%" y="901" width="0.0180%" height="15" fill="rgb(241,158,9)" fg:x="15856" fg:w="11"/><text x="26.1746%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.03%)</title><rect x="25.9720%" y="885" width="0.0278%" height="15" fill="rgb(246,9,43)" fg:x="15885" fg:w="17"/><text x="26.2220%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.02%)</title><rect x="25.9753%" y="869" width="0.0245%" height="15" fill="rgb(206,73,33)" fg:x="15887" fg:w="15"/><text x="26.2253%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="25.9867%" y="853" width="0.0131%" height="15" fill="rgb(222,79,8)" fg:x="15894" fg:w="8"/><text x="26.2367%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (46 samples, 0.08%)</title><rect x="25.9540%" y="901" width="0.0752%" height="15" fill="rgb(234,8,54)" fg:x="15874" fg:w="46"/><text x="26.2040%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (15 samples, 0.02%)</title><rect x="26.0047%" y="885" width="0.0245%" height="15" fill="rgb(209,134,38)" fg:x="15905" fg:w="15"/><text x="26.2547%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="26.0292%" y="901" width="0.0262%" height="15" fill="rgb(230,127,29)" fg:x="15920" fg:w="16"/><text x="26.2792%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14 samples, 0.02%)</title><rect x="26.0325%" y="885" width="0.0229%" height="15" fill="rgb(242,44,41)" fg:x="15922" fg:w="14"/><text x="26.2825%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.01%)</title><rect x="26.0439%" y="869" width="0.0114%" height="15" fill="rgb(222,56,43)" fg:x="15929" fg:w="7"/><text x="26.2939%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (7 samples, 0.01%)</title><rect x="26.0439%" y="853" width="0.0114%" height="15" fill="rgb(238,39,47)" fg:x="15929" fg:w="7"/><text x="26.2939%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="26.0799%" y="885" width="0.0147%" height="15" fill="rgb(226,79,43)" fg:x="15951" fg:w="9"/><text x="26.3299%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="26.0832%" y="869" width="0.0114%" height="15" fill="rgb(242,105,53)" fg:x="15953" fg:w="7"/><text x="26.3332%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="26.1093%" y="869" width="0.0327%" height="15" fill="rgb(251,132,46)" fg:x="15969" fg:w="20"/><text x="26.3593%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.03%)</title><rect x="26.1502%" y="869" width="0.0343%" height="15" fill="rgb(231,77,14)" fg:x="15994" fg:w="21"/><text x="26.4002%" y="879.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (8 samples, 0.01%)</title><rect x="26.1715%" y="853" width="0.0131%" height="15" fill="rgb(240,135,9)" fg:x="16007" fg:w="8"/><text x="26.4215%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (83 samples, 0.14%)</title><rect x="26.0554%" y="901" width="0.1357%" height="15" fill="rgb(248,109,14)" fg:x="15936" fg:w="83"/><text x="26.3054%" y="911.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (56 samples, 0.09%)</title><rect x="26.0995%" y="885" width="0.0916%" height="15" fill="rgb(227,146,52)" fg:x="15963" fg:w="56"/><text x="26.3495%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="26.2124%" y="885" width="0.0147%" height="15" fill="rgb(232,54,3)" fg:x="16032" fg:w="9"/><text x="26.4624%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="26.2418%" y="869" width="0.0196%" height="15" fill="rgb(229,201,43)" fg:x="16050" fg:w="12"/><text x="26.4918%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.03%)</title><rect x="26.3006%" y="853" width="0.0311%" height="15" fill="rgb(252,161,33)" fg:x="16086" fg:w="19"/><text x="26.5506%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.02%)</title><rect x="26.3072%" y="837" width="0.0245%" height="15" fill="rgb(226,146,40)" fg:x="16090" fg:w="15"/><text x="26.5572%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (22 samples, 0.04%)</title><rect x="26.3333%" y="853" width="0.0360%" height="15" fill="rgb(219,47,25)" fg:x="16106" fg:w="22"/><text x="26.5833%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (64 samples, 0.10%)</title><rect x="26.2663%" y="869" width="0.1046%" height="15" fill="rgb(250,135,13)" fg:x="16065" fg:w="64"/><text x="26.5163%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="26.3742%" y="869" width="0.0131%" height="15" fill="rgb(219,229,18)" fg:x="16131" fg:w="8"/><text x="26.6242%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="26.4118%" y="853" width="0.0180%" height="15" fill="rgb(217,152,27)" fg:x="16154" fg:w="11"/><text x="26.6618%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (25 samples, 0.04%)</title><rect x="26.4331%" y="853" width="0.0409%" height="15" fill="rgb(225,71,47)" fg:x="16167" fg:w="25"/><text x="26.6831%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (22 samples, 0.04%)</title><rect x="26.4380%" y="837" width="0.0360%" height="15" fill="rgb(220,139,14)" fg:x="16170" fg:w="22"/><text x="26.6880%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.02%)</title><rect x="26.4968%" y="837" width="0.0245%" height="15" fill="rgb(247,54,32)" fg:x="16206" fg:w="15"/><text x="26.7468%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (22 samples, 0.04%)</title><rect x="26.5214%" y="837" width="0.0360%" height="15" fill="rgb(252,131,39)" fg:x="16221" fg:w="22"/><text x="26.7714%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (19 samples, 0.03%)</title><rect x="26.5263%" y="821" width="0.0311%" height="15" fill="rgb(210,108,39)" fg:x="16224" fg:w="19"/><text x="26.7763%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (10 samples, 0.02%)</title><rect x="26.5410%" y="805" width="0.0164%" height="15" fill="rgb(205,23,29)" fg:x="16233" fg:w="10"/><text x="26.7910%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (10 samples, 0.02%)</title><rect x="26.5410%" y="789" width="0.0164%" height="15" fill="rgb(246,139,46)" fg:x="16233" fg:w="10"/><text x="26.7910%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (105 samples, 0.17%)</title><rect x="26.3873%" y="869" width="0.1717%" height="15" fill="rgb(250,81,26)" fg:x="16139" fg:w="105"/><text x="26.6373%" y="879.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (49 samples, 0.08%)</title><rect x="26.4789%" y="853" width="0.0801%" height="15" fill="rgb(214,104,7)" fg:x="16195" fg:w="49"/><text x="26.7289%" y="863.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (229 samples, 0.37%)</title><rect x="26.1993%" y="901" width="0.3744%" height="15" fill="rgb(233,189,8)" fg:x="16024" fg:w="229"/><text x="26.4493%" y="911.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (206 samples, 0.34%)</title><rect x="26.2369%" y="885" width="0.3368%" height="15" fill="rgb(228,141,17)" fg:x="16047" fg:w="206"/><text x="26.4869%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="26.5835%" y="885" width="0.0229%" height="15" fill="rgb(247,157,1)" fg:x="16259" fg:w="14"/><text x="26.8335%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="26.6358%" y="853" width="0.0229%" height="15" fill="rgb(249,225,5)" fg:x="16291" fg:w="14"/><text x="26.8858%" y="863.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.03%)</title><rect x="26.6669%" y="837" width="0.0343%" height="15" fill="rgb(242,55,13)" fg:x="16310" fg:w="21"/><text x="26.9169%" y="847.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.05%)</title><rect x="26.6587%" y="853" width="0.0523%" height="15" fill="rgb(230,49,50)" fg:x="16305" fg:w="32"/><text x="26.9087%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (55 samples, 0.09%)</title><rect x="26.6227%" y="869" width="0.0899%" height="15" fill="rgb(241,111,38)" fg:x="16283" fg:w="55"/><text x="26.8727%" y="879.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (68 samples, 0.11%)</title><rect x="26.6064%" y="885" width="0.1112%" height="15" fill="rgb(252,155,4)" fg:x="16273" fg:w="68"/><text x="26.8564%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (588 samples, 0.96%)</title><rect x="25.7578%" y="933" width="0.9614%" height="15" fill="rgb(212,69,32)" fg:x="15754" fg:w="588"/><text x="26.0078%" y="943.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (506 samples, 0.83%)</title><rect x="25.8919%" y="917" width="0.8273%" height="15" fill="rgb(243,107,47)" fg:x="15836" fg:w="506"/><text x="26.1419%" y="927.50"></text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (88 samples, 0.14%)</title><rect x="26.5753%" y="901" width="0.1439%" height="15" fill="rgb(247,130,12)" fg:x="16254" fg:w="88"/><text x="26.8253%" y="911.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (681 samples, 1.11%)</title><rect x="25.6205%" y="965" width="1.1134%" height="15" fill="rgb(233,74,16)" fg:x="15670" fg:w="681"/><text x="25.8705%" y="975.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (675 samples, 1.10%)</title><rect x="25.6303%" y="949" width="1.1036%" height="15" fill="rgb(208,58,18)" fg:x="15676" fg:w="675"/><text x="25.8803%" y="959.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="26.7372%" y="949" width="0.0114%" height="15" fill="rgb(242,225,1)" fg:x="16353" fg:w="7"/><text x="26.9872%" y="959.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="26.7732%" y="917" width="0.0245%" height="15" fill="rgb(249,39,40)" fg:x="16375" fg:w="15"/><text x="27.0232%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="26.8271%" y="901" width="0.0180%" height="15" fill="rgb(207,72,44)" fg:x="16408" fg:w="11"/><text x="27.0771%" y="911.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.04%)</title><rect x="26.8467%" y="901" width="0.0376%" height="15" fill="rgb(215,193,12)" fg:x="16420" fg:w="23"/><text x="27.0967%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.02%)</title><rect x="26.9056%" y="885" width="0.0196%" height="15" fill="rgb(248,41,39)" fg:x="16456" fg:w="12"/><text x="27.1556%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="26.9612%" y="853" width="0.0196%" height="15" fill="rgb(253,85,4)" fg:x="16490" fg:w="12"/><text x="27.2112%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.07%)</title><rect x="26.9383%" y="885" width="0.0670%" height="15" fill="rgb(243,70,31)" fg:x="16476" fg:w="41"/><text x="27.1883%" y="895.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.05%)</title><rect x="26.9546%" y="869" width="0.0507%" height="15" fill="rgb(253,195,26)" fg:x="16486" fg:w="31"/><text x="27.2046%" y="879.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (15 samples, 0.02%)</title><rect x="26.9808%" y="853" width="0.0245%" height="15" fill="rgb(243,42,11)" fg:x="16502" fg:w="15"/><text x="27.2308%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="26.9857%" y="837" width="0.0196%" height="15" fill="rgb(239,66,17)" fg:x="16505" fg:w="12"/><text x="27.2357%" y="847.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="27.0168%" y="869" width="0.0164%" height="15" fill="rgb(217,132,21)" fg:x="16524" fg:w="10"/><text x="27.2668%" y="879.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="27.0740%" y="837" width="0.0245%" height="15" fill="rgb(252,202,21)" fg:x="16559" fg:w="15"/><text x="27.3240%" y="847.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.03%)</title><rect x="27.1083%" y="821" width="0.0343%" height="15" fill="rgb(233,98,36)" fg:x="16580" fg:w="21"/><text x="27.3583%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.08%)</title><rect x="27.0658%" y="853" width="0.0785%" height="15" fill="rgb(216,153,54)" fg:x="16554" fg:w="48"/><text x="27.3158%" y="863.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.05%)</title><rect x="27.0985%" y="837" width="0.0458%" height="15" fill="rgb(250,99,7)" fg:x="16574" fg:w="28"/><text x="27.3485%" y="847.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (75 samples, 0.12%)</title><rect x="27.0331%" y="869" width="0.1226%" height="15" fill="rgb(207,56,50)" fg:x="16534" fg:w="75"/><text x="27.2831%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (96 samples, 0.16%)</title><rect x="27.0053%" y="885" width="0.1570%" height="15" fill="rgb(244,61,34)" fg:x="16517" fg:w="96"/><text x="27.2553%" y="895.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (171 samples, 0.28%)</title><rect x="26.8843%" y="901" width="0.2796%" height="15" fill="rgb(241,50,38)" fg:x="16443" fg:w="171"/><text x="27.1343%" y="911.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (227 samples, 0.37%)</title><rect x="26.7977%" y="917" width="0.3711%" height="15" fill="rgb(212,166,30)" fg:x="16390" fg:w="227"/><text x="27.0477%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (250 samples, 0.41%)</title><rect x="26.7650%" y="933" width="0.4088%" height="15" fill="rgb(249,127,32)" fg:x="16370" fg:w="250"/><text x="27.0150%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,161 samples, 1.90%)</title><rect x="25.2820%" y="997" width="1.8982%" height="15" fill="rgb(209,103,0)" fg:x="15463" fg:w="1161"/><text x="25.5320%" y="1007.50">s..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (1,055 samples, 1.72%)</title><rect x="25.4553%" y="981" width="1.7249%" height="15" fill="rgb(238,209,51)" fg:x="15569" fg:w="1055"/><text x="25.7053%" y="991.50"></text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (273 samples, 0.45%)</title><rect x="26.7339%" y="965" width="0.4464%" height="15" fill="rgb(237,56,23)" fg:x="16351" fg:w="273"/><text x="26.9839%" y="975.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (264 samples, 0.43%)</title><rect x="26.7486%" y="949" width="0.4316%" height="15" fill="rgb(215,153,46)" fg:x="16360" fg:w="264"/><text x="26.9986%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,405 samples, 2.30%)</title><rect x="24.9027%" y="1029" width="2.2972%" height="15" fill="rgb(224,49,31)" fg:x="15231" fg:w="1405"/><text x="25.1527%" y="1039.50">s..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (1,331 samples, 2.18%)</title><rect x="25.0237%" y="1013" width="2.1762%" height="15" fill="rgb(250,18,42)" fg:x="15305" fg:w="1331"/><text x="25.2737%" y="1023.50">s..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,649 samples, 2.70%)</title><rect x="24.5169%" y="1061" width="2.6961%" height="15" fill="rgb(215,176,39)" fg:x="14995" fg:w="1649"/><text x="24.7669%" y="1071.50">sk..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (1,548 samples, 2.53%)</title><rect x="24.6820%" y="1045" width="2.5310%" height="15" fill="rgb(223,77,29)" fg:x="15096" fg:w="1548"/><text x="24.9320%" y="1055.50">sk..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,768 samples, 2.89%)</title><rect x="24.3354%" y="1093" width="2.8907%" height="15" fill="rgb(234,94,52)" fg:x="14884" fg:w="1768"/><text x="24.5854%" y="1103.50">sk..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (1,733 samples, 2.83%)</title><rect x="24.3926%" y="1077" width="2.8335%" height="15" fill="rgb(220,154,50)" fg:x="14919" fg:w="1733"/><text x="24.6426%" y="1087.50">sk..</text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::cmp::PartialEq&gt;::eq (4,337 samples, 7.09%)</title><rect x="20.1400%" y="1141" width="7.0910%" height="15" fill="rgb(212,11,10)" fg:x="12318" fg:w="4337"/><text x="20.3900%" y="1151.50">sk-gen`&lt;sk..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_eq (2,650 samples, 4.33%)</title><rect x="22.8982%" y="1125" width="4.3328%" height="15" fill="rgb(205,166,19)" fg:x="14005" fg:w="2650"/><text x="23.1482%" y="1135.50">sk-ge..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (1,814 samples, 2.97%)</title><rect x="24.2651%" y="1109" width="2.9659%" height="15" fill="rgb(244,198,16)" fg:x="14841" fg:w="1814"/><text x="24.5151%" y="1119.50">sk-..</text></g><g><title>sk-gen`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,540 samples, 7.42%)</title><rect x="19.8179%" y="1157" width="7.4229%" height="15" fill="rgb(219,69,12)" fg:x="12121" fg:w="4540"/><text x="20.0679%" y="1167.50">sk-gen`all..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.02%)</title><rect x="27.2424%" y="1141" width="0.0196%" height="15" fill="rgb(245,30,7)" fg:x="16662" fg:w="12"/><text x="27.4924%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,953 samples, 8.10%)</title><rect x="19.1769%" y="1189" width="8.0982%" height="15" fill="rgb(218,221,48)" fg:x="11729" fg:w="4953"/><text x="19.4269%" y="1199.50">sk-gen`&lt;all..</text></g><g><title>sk-gen`sk_gen::diff_objects (4,569 samples, 7.47%)</title><rect x="19.8048%" y="1173" width="7.4703%" height="15" fill="rgb(216,66,15)" fg:x="12113" fg:w="4569"/><text x="20.0548%" y="1183.50">sk-gen`sk_..</text></g><g><title>sk-gen`daft::alloc_impls::_&lt;impl daft::diffable::Diffable for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::diff (21 samples, 0.03%)</title><rect x="27.2408%" y="1157" width="0.0343%" height="15" fill="rgb(226,122,50)" fg:x="16661" fg:w="21"/><text x="27.4908%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (11 samples, 0.02%)</title><rect x="27.2898%" y="1141" width="0.0180%" height="15" fill="rgb(239,156,16)" fg:x="16691" fg:w="11"/><text x="27.5398%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="27.3209%" y="1109" width="0.0131%" height="15" fill="rgb(224,27,38)" fg:x="16710" fg:w="8"/><text x="27.5709%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="27.3225%" y="1093" width="0.0114%" height="15" fill="rgb(224,39,27)" fg:x="16711" fg:w="7"/><text x="27.5725%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (49 samples, 0.08%)</title><rect x="27.2751%" y="1157" width="0.0801%" height="15" fill="rgb(215,92,29)" fg:x="16682" fg:w="49"/><text x="27.5251%" y="1167.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (29 samples, 0.05%)</title><rect x="27.3078%" y="1141" width="0.0474%" height="15" fill="rgb(207,159,16)" fg:x="16702" fg:w="29"/><text x="27.5578%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.03%)</title><rect x="27.3209%" y="1125" width="0.0343%" height="15" fill="rgb(238,163,47)" fg:x="16710" fg:w="21"/><text x="27.5709%" y="1135.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::convert::From&lt;&amp;kube_core::dynamic::DynamicObject&gt;&gt;::from (12 samples, 0.02%)</title><rect x="27.3356%" y="1109" width="0.0196%" height="15" fill="rgb(219,91,49)" fg:x="16719" fg:w="12"/><text x="27.5856%" y="1119.50"></text></g><g><title>sk-gen`sk_core::k8s::gvk::GVK::from_dynamic_obj (8 samples, 0.01%)</title><rect x="27.3421%" y="1093" width="0.0131%" height="15" fill="rgb(227,167,31)" fg:x="16723" fg:w="8"/><text x="27.5921%" y="1103.50"></text></g><g><title>sk-gen`&lt;kube_core::gvk::GroupVersionKind as core::convert::TryFrom&lt;&amp;kube_core::metadata::TypeMeta&gt;&gt;::try_from (7 samples, 0.01%)</title><rect x="27.3438%" y="1077" width="0.0114%" height="15" fill="rgb(234,80,54)" fg:x="16724" fg:w="7"/><text x="27.5938%" y="1087.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.08%)</title><rect x="27.2751%" y="1189" width="0.0818%" height="15" fill="rgb(212,114,2)" fg:x="16682" fg:w="50"/><text x="27.5251%" y="1199.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 0.08%)</title><rect x="27.2751%" y="1173" width="0.0818%" height="15" fill="rgb(234,50,24)" fg:x="16682" fg:w="50"/><text x="27.5251%" y="1183.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (27 samples, 0.04%)</title><rect x="27.3667%" y="1125" width="0.0441%" height="15" fill="rgb(221,68,8)" fg:x="16738" fg:w="27"/><text x="27.6167%" y="1135.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (26 samples, 0.04%)</title><rect x="27.3683%" y="1109" width="0.0425%" height="15" fill="rgb(254,180,31)" fg:x="16739" fg:w="26"/><text x="27.6183%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::filter::bind_vars (20 samples, 0.03%)</title><rect x="27.3781%" y="1093" width="0.0327%" height="15" fill="rgb(247,130,50)" fg:x="16745" fg:w="20"/><text x="27.6281%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (18 samples, 0.03%)</title><rect x="27.3814%" y="1077" width="0.0294%" height="15" fill="rgb(211,109,4)" fg:x="16747" fg:w="18"/><text x="27.6314%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (17 samples, 0.03%)</title><rect x="27.3830%" y="1061" width="0.0278%" height="15" fill="rgb(238,50,21)" fg:x="16748" fg:w="17"/><text x="27.6330%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::filter::bind_vars (15 samples, 0.02%)</title><rect x="27.3863%" y="1045" width="0.0245%" height="15" fill="rgb(225,57,45)" fg:x="16750" fg:w="15"/><text x="27.6363%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (12 samples, 0.02%)</title><rect x="27.3912%" y="1029" width="0.0196%" height="15" fill="rgb(209,196,50)" fg:x="16753" fg:w="12"/><text x="27.6412%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (9 samples, 0.01%)</title><rect x="27.3961%" y="1013" width="0.0147%" height="15" fill="rgb(242,140,13)" fg:x="16756" fg:w="9"/><text x="27.6461%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::filter::bind_vars (8 samples, 0.01%)</title><rect x="27.3977%" y="997" width="0.0131%" height="15" fill="rgb(217,111,7)" fg:x="16757" fg:w="8"/><text x="27.6477%" y="1007.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (35 samples, 0.06%)</title><rect x="27.3585%" y="1173" width="0.0572%" height="15" fill="rgb(253,193,51)" fg:x="16733" fg:w="35"/><text x="27.6085%" y="1183.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (34 samples, 0.06%)</title><rect x="27.3601%" y="1157" width="0.0556%" height="15" fill="rgb(252,70,29)" fg:x="16734" fg:w="34"/><text x="27.6101%" y="1167.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (33 samples, 0.05%)</title><rect x="27.3618%" y="1141" width="0.0540%" height="15" fill="rgb(232,127,12)" fg:x="16735" fg:w="33"/><text x="27.6118%" y="1151.50"></text></g><g><title>sk-gen`&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="27.4272%" y="1077" width="0.0213%" height="15" fill="rgb(211,180,21)" fg:x="16775" fg:w="13"/><text x="27.6772%" y="1087.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="27.4272%" y="1109" width="0.0262%" height="15" fill="rgb(229,72,13)" fg:x="16775" fg:w="16"/><text x="27.6772%" y="1119.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="27.4272%" y="1093" width="0.0262%" height="15" fill="rgb(240,211,49)" fg:x="16775" fg:w="16"/><text x="27.6772%" y="1103.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (7 samples, 0.01%)</title><rect x="27.4533%" y="1109" width="0.0114%" height="15" fill="rgb(219,149,40)" fg:x="16791" fg:w="7"/><text x="27.7033%" y="1119.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (8 samples, 0.01%)</title><rect x="27.4697%" y="1045" width="0.0131%" height="15" fill="rgb(210,127,46)" fg:x="16801" fg:w="8"/><text x="27.7197%" y="1055.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="27.4828%" y="965" width="0.0114%" height="15" fill="rgb(220,106,7)" fg:x="16809" fg:w="7"/><text x="27.7328%" y="975.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (7 samples, 0.01%)</title><rect x="27.4828%" y="949" width="0.0114%" height="15" fill="rgb(249,31,22)" fg:x="16809" fg:w="7"/><text x="27.7328%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="27.4828%" y="933" width="0.0114%" height="15" fill="rgb(253,1,49)" fg:x="16809" fg:w="7"/><text x="27.7328%" y="943.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (24 samples, 0.04%)</title><rect x="27.4697%" y="1061" width="0.0392%" height="15" fill="rgb(227,144,33)" fg:x="16801" fg:w="24"/><text x="27.7197%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (16 samples, 0.03%)</title><rect x="27.4828%" y="1045" width="0.0262%" height="15" fill="rgb(249,163,44)" fg:x="16809" fg:w="16"/><text x="27.7328%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (16 samples, 0.03%)</title><rect x="27.4828%" y="1029" width="0.0262%" height="15" fill="rgb(234,15,39)" fg:x="16809" fg:w="16"/><text x="27.7328%" y="1039.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (16 samples, 0.03%)</title><rect x="27.4828%" y="1013" width="0.0262%" height="15" fill="rgb(207,66,16)" fg:x="16809" fg:w="16"/><text x="27.7328%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (16 samples, 0.03%)</title><rect x="27.4828%" y="997" width="0.0262%" height="15" fill="rgb(233,112,24)" fg:x="16809" fg:w="16"/><text x="27.7328%" y="1007.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (16 samples, 0.03%)</title><rect x="27.4828%" y="981" width="0.0262%" height="15" fill="rgb(230,90,22)" fg:x="16809" fg:w="16"/><text x="27.7328%" y="991.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (9 samples, 0.01%)</title><rect x="27.4942%" y="965" width="0.0147%" height="15" fill="rgb(229,61,13)" fg:x="16816" fg:w="9"/><text x="27.7442%" y="975.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="27.5204%" y="933" width="0.0147%" height="15" fill="rgb(225,57,24)" fg:x="16832" fg:w="9"/><text x="27.7704%" y="943.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (7 samples, 0.01%)</title><rect x="27.5236%" y="917" width="0.0114%" height="15" fill="rgb(208,169,48)" fg:x="16834" fg:w="7"/><text x="27.7736%" y="927.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.12%)</title><rect x="27.4223%" y="1125" width="0.1177%" height="15" fill="rgb(244,218,51)" fg:x="16772" fg:w="72"/><text x="27.6723%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (43 samples, 0.07%)</title><rect x="27.4697%" y="1109" width="0.0703%" height="15" fill="rgb(214,148,10)" fg:x="16801" fg:w="43"/><text x="27.7197%" y="1119.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (43 samples, 0.07%)</title><rect x="27.4697%" y="1093" width="0.0703%" height="15" fill="rgb(225,174,27)" fg:x="16801" fg:w="43"/><text x="27.7197%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (43 samples, 0.07%)</title><rect x="27.4697%" y="1077" width="0.0703%" height="15" fill="rgb(230,96,26)" fg:x="16801" fg:w="43"/><text x="27.7197%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (19 samples, 0.03%)</title><rect x="27.5089%" y="1061" width="0.0311%" height="15" fill="rgb(232,10,30)" fg:x="16825" fg:w="19"/><text x="27.7589%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (18 samples, 0.03%)</title><rect x="27.5105%" y="1045" width="0.0294%" height="15" fill="rgb(222,8,50)" fg:x="16826" fg:w="18"/><text x="27.7605%" y="1055.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="27.5105%" y="1029" width="0.0294%" height="15" fill="rgb(213,81,27)" fg:x="16826" fg:w="18"/><text x="27.7605%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (18 samples, 0.03%)</title><rect x="27.5105%" y="1013" width="0.0294%" height="15" fill="rgb(245,50,10)" fg:x="16826" fg:w="18"/><text x="27.7605%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (12 samples, 0.02%)</title><rect x="27.5204%" y="997" width="0.0196%" height="15" fill="rgb(216,100,18)" fg:x="16832" fg:w="12"/><text x="27.7704%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (12 samples, 0.02%)</title><rect x="27.5204%" y="981" width="0.0196%" height="15" fill="rgb(236,147,54)" fg:x="16832" fg:w="12"/><text x="27.7704%" y="991.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (12 samples, 0.02%)</title><rect x="27.5204%" y="965" width="0.0196%" height="15" fill="rgb(205,143,26)" fg:x="16832" fg:w="12"/><text x="27.7704%" y="975.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (12 samples, 0.02%)</title><rect x="27.5204%" y="949" width="0.0196%" height="15" fill="rgb(236,26,9)" fg:x="16832" fg:w="12"/><text x="27.7704%" y="959.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (9 samples, 0.01%)</title><rect x="27.5988%" y="1029" width="0.0147%" height="15" fill="rgb(221,165,53)" fg:x="16880" fg:w="9"/><text x="27.8488%" y="1039.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (30 samples, 0.05%)</title><rect x="27.5661%" y="1093" width="0.0491%" height="15" fill="rgb(214,110,17)" fg:x="16860" fg:w="30"/><text x="27.8161%" y="1103.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (26 samples, 0.04%)</title><rect x="27.5727%" y="1077" width="0.0425%" height="15" fill="rgb(237,197,12)" fg:x="16864" fg:w="26"/><text x="27.8227%" y="1087.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (21 samples, 0.03%)</title><rect x="27.5809%" y="1061" width="0.0343%" height="15" fill="rgb(205,84,17)" fg:x="16869" fg:w="21"/><text x="27.8309%" y="1071.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (13 samples, 0.02%)</title><rect x="27.5939%" y="1045" width="0.0213%" height="15" fill="rgb(237,18,45)" fg:x="16877" fg:w="13"/><text x="27.8439%" y="1055.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (38 samples, 0.06%)</title><rect x="27.5547%" y="1109" width="0.0621%" height="15" fill="rgb(221,87,14)" fg:x="16853" fg:w="38"/><text x="27.8047%" y="1119.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (41 samples, 0.07%)</title><rect x="27.5531%" y="1125" width="0.0670%" height="15" fill="rgb(238,186,15)" fg:x="16852" fg:w="41"/><text x="27.8031%" y="1135.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (12 samples, 0.02%)</title><rect x="27.6512%" y="1045" width="0.0196%" height="15" fill="rgb(208,115,11)" fg:x="16912" fg:w="12"/><text x="27.9012%" y="1055.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (10 samples, 0.02%)</title><rect x="27.6544%" y="1029" width="0.0164%" height="15" fill="rgb(254,175,0)" fg:x="16914" fg:w="10"/><text x="27.9044%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (9 samples, 0.01%)</title><rect x="27.6561%" y="1013" width="0.0147%" height="15" fill="rgb(227,24,42)" fg:x="16915" fg:w="9"/><text x="27.9061%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (9 samples, 0.01%)</title><rect x="27.6561%" y="997" width="0.0147%" height="15" fill="rgb(223,211,37)" fg:x="16915" fg:w="9"/><text x="27.9061%" y="1007.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (8 samples, 0.01%)</title><rect x="27.6708%" y="1045" width="0.0131%" height="15" fill="rgb(235,49,27)" fg:x="16924" fg:w="8"/><text x="27.9208%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="27.6708%" y="1029" width="0.0131%" height="15" fill="rgb(254,97,51)" fg:x="16924" fg:w="8"/><text x="27.9208%" y="1039.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.06%)</title><rect x="27.6446%" y="1061" width="0.0605%" height="15" fill="rgb(249,51,40)" fg:x="16908" fg:w="37"/><text x="27.8946%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (13 samples, 0.02%)</title><rect x="27.6839%" y="1045" width="0.0213%" height="15" fill="rgb(210,128,45)" fg:x="16932" fg:w="13"/><text x="27.9339%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (12 samples, 0.02%)</title><rect x="27.6855%" y="1029" width="0.0196%" height="15" fill="rgb(224,137,50)" fg:x="16933" fg:w="12"/><text x="27.9355%" y="1039.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (16 samples, 0.03%)</title><rect x="27.7084%" y="997" width="0.0262%" height="15" fill="rgb(242,15,9)" fg:x="16947" fg:w="16"/><text x="27.9584%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (10 samples, 0.02%)</title><rect x="27.7182%" y="981" width="0.0164%" height="15" fill="rgb(233,187,41)" fg:x="16953" fg:w="10"/><text x="27.9682%" y="991.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (10 samples, 0.02%)</title><rect x="27.7182%" y="965" width="0.0164%" height="15" fill="rgb(227,2,29)" fg:x="16953" fg:w="10"/><text x="27.9682%" y="975.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="27.7084%" y="1013" width="0.0294%" height="15" fill="rgb(222,70,3)" fg:x="16947" fg:w="18"/><text x="27.9584%" y="1023.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="27.7476%" y="949" width="0.0114%" height="15" fill="rgb(213,11,42)" fg:x="16971" fg:w="7"/><text x="27.9976%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="27.7394%" y="997" width="0.0213%" height="15" fill="rgb(225,150,9)" fg:x="16966" fg:w="13"/><text x="27.9894%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::path::Part&lt;T&gt;::map (10 samples, 0.02%)</title><rect x="27.7444%" y="981" width="0.0164%" height="15" fill="rgb(230,162,45)" fg:x="16969" fg:w="10"/><text x="27.9944%" y="991.50"></text></g><g><title>sk-gen`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.01%)</title><rect x="27.7460%" y="965" width="0.0147%" height="15" fill="rgb(222,14,52)" fg:x="16970" fg:w="9"/><text x="27.9960%" y="975.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (15 samples, 0.02%)</title><rect x="27.7689%" y="965" width="0.0245%" height="15" fill="rgb(254,198,14)" fg:x="16984" fg:w="15"/><text x="28.0189%" y="975.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (14 samples, 0.02%)</title><rect x="27.7705%" y="949" width="0.0229%" height="15" fill="rgb(220,217,30)" fg:x="16985" fg:w="14"/><text x="28.0205%" y="959.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (14 samples, 0.02%)</title><rect x="27.7705%" y="933" width="0.0229%" height="15" fill="rgb(215,146,41)" fg:x="16985" fg:w="14"/><text x="28.0205%" y="943.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (14 samples, 0.02%)</title><rect x="27.7705%" y="917" width="0.0229%" height="15" fill="rgb(217,27,36)" fg:x="16985" fg:w="14"/><text x="28.0205%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (14 samples, 0.02%)</title><rect x="27.7705%" y="901" width="0.0229%" height="15" fill="rgb(219,218,39)" fg:x="16985" fg:w="14"/><text x="28.0205%" y="911.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (14 samples, 0.02%)</title><rect x="27.7705%" y="885" width="0.0229%" height="15" fill="rgb(219,4,42)" fg:x="16985" fg:w="14"/><text x="28.0205%" y="895.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (13 samples, 0.02%)</title><rect x="27.7721%" y="869" width="0.0213%" height="15" fill="rgb(249,119,36)" fg:x="16986" fg:w="13"/><text x="28.0221%" y="879.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (13 samples, 0.02%)</title><rect x="27.7721%" y="853" width="0.0213%" height="15" fill="rgb(209,23,33)" fg:x="16986" fg:w="13"/><text x="28.0221%" y="863.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (12 samples, 0.02%)</title><rect x="27.7738%" y="837" width="0.0196%" height="15" fill="rgb(211,10,0)" fg:x="16987" fg:w="12"/><text x="28.0238%" y="847.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (12 samples, 0.02%)</title><rect x="27.7738%" y="821" width="0.0196%" height="15" fill="rgb(208,99,37)" fg:x="16987" fg:w="12"/><text x="28.0238%" y="831.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (7 samples, 0.01%)</title><rect x="27.7820%" y="805" width="0.0114%" height="15" fill="rgb(213,132,31)" fg:x="16992" fg:w="7"/><text x="28.0320%" y="815.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="27.8196%" y="517" width="0.0229%" height="15" fill="rgb(243,129,40)" fg:x="17015" fg:w="14"/><text x="28.0696%" y="527.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="27.8196%" y="501" width="0.0229%" height="15" fill="rgb(210,66,33)" fg:x="17015" fg:w="14"/><text x="28.0696%" y="511.50"></text></g><g><title>sk-gen`&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="27.8212%" y="485" width="0.0213%" height="15" fill="rgb(209,189,4)" fg:x="17016" fg:w="13"/><text x="28.0712%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_core::rc_lazy_list::List&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="27.8310%" y="469" width="0.0114%" height="15" fill="rgb(214,107,37)" fg:x="17022" fg:w="7"/><text x="28.0810%" y="479.50"></text></g><g><title>sk-gen`once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (7 samples, 0.01%)</title><rect x="27.8310%" y="453" width="0.0114%" height="15" fill="rgb(245,88,54)" fg:x="17022" fg:w="7"/><text x="28.0810%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="27.8457%" y="421" width="0.0147%" height="15" fill="rgb(205,146,20)" fg:x="17031" fg:w="9"/><text x="28.0957%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (7 samples, 0.01%)</title><rect x="27.8490%" y="405" width="0.0114%" height="15" fill="rgb(220,161,25)" fg:x="17033" fg:w="7"/><text x="28.0990%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (7 samples, 0.01%)</title><rect x="27.8490%" y="389" width="0.0114%" height="15" fill="rgb(215,152,15)" fg:x="17033" fg:w="7"/><text x="28.0990%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="27.8457%" y="437" width="0.0180%" height="15" fill="rgb(233,192,44)" fg:x="17031" fg:w="11"/><text x="28.0957%" y="447.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="27.8686%" y="389" width="0.0114%" height="15" fill="rgb(240,170,46)" fg:x="17045" fg:w="7"/><text x="28.1186%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (8 samples, 0.01%)</title><rect x="27.8899%" y="261" width="0.0131%" height="15" fill="rgb(207,104,33)" fg:x="17058" fg:w="8"/><text x="28.1399%" y="271.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="27.8915%" y="245" width="0.0114%" height="15" fill="rgb(219,21,39)" fg:x="17059" fg:w="7"/><text x="28.1415%" y="255.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (7 samples, 0.01%)</title><rect x="27.8915%" y="229" width="0.0114%" height="15" fill="rgb(214,133,29)" fg:x="17059" fg:w="7"/><text x="28.1415%" y="239.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="27.8866%" y="293" width="0.0180%" height="15" fill="rgb(226,93,6)" fg:x="17056" fg:w="11"/><text x="28.1366%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (10 samples, 0.02%)</title><rect x="27.8882%" y="277" width="0.0164%" height="15" fill="rgb(252,222,34)" fg:x="17057" fg:w="10"/><text x="28.1382%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (16 samples, 0.03%)</title><rect x="27.8850%" y="341" width="0.0262%" height="15" fill="rgb(252,92,48)" fg:x="17055" fg:w="16"/><text x="28.1350%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (16 samples, 0.03%)</title><rect x="27.8850%" y="325" width="0.0262%" height="15" fill="rgb(245,223,24)" fg:x="17055" fg:w="16"/><text x="28.1350%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (15 samples, 0.02%)</title><rect x="27.8866%" y="309" width="0.0245%" height="15" fill="rgb(205,176,3)" fg:x="17056" fg:w="15"/><text x="28.1366%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (42 samples, 0.07%)</title><rect x="27.8441%" y="453" width="0.0687%" height="15" fill="rgb(235,151,15)" fg:x="17030" fg:w="42"/><text x="28.0941%" y="463.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (30 samples, 0.05%)</title><rect x="27.8637%" y="437" width="0.0491%" height="15" fill="rgb(237,209,11)" fg:x="17042" fg:w="30"/><text x="28.1137%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (28 samples, 0.05%)</title><rect x="27.8670%" y="421" width="0.0458%" height="15" fill="rgb(243,227,24)" fg:x="17044" fg:w="28"/><text x="28.1170%" y="431.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (28 samples, 0.05%)</title><rect x="27.8670%" y="405" width="0.0458%" height="15" fill="rgb(239,193,16)" fg:x="17044" fg:w="28"/><text x="28.1170%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (19 samples, 0.03%)</title><rect x="27.8817%" y="389" width="0.0311%" height="15" fill="rgb(231,27,9)" fg:x="17053" fg:w="19"/><text x="28.1317%" y="399.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (17 samples, 0.03%)</title><rect x="27.8850%" y="373" width="0.0278%" height="15" fill="rgb(219,169,10)" fg:x="17055" fg:w="17"/><text x="28.1350%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (17 samples, 0.03%)</title><rect x="27.8850%" y="357" width="0.0278%" height="15" fill="rgb(244,229,43)" fg:x="17055" fg:w="17"/><text x="28.1350%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (48 samples, 0.08%)</title><rect x="27.8441%" y="469" width="0.0785%" height="15" fill="rgb(254,38,20)" fg:x="17030" fg:w="48"/><text x="28.0941%" y="479.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.13%)</title><rect x="27.8196%" y="533" width="0.1275%" height="15" fill="rgb(250,47,30)" fg:x="17015" fg:w="78"/><text x="28.0696%" y="543.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (64 samples, 0.10%)</title><rect x="27.8425%" y="517" width="0.1046%" height="15" fill="rgb(224,124,36)" fg:x="17029" fg:w="64"/><text x="28.0925%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (63 samples, 0.10%)</title><rect x="27.8441%" y="501" width="0.1030%" height="15" fill="rgb(246,68,51)" fg:x="17030" fg:w="63"/><text x="28.0941%" y="511.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (63 samples, 0.10%)</title><rect x="27.8441%" y="485" width="0.1030%" height="15" fill="rgb(253,43,49)" fg:x="17030" fg:w="63"/><text x="28.0941%" y="495.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (15 samples, 0.02%)</title><rect x="27.9226%" y="469" width="0.0245%" height="15" fill="rgb(219,54,36)" fg:x="17078" fg:w="15"/><text x="28.1726%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (14 samples, 0.02%)</title><rect x="27.9242%" y="453" width="0.0229%" height="15" fill="rgb(227,133,34)" fg:x="17079" fg:w="14"/><text x="28.1742%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (14 samples, 0.02%)</title><rect x="27.9242%" y="437" width="0.0229%" height="15" fill="rgb(247,227,15)" fg:x="17079" fg:w="14"/><text x="28.1742%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (9 samples, 0.01%)</title><rect x="27.9324%" y="421" width="0.0147%" height="15" fill="rgb(229,96,14)" fg:x="17084" fg:w="9"/><text x="28.1824%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (7 samples, 0.01%)</title><rect x="27.9356%" y="405" width="0.0114%" height="15" fill="rgb(220,79,17)" fg:x="17086" fg:w="7"/><text x="28.1856%" y="415.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="27.9356%" y="389" width="0.0114%" height="15" fill="rgb(205,131,53)" fg:x="17086" fg:w="7"/><text x="28.1856%" y="399.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (10 samples, 0.02%)</title><rect x="27.9618%" y="341" width="0.0164%" height="15" fill="rgb(209,50,29)" fg:x="17102" fg:w="10"/><text x="28.2118%" y="351.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (9 samples, 0.01%)</title><rect x="27.9634%" y="325" width="0.0147%" height="15" fill="rgb(245,86,46)" fg:x="17103" fg:w="9"/><text x="28.2134%" y="335.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="27.9634%" y="309" width="0.0147%" height="15" fill="rgb(235,66,46)" fg:x="17103" fg:w="9"/><text x="28.2134%" y="319.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (9 samples, 0.01%)</title><rect x="27.9634%" y="293" width="0.0147%" height="15" fill="rgb(232,148,31)" fg:x="17103" fg:w="9"/><text x="28.2134%" y="303.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="27.9634%" y="277" width="0.0147%" height="15" fill="rgb(217,149,8)" fg:x="17103" fg:w="9"/><text x="28.2134%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::from_map (9 samples, 0.01%)</title><rect x="27.9634%" y="261" width="0.0147%" height="15" fill="rgb(209,183,11)" fg:x="17103" fg:w="9"/><text x="28.2134%" y="271.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="27.9634%" y="245" width="0.0147%" height="15" fill="rgb(208,55,20)" fg:x="17103" fg:w="9"/><text x="28.2134%" y="255.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;regex_lite::pool::Pool&lt;regex_lite::pikevm::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_lite::pikevm::Cache+core::marker::Send+core::panic::unwind_safe::UnwindSafe+core::marker::Sync+core::panic::unwind_safe::RefUnwindSafe&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="27.9782%" y="341" width="0.0196%" height="15" fill="rgb(218,39,14)" fg:x="17112" fg:w="12"/><text x="28.2282%" y="351.50"></text></g><g><title>sk-gen`regex_lite::hir::Hir::parse (13 samples, 0.02%)</title><rect x="28.0158%" y="309" width="0.0213%" height="15" fill="rgb(216,169,33)" fg:x="17135" fg:w="13"/><text x="28.2658%" y="319.50"></text></g><g><title>sk-gen`regex_lite::hir::parse::Parser::parse (13 samples, 0.02%)</title><rect x="28.0158%" y="293" width="0.0213%" height="15" fill="rgb(233,80,24)" fg:x="17135" fg:w="13"/><text x="28.2658%" y="303.50"></text></g><g><title>sk-gen`regex_lite::hir::parse::Parser::parse_inner (11 samples, 0.02%)</title><rect x="28.0190%" y="277" width="0.0180%" height="15" fill="rgb(213,179,31)" fg:x="17137" fg:w="11"/><text x="28.2690%" y="287.50"></text></g><g><title>sk-gen`regex_lite::hir::parse::Parser::parse_inner (10 samples, 0.02%)</title><rect x="28.0207%" y="261" width="0.0164%" height="15" fill="rgb(209,19,5)" fg:x="17138" fg:w="10"/><text x="28.2707%" y="271.50"></text></g><g><title>sk-gen`jaq_std::regex::Flags::regex (36 samples, 0.06%)</title><rect x="28.0010%" y="341" width="0.0589%" height="15" fill="rgb(219,18,35)" fg:x="17126" fg:w="36"/><text x="28.2510%" y="351.50"></text></g><g><title>sk-gen`regex_lite::string::RegexBuilder::build (35 samples, 0.06%)</title><rect x="28.0027%" y="325" width="0.0572%" height="15" fill="rgb(209,169,16)" fg:x="17127" fg:w="35"/><text x="28.2527%" y="335.50"></text></g><g><title>sk-gen`regex_lite::nfa::NFA::new (14 samples, 0.02%)</title><rect x="28.0370%" y="309" width="0.0229%" height="15" fill="rgb(245,90,51)" fg:x="17148" fg:w="14"/><text x="28.2870%" y="319.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c_capture (14 samples, 0.02%)</title><rect x="28.0370%" y="293" width="0.0229%" height="15" fill="rgb(220,99,45)" fg:x="17148" fg:w="14"/><text x="28.2870%" y="303.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c (11 samples, 0.02%)</title><rect x="28.0419%" y="277" width="0.0180%" height="15" fill="rgb(249,89,25)" fg:x="17151" fg:w="11"/><text x="28.2919%" y="287.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c_capture (11 samples, 0.02%)</title><rect x="28.0419%" y="261" width="0.0180%" height="15" fill="rgb(239,193,0)" fg:x="17151" fg:w="11"/><text x="28.2919%" y="271.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c (7 samples, 0.01%)</title><rect x="28.0485%" y="245" width="0.0114%" height="15" fill="rgb(231,126,1)" fg:x="17155" fg:w="7"/><text x="28.2985%" y="255.50"></text></g><g><title>sk-gen`jaq_std::re (76 samples, 0.12%)</title><rect x="27.9569%" y="357" width="0.1243%" height="15" fill="rgb(243,166,3)" fg:x="17099" fg:w="76"/><text x="28.2069%" y="367.50"></text></g><g><title>sk-gen`jaq_std::regex::regex (13 samples, 0.02%)</title><rect x="28.0599%" y="341" width="0.0213%" height="15" fill="rgb(223,22,34)" fg:x="17162" fg:w="13"/><text x="28.3099%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (80 samples, 0.13%)</title><rect x="27.9520%" y="389" width="0.1308%" height="15" fill="rgb(251,52,51)" fg:x="17096" fg:w="80"/><text x="28.2020%" y="399.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (79 samples, 0.13%)</title><rect x="27.9536%" y="373" width="0.1292%" height="15" fill="rgb(221,165,28)" fg:x="17097" fg:w="79"/><text x="28.2036%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="28.0828%" y="373" width="0.0147%" height="15" fill="rgb(218,121,47)" fg:x="17176" fg:w="9"/><text x="28.3328%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="28.0828%" y="357" width="0.0147%" height="15" fill="rgb(209,120,9)" fg:x="17176" fg:w="9"/><text x="28.3328%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="28.0828%" y="341" width="0.0147%" height="15" fill="rgb(236,68,12)" fg:x="17176" fg:w="9"/><text x="28.3328%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="28.0844%" y="325" width="0.0131%" height="15" fill="rgb(225,194,26)" fg:x="17177" fg:w="8"/><text x="28.3344%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (94 samples, 0.15%)</title><rect x="27.9520%" y="405" width="0.1537%" height="15" fill="rgb(231,84,39)" fg:x="17096" fg:w="94"/><text x="28.2020%" y="415.50"></text></g><g><title>sk-gen`jaq_core::filter::bind_vars (14 samples, 0.02%)</title><rect x="28.0828%" y="389" width="0.0229%" height="15" fill="rgb(210,11,45)" fg:x="17176" fg:w="14"/><text x="28.3328%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (95 samples, 0.16%)</title><rect x="27.9520%" y="421" width="0.1553%" height="15" fill="rgb(224,54,52)" fg:x="17096" fg:w="95"/><text x="28.2020%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (10 samples, 0.02%)</title><rect x="28.1613%" y="85" width="0.0164%" height="15" fill="rgb(238,102,14)" fg:x="17224" fg:w="10"/><text x="28.4113%" y="95.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (8 samples, 0.01%)</title><rect x="28.1645%" y="69" width="0.0131%" height="15" fill="rgb(243,160,52)" fg:x="17226" fg:w="8"/><text x="28.4145%" y="79.50"></text></g><g><title>sk-gen`jaq_core::path::run (7 samples, 0.01%)</title><rect x="28.1662%" y="53" width="0.0114%" height="15" fill="rgb(216,114,19)" fg:x="17227" fg:w="7"/><text x="28.4162%" y="63.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (26 samples, 0.04%)</title><rect x="28.1515%" y="149" width="0.0425%" height="15" fill="rgb(244,166,37)" fg:x="17218" fg:w="26"/><text x="28.4015%" y="159.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (26 samples, 0.04%)</title><rect x="28.1515%" y="133" width="0.0425%" height="15" fill="rgb(246,29,44)" fg:x="17218" fg:w="26"/><text x="28.4015%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (21 samples, 0.03%)</title><rect x="28.1596%" y="117" width="0.0343%" height="15" fill="rgb(215,56,53)" fg:x="17223" fg:w="21"/><text x="28.4096%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (20 samples, 0.03%)</title><rect x="28.1613%" y="101" width="0.0327%" height="15" fill="rgb(217,60,2)" fg:x="17224" fg:w="20"/><text x="28.4113%" y="111.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (10 samples, 0.02%)</title><rect x="28.1776%" y="85" width="0.0164%" height="15" fill="rgb(207,26,24)" fg:x="17234" fg:w="10"/><text x="28.4276%" y="95.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="28.1809%" y="69" width="0.0131%" height="15" fill="rgb(252,210,15)" fg:x="17236" fg:w="8"/><text x="28.4309%" y="79.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (40 samples, 0.07%)</title><rect x="28.1515%" y="197" width="0.0654%" height="15" fill="rgb(253,209,26)" fg:x="17218" fg:w="40"/><text x="28.4015%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (40 samples, 0.07%)</title><rect x="28.1515%" y="181" width="0.0654%" height="15" fill="rgb(238,170,14)" fg:x="17218" fg:w="40"/><text x="28.4015%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (40 samples, 0.07%)</title><rect x="28.1515%" y="165" width="0.0654%" height="15" fill="rgb(216,178,15)" fg:x="17218" fg:w="40"/><text x="28.4015%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (14 samples, 0.02%)</title><rect x="28.1940%" y="149" width="0.0229%" height="15" fill="rgb(250,197,2)" fg:x="17244" fg:w="14"/><text x="28.4440%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (11 samples, 0.02%)</title><rect x="28.1989%" y="133" width="0.0180%" height="15" fill="rgb(212,70,42)" fg:x="17247" fg:w="11"/><text x="28.4489%" y="143.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="28.2022%" y="117" width="0.0147%" height="15" fill="rgb(227,213,9)" fg:x="17249" fg:w="9"/><text x="28.4522%" y="127.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="28.2201%" y="149" width="0.0147%" height="15" fill="rgb(245,99,25)" fg:x="17260" fg:w="9"/><text x="28.4701%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (8 samples, 0.01%)</title><rect x="28.2218%" y="133" width="0.0131%" height="15" fill="rgb(250,82,29)" fg:x="17261" fg:w="8"/><text x="28.4718%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (10 samples, 0.02%)</title><rect x="28.2430%" y="85" width="0.0164%" height="15" fill="rgb(241,226,54)" fg:x="17274" fg:w="10"/><text x="28.4930%" y="95.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (10 samples, 0.02%)</title><rect x="28.2430%" y="69" width="0.0164%" height="15" fill="rgb(221,99,41)" fg:x="17274" fg:w="10"/><text x="28.4930%" y="79.50"></text></g><g><title>sk-gen`jaq_core::path::run (9 samples, 0.01%)</title><rect x="28.2447%" y="53" width="0.0147%" height="15" fill="rgb(213,90,21)" fg:x="17275" fg:w="9"/><text x="28.4947%" y="63.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (16 samples, 0.03%)</title><rect x="28.2381%" y="133" width="0.0262%" height="15" fill="rgb(205,208,24)" fg:x="17271" fg:w="16"/><text x="28.4881%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (13 samples, 0.02%)</title><rect x="28.2430%" y="117" width="0.0213%" height="15" fill="rgb(246,31,12)" fg:x="17274" fg:w="13"/><text x="28.4930%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (13 samples, 0.02%)</title><rect x="28.2430%" y="101" width="0.0213%" height="15" fill="rgb(213,154,6)" fg:x="17274" fg:w="13"/><text x="28.4930%" y="111.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (95 samples, 0.16%)</title><rect x="28.1139%" y="341" width="0.1553%" height="15" fill="rgb(222,163,29)" fg:x="17195" fg:w="95"/><text x="28.3639%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (95 samples, 0.16%)</title><rect x="28.1139%" y="325" width="0.1553%" height="15" fill="rgb(227,201,8)" fg:x="17195" fg:w="95"/><text x="28.3639%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (94 samples, 0.15%)</title><rect x="28.1155%" y="309" width="0.1537%" height="15" fill="rgb(233,9,32)" fg:x="17196" fg:w="94"/><text x="28.3655%" y="319.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (89 samples, 0.15%)</title><rect x="28.1237%" y="293" width="0.1455%" height="15" fill="rgb(217,54,24)" fg:x="17201" fg:w="89"/><text x="28.3737%" y="303.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (89 samples, 0.15%)</title><rect x="28.1237%" y="277" width="0.1455%" height="15" fill="rgb(235,192,0)" fg:x="17201" fg:w="89"/><text x="28.3737%" y="287.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.14%)</title><rect x="28.1253%" y="261" width="0.1439%" height="15" fill="rgb(235,45,9)" fg:x="17202" fg:w="88"/><text x="28.3753%" y="271.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (74 samples, 0.12%)</title><rect x="28.1482%" y="245" width="0.1210%" height="15" fill="rgb(246,42,40)" fg:x="17216" fg:w="74"/><text x="28.3982%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (74 samples, 0.12%)</title><rect x="28.1482%" y="229" width="0.1210%" height="15" fill="rgb(248,111,24)" fg:x="17216" fg:w="74"/><text x="28.3982%" y="239.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (72 samples, 0.12%)</title><rect x="28.1515%" y="213" width="0.1177%" height="15" fill="rgb(249,65,22)" fg:x="17218" fg:w="72"/><text x="28.4015%" y="223.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (32 samples, 0.05%)</title><rect x="28.2169%" y="197" width="0.0523%" height="15" fill="rgb(238,111,51)" fg:x="17258" fg:w="32"/><text x="28.4669%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (31 samples, 0.05%)</title><rect x="28.2185%" y="181" width="0.0507%" height="15" fill="rgb(250,118,22)" fg:x="17259" fg:w="31"/><text x="28.4685%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (31 samples, 0.05%)</title><rect x="28.2185%" y="165" width="0.0507%" height="15" fill="rgb(234,84,26)" fg:x="17259" fg:w="31"/><text x="28.4685%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (21 samples, 0.03%)</title><rect x="28.2349%" y="149" width="0.0343%" height="15" fill="rgb(243,172,12)" fg:x="17269" fg:w="21"/><text x="28.4849%" y="159.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (8 samples, 0.01%)</title><rect x="28.2790%" y="165" width="0.0131%" height="15" fill="rgb(236,150,49)" fg:x="17296" fg:w="8"/><text x="28.5290%" y="175.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (19 samples, 0.03%)</title><rect x="28.2774%" y="213" width="0.0311%" height="15" fill="rgb(225,197,26)" fg:x="17295" fg:w="19"/><text x="28.5274%" y="223.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (19 samples, 0.03%)</title><rect x="28.2774%" y="197" width="0.0311%" height="15" fill="rgb(214,17,42)" fg:x="17295" fg:w="19"/><text x="28.5274%" y="207.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (19 samples, 0.03%)</title><rect x="28.2774%" y="181" width="0.0311%" height="15" fill="rgb(224,165,40)" fg:x="17295" fg:w="19"/><text x="28.5274%" y="191.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (10 samples, 0.02%)</title><rect x="28.2921%" y="165" width="0.0164%" height="15" fill="rgb(246,100,4)" fg:x="17304" fg:w="10"/><text x="28.5421%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (9 samples, 0.01%)</title><rect x="28.2937%" y="149" width="0.0147%" height="15" fill="rgb(222,103,0)" fg:x="17305" fg:w="9"/><text x="28.5437%" y="159.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (25 samples, 0.04%)</title><rect x="28.2725%" y="293" width="0.0409%" height="15" fill="rgb(227,189,26)" fg:x="17292" fg:w="25"/><text x="28.5225%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (25 samples, 0.04%)</title><rect x="28.2725%" y="277" width="0.0409%" height="15" fill="rgb(214,202,17)" fg:x="17292" fg:w="25"/><text x="28.5225%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (25 samples, 0.04%)</title><rect x="28.2725%" y="261" width="0.0409%" height="15" fill="rgb(229,111,3)" fg:x="17292" fg:w="25"/><text x="28.5225%" y="271.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (25 samples, 0.04%)</title><rect x="28.2725%" y="245" width="0.0409%" height="15" fill="rgb(229,172,15)" fg:x="17292" fg:w="25"/><text x="28.5225%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (24 samples, 0.04%)</title><rect x="28.2741%" y="229" width="0.0392%" height="15" fill="rgb(230,224,35)" fg:x="17293" fg:w="24"/><text x="28.5241%" y="239.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (125 samples, 0.20%)</title><rect x="28.1106%" y="373" width="0.2044%" height="15" fill="rgb(251,141,6)" fg:x="17193" fg:w="125"/><text x="28.3606%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (124 samples, 0.20%)</title><rect x="28.1122%" y="357" width="0.2027%" height="15" fill="rgb(225,208,6)" fg:x="17194" fg:w="124"/><text x="28.3622%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (28 samples, 0.05%)</title><rect x="28.2692%" y="341" width="0.0458%" height="15" fill="rgb(246,181,16)" fg:x="17290" fg:w="28"/><text x="28.5192%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (27 samples, 0.04%)</title><rect x="28.2708%" y="325" width="0.0441%" height="15" fill="rgb(227,129,36)" fg:x="17291" fg:w="27"/><text x="28.5208%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (27 samples, 0.04%)</title><rect x="28.2708%" y="309" width="0.0441%" height="15" fill="rgb(248,117,24)" fg:x="17291" fg:w="27"/><text x="28.5208%" y="319.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (225 samples, 0.37%)</title><rect x="27.9504%" y="485" width="0.3679%" height="15" fill="rgb(214,185,35)" fg:x="17095" fg:w="225"/><text x="28.2004%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (225 samples, 0.37%)</title><rect x="27.9504%" y="469" width="0.3679%" height="15" fill="rgb(236,150,34)" fg:x="17095" fg:w="225"/><text x="28.2004%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (225 samples, 0.37%)</title><rect x="27.9504%" y="453" width="0.3679%" height="15" fill="rgb(243,228,27)" fg:x="17095" fg:w="225"/><text x="28.2004%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (225 samples, 0.37%)</title><rect x="27.9504%" y="437" width="0.3679%" height="15" fill="rgb(245,77,44)" fg:x="17095" fg:w="225"/><text x="28.2004%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (129 samples, 0.21%)</title><rect x="28.1073%" y="421" width="0.2109%" height="15" fill="rgb(235,214,42)" fg:x="17191" fg:w="129"/><text x="28.3573%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (127 samples, 0.21%)</title><rect x="28.1106%" y="405" width="0.2076%" height="15" fill="rgb(221,74,3)" fg:x="17193" fg:w="127"/><text x="28.3606%" y="415.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (127 samples, 0.21%)</title><rect x="28.1106%" y="389" width="0.2076%" height="15" fill="rgb(206,121,29)" fg:x="17193" fg:w="127"/><text x="28.3606%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run::_{{closure}} (228 samples, 0.37%)</title><rect x="27.9471%" y="533" width="0.3728%" height="15" fill="rgb(249,131,53)" fg:x="17093" fg:w="228"/><text x="28.1971%" y="543.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (227 samples, 0.37%)</title><rect x="27.9487%" y="517" width="0.3711%" height="15" fill="rgb(236,170,29)" fg:x="17094" fg:w="227"/><text x="28.1987%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (227 samples, 0.37%)</title><rect x="27.9487%" y="501" width="0.3711%" height="15" fill="rgb(247,96,15)" fg:x="17094" fg:w="227"/><text x="28.1987%" y="511.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update::_{{closure}} (347 samples, 0.57%)</title><rect x="27.7607%" y="981" width="0.5673%" height="15" fill="rgb(211,210,7)" fg:x="16979" fg:w="347"/><text x="28.0107%" y="991.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;V&gt;::update (327 samples, 0.53%)</title><rect x="27.7934%" y="965" width="0.5346%" height="15" fill="rgb(240,88,50)" fg:x="16999" fg:w="327"/><text x="28.0434%" y="975.50"></text></g><g><title>sk-gen`jaq_core::path::update (327 samples, 0.53%)</title><rect x="27.7934%" y="949" width="0.5346%" height="15" fill="rgb(209,229,26)" fg:x="16999" fg:w="327"/><text x="28.0434%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (327 samples, 0.53%)</title><rect x="27.7934%" y="933" width="0.5346%" height="15" fill="rgb(210,68,23)" fg:x="16999" fg:w="327"/><text x="28.0434%" y="943.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (327 samples, 0.53%)</title><rect x="27.7934%" y="917" width="0.5346%" height="15" fill="rgb(229,180,13)" fg:x="16999" fg:w="327"/><text x="28.0434%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::update (327 samples, 0.53%)</title><rect x="27.7934%" y="901" width="0.5346%" height="15" fill="rgb(236,53,44)" fg:x="16999" fg:w="327"/><text x="28.0434%" y="911.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (327 samples, 0.53%)</title><rect x="27.7934%" y="885" width="0.5346%" height="15" fill="rgb(244,214,29)" fg:x="16999" fg:w="327"/><text x="28.0434%" y="895.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (326 samples, 0.53%)</title><rect x="27.7950%" y="869" width="0.5330%" height="15" fill="rgb(220,75,29)" fg:x="17000" fg:w="326"/><text x="28.0450%" y="879.50"></text></g><g><title>sk-gen`jaq_core::path::update (325 samples, 0.53%)</title><rect x="27.7967%" y="853" width="0.5314%" height="15" fill="rgb(214,183,37)" fg:x="17001" fg:w="325"/><text x="28.0467%" y="863.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (325 samples, 0.53%)</title><rect x="27.7967%" y="837" width="0.5314%" height="15" fill="rgb(239,117,29)" fg:x="17001" fg:w="325"/><text x="28.0467%" y="847.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (322 samples, 0.53%)</title><rect x="27.8016%" y="821" width="0.5265%" height="15" fill="rgb(237,171,35)" fg:x="17004" fg:w="322"/><text x="28.0516%" y="831.50"></text></g><g><title>sk-gen`jaq_core::path::update (321 samples, 0.52%)</title><rect x="27.8032%" y="805" width="0.5248%" height="15" fill="rgb(229,178,53)" fg:x="17005" fg:w="321"/><text x="28.0532%" y="815.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (319 samples, 0.52%)</title><rect x="27.8065%" y="789" width="0.5216%" height="15" fill="rgb(210,102,19)" fg:x="17007" fg:w="319"/><text x="28.0565%" y="799.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (317 samples, 0.52%)</title><rect x="27.8098%" y="773" width="0.5183%" height="15" fill="rgb(235,127,22)" fg:x="17009" fg:w="317"/><text x="28.0598%" y="783.50"></text></g><g><title>sk-gen`jaq_core::path::update (317 samples, 0.52%)</title><rect x="27.8098%" y="757" width="0.5183%" height="15" fill="rgb(244,31,31)" fg:x="17009" fg:w="317"/><text x="28.0598%" y="767.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (317 samples, 0.52%)</title><rect x="27.8098%" y="741" width="0.5183%" height="15" fill="rgb(231,43,21)" fg:x="17009" fg:w="317"/><text x="28.0598%" y="751.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (314 samples, 0.51%)</title><rect x="27.8147%" y="725" width="0.5134%" height="15" fill="rgb(217,131,35)" fg:x="17012" fg:w="314"/><text x="28.0647%" y="735.50"></text></g><g><title>sk-gen`jaq_core::path::update (314 samples, 0.51%)</title><rect x="27.8147%" y="709" width="0.5134%" height="15" fill="rgb(221,149,4)" fg:x="17012" fg:w="314"/><text x="28.0647%" y="719.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (314 samples, 0.51%)</title><rect x="27.8147%" y="693" width="0.5134%" height="15" fill="rgb(232,170,28)" fg:x="17012" fg:w="314"/><text x="28.0647%" y="703.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (314 samples, 0.51%)</title><rect x="27.8147%" y="677" width="0.5134%" height="15" fill="rgb(238,56,10)" fg:x="17012" fg:w="314"/><text x="28.0647%" y="687.50"></text></g><g><title>sk-gen`jaq_core::path::update (313 samples, 0.51%)</title><rect x="27.8163%" y="661" width="0.5118%" height="15" fill="rgb(235,196,14)" fg:x="17013" fg:w="313"/><text x="28.0663%" y="671.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (313 samples, 0.51%)</title><rect x="27.8163%" y="645" width="0.5118%" height="15" fill="rgb(216,45,48)" fg:x="17013" fg:w="313"/><text x="28.0663%" y="655.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (313 samples, 0.51%)</title><rect x="27.8163%" y="629" width="0.5118%" height="15" fill="rgb(238,213,17)" fg:x="17013" fg:w="313"/><text x="28.0663%" y="639.50"></text></g><g><title>sk-gen`jaq_core::path::update (313 samples, 0.51%)</title><rect x="27.8163%" y="613" width="0.5118%" height="15" fill="rgb(212,13,2)" fg:x="17013" fg:w="313"/><text x="28.0663%" y="623.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (313 samples, 0.51%)</title><rect x="27.8163%" y="597" width="0.5118%" height="15" fill="rgb(240,114,20)" fg:x="17013" fg:w="313"/><text x="28.0663%" y="607.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (312 samples, 0.51%)</title><rect x="27.8179%" y="581" width="0.5101%" height="15" fill="rgb(228,41,40)" fg:x="17014" fg:w="312"/><text x="28.0679%" y="591.50"></text></g><g><title>sk-gen`jaq_core::path::update (312 samples, 0.51%)</title><rect x="27.8179%" y="565" width="0.5101%" height="15" fill="rgb(244,132,35)" fg:x="17014" fg:w="312"/><text x="28.0679%" y="575.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (312 samples, 0.51%)</title><rect x="27.8179%" y="549" width="0.5101%" height="15" fill="rgb(253,189,4)" fg:x="17014" fg:w="312"/><text x="28.0679%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (363 samples, 0.59%)</title><rect x="27.7378%" y="1013" width="0.5935%" height="15" fill="rgb(224,37,19)" fg:x="16965" fg:w="363"/><text x="27.9878%" y="1023.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (349 samples, 0.57%)</title><rect x="27.7607%" y="997" width="0.5706%" height="15" fill="rgb(235,223,18)" fg:x="16979" fg:w="349"/><text x="28.0107%" y="1007.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (10 samples, 0.02%)</title><rect x="28.3346%" y="965" width="0.0164%" height="15" fill="rgb(235,163,25)" fg:x="17330" fg:w="10"/><text x="28.5846%" y="975.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (7 samples, 0.01%)</title><rect x="28.3395%" y="949" width="0.0114%" height="15" fill="rgb(217,145,28)" fg:x="17333" fg:w="7"/><text x="28.5895%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (439 samples, 0.72%)</title><rect x="27.6397%" y="1077" width="0.7178%" height="15" fill="rgb(223,223,32)" fg:x="16905" fg:w="439"/><text x="27.8897%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (399 samples, 0.65%)</title><rect x="27.7051%" y="1061" width="0.6524%" height="15" fill="rgb(227,189,39)" fg:x="16945" fg:w="399"/><text x="27.9551%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (399 samples, 0.65%)</title><rect x="27.7051%" y="1045" width="0.6524%" height="15" fill="rgb(248,10,22)" fg:x="16945" fg:w="399"/><text x="27.9551%" y="1055.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (399 samples, 0.65%)</title><rect x="27.7051%" y="1029" width="0.6524%" height="15" fill="rgb(248,46,39)" fg:x="16945" fg:w="399"/><text x="27.9551%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (16 samples, 0.03%)</title><rect x="28.3313%" y="1013" width="0.0262%" height="15" fill="rgb(248,113,48)" fg:x="17328" fg:w="16"/><text x="28.5813%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (16 samples, 0.03%)</title><rect x="28.3313%" y="997" width="0.0262%" height="15" fill="rgb(245,16,25)" fg:x="17328" fg:w="16"/><text x="28.5813%" y="1007.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (16 samples, 0.03%)</title><rect x="28.3313%" y="981" width="0.0262%" height="15" fill="rgb(249,152,16)" fg:x="17328" fg:w="16"/><text x="28.5813%" y="991.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="28.3624%" y="1029" width="0.0147%" height="15" fill="rgb(250,16,1)" fg:x="17347" fg:w="9"/><text x="28.6124%" y="1039.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="28.3624%" y="1013" width="0.0147%" height="15" fill="rgb(249,138,3)" fg:x="17347" fg:w="9"/><text x="28.6124%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="28.3575%" y="1061" width="0.0327%" height="15" fill="rgb(227,71,41)" fg:x="17344" fg:w="20"/><text x="28.6075%" y="1071.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="28.3607%" y="1045" width="0.0294%" height="15" fill="rgb(209,184,23)" fg:x="17346" fg:w="18"/><text x="28.6107%" y="1055.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (21 samples, 0.03%)</title><rect x="28.3575%" y="1077" width="0.0343%" height="15" fill="rgb(223,215,31)" fg:x="17344" fg:w="21"/><text x="28.6075%" y="1087.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (464 samples, 0.76%)</title><rect x="27.6348%" y="1093" width="0.7586%" height="15" fill="rgb(210,146,28)" fg:x="16902" fg:w="464"/><text x="27.8848%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (14 samples, 0.02%)</title><rect x="28.4163%" y="965" width="0.0229%" height="15" fill="rgb(209,183,41)" fg:x="17380" fg:w="14"/><text x="28.6663%" y="975.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (13 samples, 0.02%)</title><rect x="28.4180%" y="949" width="0.0213%" height="15" fill="rgb(209,224,45)" fg:x="17381" fg:w="13"/><text x="28.6680%" y="959.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (13 samples, 0.02%)</title><rect x="28.4180%" y="933" width="0.0213%" height="15" fill="rgb(224,209,51)" fg:x="17381" fg:w="13"/><text x="28.6680%" y="943.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (12 samples, 0.02%)</title><rect x="28.4196%" y="917" width="0.0196%" height="15" fill="rgb(223,17,39)" fg:x="17382" fg:w="12"/><text x="28.6696%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (12 samples, 0.02%)</title><rect x="28.4196%" y="901" width="0.0196%" height="15" fill="rgb(234,204,37)" fg:x="17382" fg:w="12"/><text x="28.6696%" y="911.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (12 samples, 0.02%)</title><rect x="28.4196%" y="885" width="0.0196%" height="15" fill="rgb(236,120,5)" fg:x="17382" fg:w="12"/><text x="28.6696%" y="895.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (11 samples, 0.02%)</title><rect x="28.4212%" y="869" width="0.0180%" height="15" fill="rgb(248,97,27)" fg:x="17383" fg:w="11"/><text x="28.6712%" y="879.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (11 samples, 0.02%)</title><rect x="28.4212%" y="853" width="0.0180%" height="15" fill="rgb(240,66,17)" fg:x="17383" fg:w="11"/><text x="28.6712%" y="863.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (9 samples, 0.01%)</title><rect x="28.4245%" y="837" width="0.0147%" height="15" fill="rgb(210,79,3)" fg:x="17385" fg:w="9"/><text x="28.6745%" y="847.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (9 samples, 0.01%)</title><rect x="28.4245%" y="821" width="0.0147%" height="15" fill="rgb(214,176,27)" fg:x="17385" fg:w="9"/><text x="28.6745%" y="831.50"></text></g><g><title>sk-gen`&lt;jaq_core::rc_lazy_list::List&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="28.4752%" y="469" width="0.0114%" height="15" fill="rgb(235,185,3)" fg:x="17416" fg:w="7"/><text x="28.7252%" y="479.50"></text></g><g><title>sk-gen`&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="28.4703%" y="485" width="0.0180%" height="15" fill="rgb(227,24,12)" fg:x="17413" fg:w="11"/><text x="28.7203%" y="495.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="28.4687%" y="517" width="0.0213%" height="15" fill="rgb(252,169,48)" fg:x="17412" fg:w="13"/><text x="28.7187%" y="527.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="28.4687%" y="501" width="0.0213%" height="15" fill="rgb(212,65,1)" fg:x="17412" fg:w="13"/><text x="28.7187%" y="511.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (7 samples, 0.01%)</title><rect x="28.5014%" y="389" width="0.0114%" height="15" fill="rgb(242,39,24)" fg:x="17432" fg:w="7"/><text x="28.7514%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (13 samples, 0.02%)</title><rect x="28.4948%" y="437" width="0.0213%" height="15" fill="rgb(249,32,23)" fg:x="17428" fg:w="13"/><text x="28.7448%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (12 samples, 0.02%)</title><rect x="28.4965%" y="421" width="0.0196%" height="15" fill="rgb(251,195,23)" fg:x="17429" fg:w="12"/><text x="28.7465%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (12 samples, 0.02%)</title><rect x="28.4965%" y="405" width="0.0196%" height="15" fill="rgb(236,174,8)" fg:x="17429" fg:w="12"/><text x="28.7465%" y="415.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (15 samples, 0.02%)</title><rect x="28.4932%" y="453" width="0.0245%" height="15" fill="rgb(220,197,8)" fg:x="17427" fg:w="15"/><text x="28.7432%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="28.5324%" y="309" width="0.0114%" height="15" fill="rgb(240,108,37)" fg:x="17451" fg:w="7"/><text x="28.7824%" y="319.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (10 samples, 0.02%)</title><rect x="28.5308%" y="341" width="0.0164%" height="15" fill="rgb(232,176,24)" fg:x="17450" fg:w="10"/><text x="28.7808%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (10 samples, 0.02%)</title><rect x="28.5308%" y="325" width="0.0164%" height="15" fill="rgb(243,35,29)" fg:x="17450" fg:w="10"/><text x="28.7808%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="28.5308%" y="357" width="0.0180%" height="15" fill="rgb(210,37,18)" fg:x="17450" fg:w="11"/><text x="28.7808%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.06%)</title><rect x="28.4915%" y="469" width="0.0605%" height="15" fill="rgb(224,184,40)" fg:x="17426" fg:w="37"/><text x="28.7415%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (21 samples, 0.03%)</title><rect x="28.5177%" y="453" width="0.0343%" height="15" fill="rgb(236,39,29)" fg:x="17442" fg:w="21"/><text x="28.7677%" y="463.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (18 samples, 0.03%)</title><rect x="28.5226%" y="437" width="0.0294%" height="15" fill="rgb(232,48,39)" fg:x="17445" fg:w="18"/><text x="28.7726%" y="447.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="28.5226%" y="421" width="0.0294%" height="15" fill="rgb(236,34,42)" fg:x="17445" fg:w="18"/><text x="28.7726%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (15 samples, 0.02%)</title><rect x="28.5275%" y="405" width="0.0245%" height="15" fill="rgb(243,106,37)" fg:x="17448" fg:w="15"/><text x="28.7775%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (13 samples, 0.02%)</title><rect x="28.5308%" y="389" width="0.0213%" height="15" fill="rgb(218,96,6)" fg:x="17450" fg:w="13"/><text x="28.7808%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (13 samples, 0.02%)</title><rect x="28.5308%" y="373" width="0.0213%" height="15" fill="rgb(235,130,12)" fg:x="17450" fg:w="13"/><text x="28.7808%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="28.5700%" y="309" width="0.0147%" height="15" fill="rgb(231,95,0)" fg:x="17474" fg:w="9"/><text x="28.8200%" y="319.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.13%)</title><rect x="28.4687%" y="533" width="0.1275%" height="15" fill="rgb(228,12,23)" fg:x="17412" fg:w="78"/><text x="28.7187%" y="543.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (65 samples, 0.11%)</title><rect x="28.4899%" y="517" width="0.1063%" height="15" fill="rgb(216,12,1)" fg:x="17425" fg:w="65"/><text x="28.7399%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (65 samples, 0.11%)</title><rect x="28.4899%" y="501" width="0.1063%" height="15" fill="rgb(219,59,3)" fg:x="17425" fg:w="65"/><text x="28.7399%" y="511.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (64 samples, 0.10%)</title><rect x="28.4915%" y="485" width="0.1046%" height="15" fill="rgb(215,208,46)" fg:x="17426" fg:w="64"/><text x="28.7415%" y="495.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (27 samples, 0.04%)</title><rect x="28.5520%" y="469" width="0.0441%" height="15" fill="rgb(254,224,29)" fg:x="17463" fg:w="27"/><text x="28.8020%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (26 samples, 0.04%)</title><rect x="28.5537%" y="453" width="0.0425%" height="15" fill="rgb(232,14,29)" fg:x="17464" fg:w="26"/><text x="28.8037%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (26 samples, 0.04%)</title><rect x="28.5537%" y="437" width="0.0425%" height="15" fill="rgb(208,45,52)" fg:x="17464" fg:w="26"/><text x="28.8037%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (23 samples, 0.04%)</title><rect x="28.5586%" y="421" width="0.0376%" height="15" fill="rgb(234,191,28)" fg:x="17467" fg:w="23"/><text x="28.8086%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (21 samples, 0.03%)</title><rect x="28.5619%" y="405" width="0.0343%" height="15" fill="rgb(244,67,43)" fg:x="17469" fg:w="21"/><text x="28.8119%" y="415.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (21 samples, 0.03%)</title><rect x="28.5619%" y="389" width="0.0343%" height="15" fill="rgb(236,189,24)" fg:x="17469" fg:w="21"/><text x="28.8119%" y="399.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (21 samples, 0.03%)</title><rect x="28.5619%" y="373" width="0.0343%" height="15" fill="rgb(239,214,33)" fg:x="17469" fg:w="21"/><text x="28.8119%" y="383.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (16 samples, 0.03%)</title><rect x="28.5700%" y="357" width="0.0262%" height="15" fill="rgb(226,176,41)" fg:x="17474" fg:w="16"/><text x="28.8200%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (16 samples, 0.03%)</title><rect x="28.5700%" y="341" width="0.0262%" height="15" fill="rgb(248,47,8)" fg:x="17474" fg:w="16"/><text x="28.8200%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (16 samples, 0.03%)</title><rect x="28.5700%" y="325" width="0.0262%" height="15" fill="rgb(218,81,44)" fg:x="17474" fg:w="16"/><text x="28.8200%" y="335.50"></text></g><g><title>sk-gen`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (7 samples, 0.01%)</title><rect x="28.6174%" y="213" width="0.0114%" height="15" fill="rgb(213,98,6)" fg:x="17503" fg:w="7"/><text x="28.8674%" y="223.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.02%)</title><rect x="28.6109%" y="245" width="0.0196%" height="15" fill="rgb(222,85,22)" fg:x="17499" fg:w="12"/><text x="28.8609%" y="255.50"></text></g><g><title>sk-gen`core::iter::adapters::map::map_try_fold::_{{closure}} (10 samples, 0.02%)</title><rect x="28.6142%" y="229" width="0.0164%" height="15" fill="rgb(239,46,39)" fg:x="17501" fg:w="10"/><text x="28.8642%" y="239.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (18 samples, 0.03%)</title><rect x="28.6027%" y="341" width="0.0294%" height="15" fill="rgb(237,12,29)" fg:x="17494" fg:w="18"/><text x="28.8527%" y="351.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (18 samples, 0.03%)</title><rect x="28.6027%" y="325" width="0.0294%" height="15" fill="rgb(214,77,8)" fg:x="17494" fg:w="18"/><text x="28.8527%" y="335.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.03%)</title><rect x="28.6027%" y="309" width="0.0294%" height="15" fill="rgb(217,168,37)" fg:x="17494" fg:w="18"/><text x="28.8527%" y="319.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (17 samples, 0.03%)</title><rect x="28.6044%" y="293" width="0.0278%" height="15" fill="rgb(221,217,23)" fg:x="17495" fg:w="17"/><text x="28.8544%" y="303.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.03%)</title><rect x="28.6044%" y="277" width="0.0278%" height="15" fill="rgb(243,229,36)" fg:x="17495" fg:w="17"/><text x="28.8544%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::from_map (15 samples, 0.02%)</title><rect x="28.6076%" y="261" width="0.0245%" height="15" fill="rgb(251,163,40)" fg:x="17497" fg:w="15"/><text x="28.8576%" y="271.50"></text></g><g><title>sk-gen`&lt;regex_lite::hir::Hir as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="28.6420%" y="309" width="0.0147%" height="15" fill="rgb(237,222,12)" fg:x="17518" fg:w="9"/><text x="28.8920%" y="319.50"></text></g><g><title>sk-gen`regex_lite::hir::Hir::parse (11 samples, 0.02%)</title><rect x="28.6567%" y="309" width="0.0180%" height="15" fill="rgb(248,132,6)" fg:x="17527" fg:w="11"/><text x="28.9067%" y="319.50"></text></g><g><title>sk-gen`regex_lite::hir::parse::Parser::parse (9 samples, 0.01%)</title><rect x="28.6600%" y="293" width="0.0147%" height="15" fill="rgb(227,167,50)" fg:x="17529" fg:w="9"/><text x="28.9100%" y="303.50"></text></g><g><title>sk-gen`regex_lite::hir::parse::Parser::parse_inner (7 samples, 0.01%)</title><rect x="28.6632%" y="277" width="0.0114%" height="15" fill="rgb(242,84,37)" fg:x="17531" fg:w="7"/><text x="28.9132%" y="287.50"></text></g><g><title>sk-gen`jaq_std::regex::Flags::regex (34 samples, 0.06%)</title><rect x="28.6403%" y="341" width="0.0556%" height="15" fill="rgb(212,4,50)" fg:x="17517" fg:w="34"/><text x="28.8903%" y="351.50"></text></g><g><title>sk-gen`regex_lite::string::RegexBuilder::build (34 samples, 0.06%)</title><rect x="28.6403%" y="325" width="0.0556%" height="15" fill="rgb(230,228,32)" fg:x="17517" fg:w="34"/><text x="28.8903%" y="335.50"></text></g><g><title>sk-gen`regex_lite::nfa::NFA::new (13 samples, 0.02%)</title><rect x="28.6747%" y="309" width="0.0213%" height="15" fill="rgb(248,217,23)" fg:x="17538" fg:w="13"/><text x="28.9247%" y="319.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c_capture (13 samples, 0.02%)</title><rect x="28.6747%" y="293" width="0.0213%" height="15" fill="rgb(238,197,32)" fg:x="17538" fg:w="13"/><text x="28.9247%" y="303.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c (9 samples, 0.01%)</title><rect x="28.6812%" y="277" width="0.0147%" height="15" fill="rgb(236,106,1)" fg:x="17542" fg:w="9"/><text x="28.9312%" y="287.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c_capture (9 samples, 0.01%)</title><rect x="28.6812%" y="261" width="0.0147%" height="15" fill="rgb(219,228,13)" fg:x="17542" fg:w="9"/><text x="28.9312%" y="271.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c (7 samples, 0.01%)</title><rect x="28.6845%" y="245" width="0.0114%" height="15" fill="rgb(238,30,35)" fg:x="17544" fg:w="7"/><text x="28.9345%" y="255.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (68 samples, 0.11%)</title><rect x="28.6011%" y="389" width="0.1112%" height="15" fill="rgb(236,70,23)" fg:x="17493" fg:w="68"/><text x="28.8511%" y="399.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (68 samples, 0.11%)</title><rect x="28.6011%" y="373" width="0.1112%" height="15" fill="rgb(249,104,48)" fg:x="17493" fg:w="68"/><text x="28.8511%" y="383.50"></text></g><g><title>sk-gen`jaq_std::re (67 samples, 0.11%)</title><rect x="28.6027%" y="357" width="0.1095%" height="15" fill="rgb(254,117,50)" fg:x="17494" fg:w="67"/><text x="28.8527%" y="367.50"></text></g><g><title>sk-gen`jaq_std::regex::regex (10 samples, 0.02%)</title><rect x="28.6959%" y="341" width="0.0164%" height="15" fill="rgb(223,152,4)" fg:x="17551" fg:w="10"/><text x="28.9459%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="28.7139%" y="373" width="0.0114%" height="15" fill="rgb(245,6,2)" fg:x="17562" fg:w="7"/><text x="28.9639%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="28.7139%" y="357" width="0.0114%" height="15" fill="rgb(249,150,24)" fg:x="17562" fg:w="7"/><text x="28.9639%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="28.7139%" y="341" width="0.0114%" height="15" fill="rgb(228,185,42)" fg:x="17562" fg:w="7"/><text x="28.9639%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (80 samples, 0.13%)</title><rect x="28.6011%" y="405" width="0.1308%" height="15" fill="rgb(226,39,33)" fg:x="17493" fg:w="80"/><text x="28.8511%" y="415.50"></text></g><g><title>sk-gen`jaq_core::filter::bind_vars (12 samples, 0.02%)</title><rect x="28.7123%" y="389" width="0.0196%" height="15" fill="rgb(221,166,19)" fg:x="17561" fg:w="12"/><text x="28.9623%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (87 samples, 0.14%)</title><rect x="28.5995%" y="421" width="0.1422%" height="15" fill="rgb(209,109,2)" fg:x="17492" fg:w="87"/><text x="28.8495%" y="431.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="28.7499%" y="293" width="0.0114%" height="15" fill="rgb(252,216,26)" fg:x="17584" fg:w="7"/><text x="28.9999%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (12 samples, 0.02%)</title><rect x="28.8006%" y="85" width="0.0196%" height="15" fill="rgb(227,173,36)" fg:x="17615" fg:w="12"/><text x="29.0506%" y="95.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (9 samples, 0.01%)</title><rect x="28.8055%" y="69" width="0.0147%" height="15" fill="rgb(209,90,7)" fg:x="17618" fg:w="9"/><text x="29.0555%" y="79.50"></text></g><g><title>sk-gen`jaq_core::path::run (9 samples, 0.01%)</title><rect x="28.8055%" y="53" width="0.0147%" height="15" fill="rgb(250,194,11)" fg:x="17618" fg:w="9"/><text x="29.0555%" y="63.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (7 samples, 0.01%)</title><rect x="28.8087%" y="37" width="0.0114%" height="15" fill="rgb(220,72,50)" fg:x="17620" fg:w="7"/><text x="29.0587%" y="47.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (22 samples, 0.04%)</title><rect x="28.7908%" y="149" width="0.0360%" height="15" fill="rgb(222,106,48)" fg:x="17609" fg:w="22"/><text x="29.0408%" y="159.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (22 samples, 0.04%)</title><rect x="28.7908%" y="133" width="0.0360%" height="15" fill="rgb(216,220,45)" fg:x="17609" fg:w="22"/><text x="29.0408%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (20 samples, 0.03%)</title><rect x="28.7940%" y="117" width="0.0327%" height="15" fill="rgb(234,112,18)" fg:x="17611" fg:w="20"/><text x="29.0440%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (17 samples, 0.03%)</title><rect x="28.7989%" y="101" width="0.0278%" height="15" fill="rgb(206,179,9)" fg:x="17614" fg:w="17"/><text x="29.0489%" y="111.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (36 samples, 0.06%)</title><rect x="28.7858%" y="197" width="0.0589%" height="15" fill="rgb(215,115,40)" fg:x="17606" fg:w="36"/><text x="29.0358%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (36 samples, 0.06%)</title><rect x="28.7858%" y="181" width="0.0589%" height="15" fill="rgb(222,69,34)" fg:x="17606" fg:w="36"/><text x="29.0358%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (33 samples, 0.05%)</title><rect x="28.7908%" y="165" width="0.0540%" height="15" fill="rgb(209,161,10)" fg:x="17609" fg:w="33"/><text x="29.0408%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (11 samples, 0.02%)</title><rect x="28.8267%" y="149" width="0.0180%" height="15" fill="rgb(217,6,38)" fg:x="17631" fg:w="11"/><text x="29.0767%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (8 samples, 0.01%)</title><rect x="28.8316%" y="133" width="0.0131%" height="15" fill="rgb(229,229,48)" fg:x="17634" fg:w="8"/><text x="29.0816%" y="143.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (8 samples, 0.01%)</title><rect x="28.8316%" y="117" width="0.0131%" height="15" fill="rgb(225,21,28)" fg:x="17634" fg:w="8"/><text x="29.0816%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (7 samples, 0.01%)</title><rect x="28.8333%" y="101" width="0.0114%" height="15" fill="rgb(206,33,13)" fg:x="17635" fg:w="7"/><text x="29.0833%" y="111.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (7 samples, 0.01%)</title><rect x="28.8512%" y="101" width="0.0114%" height="15" fill="rgb(242,178,17)" fg:x="17646" fg:w="7"/><text x="29.1012%" y="111.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (13 samples, 0.02%)</title><rect x="28.8447%" y="149" width="0.0213%" height="15" fill="rgb(220,162,5)" fg:x="17642" fg:w="13"/><text x="29.0947%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (10 samples, 0.02%)</title><rect x="28.8496%" y="133" width="0.0164%" height="15" fill="rgb(210,33,43)" fg:x="17645" fg:w="10"/><text x="29.0996%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (10 samples, 0.02%)</title><rect x="28.8496%" y="117" width="0.0164%" height="15" fill="rgb(216,116,54)" fg:x="17645" fg:w="10"/><text x="29.0996%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="28.8790%" y="85" width="0.0131%" height="15" fill="rgb(249,92,24)" fg:x="17663" fg:w="8"/><text x="29.1290%" y="95.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (7 samples, 0.01%)</title><rect x="28.8807%" y="69" width="0.0114%" height="15" fill="rgb(231,189,14)" fg:x="17664" fg:w="7"/><text x="29.1307%" y="79.50"></text></g><g><title>sk-gen`jaq_core::path::run (7 samples, 0.01%)</title><rect x="28.8807%" y="53" width="0.0114%" height="15" fill="rgb(230,8,41)" fg:x="17664" fg:w="7"/><text x="29.1307%" y="63.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="28.8692%" y="133" width="0.0294%" height="15" fill="rgb(249,7,27)" fg:x="17657" fg:w="18"/><text x="29.1192%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (13 samples, 0.02%)</title><rect x="28.8774%" y="117" width="0.0213%" height="15" fill="rgb(232,86,5)" fg:x="17662" fg:w="13"/><text x="29.1274%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (13 samples, 0.02%)</title><rect x="28.8774%" y="101" width="0.0213%" height="15" fill="rgb(224,175,18)" fg:x="17662" fg:w="13"/><text x="29.1274%" y="111.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.14%)</title><rect x="28.7646%" y="261" width="0.1357%" height="15" fill="rgb(220,129,12)" fg:x="17593" fg:w="83"/><text x="29.0146%" y="271.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (71 samples, 0.12%)</title><rect x="28.7842%" y="245" width="0.1161%" height="15" fill="rgb(210,19,36)" fg:x="17605" fg:w="71"/><text x="29.0342%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (71 samples, 0.12%)</title><rect x="28.7842%" y="229" width="0.1161%" height="15" fill="rgb(219,96,14)" fg:x="17605" fg:w="71"/><text x="29.0342%" y="239.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (70 samples, 0.11%)</title><rect x="28.7858%" y="213" width="0.1145%" height="15" fill="rgb(249,106,1)" fg:x="17606" fg:w="70"/><text x="29.0358%" y="223.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (34 samples, 0.06%)</title><rect x="28.8447%" y="197" width="0.0556%" height="15" fill="rgb(249,155,20)" fg:x="17642" fg:w="34"/><text x="29.0947%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (34 samples, 0.06%)</title><rect x="28.8447%" y="181" width="0.0556%" height="15" fill="rgb(244,168,9)" fg:x="17642" fg:w="34"/><text x="29.0947%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (34 samples, 0.06%)</title><rect x="28.8447%" y="165" width="0.0556%" height="15" fill="rgb(216,23,50)" fg:x="17642" fg:w="34"/><text x="29.0947%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (21 samples, 0.03%)</title><rect x="28.8660%" y="149" width="0.0343%" height="15" fill="rgb(224,219,20)" fg:x="17655" fg:w="21"/><text x="29.1160%" y="159.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (96 samples, 0.16%)</title><rect x="28.7466%" y="341" width="0.1570%" height="15" fill="rgb(222,156,15)" fg:x="17582" fg:w="96"/><text x="28.9966%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (96 samples, 0.16%)</title><rect x="28.7466%" y="325" width="0.1570%" height="15" fill="rgb(231,97,17)" fg:x="17582" fg:w="96"/><text x="28.9966%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (94 samples, 0.15%)</title><rect x="28.7499%" y="309" width="0.1537%" height="15" fill="rgb(218,70,48)" fg:x="17584" fg:w="94"/><text x="28.9999%" y="319.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (87 samples, 0.14%)</title><rect x="28.7613%" y="293" width="0.1422%" height="15" fill="rgb(212,196,52)" fg:x="17591" fg:w="87"/><text x="29.0113%" y="303.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (87 samples, 0.14%)</title><rect x="28.7613%" y="277" width="0.1422%" height="15" fill="rgb(243,203,18)" fg:x="17591" fg:w="87"/><text x="29.0113%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="28.9052%" y="213" width="0.0147%" height="15" fill="rgb(252,125,41)" fg:x="17679" fg:w="9"/><text x="29.1552%" y="223.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (9 samples, 0.01%)</title><rect x="28.9052%" y="197" width="0.0147%" height="15" fill="rgb(223,180,33)" fg:x="17679" fg:w="9"/><text x="29.1552%" y="207.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="28.9052%" y="181" width="0.0147%" height="15" fill="rgb(254,159,46)" fg:x="17679" fg:w="9"/><text x="29.1552%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (206 samples, 0.34%)</title><rect x="28.5995%" y="437" width="0.3368%" height="15" fill="rgb(254,38,10)" fg:x="17492" fg:w="206"/><text x="28.8495%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (119 samples, 0.19%)</title><rect x="28.7417%" y="421" width="0.1946%" height="15" fill="rgb(208,217,32)" fg:x="17579" fg:w="119"/><text x="28.9917%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (118 samples, 0.19%)</title><rect x="28.7433%" y="405" width="0.1929%" height="15" fill="rgb(221,120,13)" fg:x="17580" fg:w="118"/><text x="28.9933%" y="415.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (118 samples, 0.19%)</title><rect x="28.7433%" y="389" width="0.1929%" height="15" fill="rgb(246,54,52)" fg:x="17580" fg:w="118"/><text x="28.9933%" y="399.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (116 samples, 0.19%)</title><rect x="28.7466%" y="373" width="0.1897%" height="15" fill="rgb(242,34,25)" fg:x="17582" fg:w="116"/><text x="28.9966%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (116 samples, 0.19%)</title><rect x="28.7466%" y="357" width="0.1897%" height="15" fill="rgb(247,209,9)" fg:x="17582" fg:w="116"/><text x="28.9966%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (20 samples, 0.03%)</title><rect x="28.9036%" y="341" width="0.0327%" height="15" fill="rgb(228,71,26)" fg:x="17678" fg:w="20"/><text x="29.1536%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (20 samples, 0.03%)</title><rect x="28.9036%" y="325" width="0.0327%" height="15" fill="rgb(222,145,49)" fg:x="17678" fg:w="20"/><text x="29.1536%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (20 samples, 0.03%)</title><rect x="28.9036%" y="309" width="0.0327%" height="15" fill="rgb(218,121,17)" fg:x="17678" fg:w="20"/><text x="29.1536%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (19 samples, 0.03%)</title><rect x="28.9052%" y="293" width="0.0311%" height="15" fill="rgb(244,50,7)" fg:x="17679" fg:w="19"/><text x="29.1552%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (19 samples, 0.03%)</title><rect x="28.9052%" y="277" width="0.0311%" height="15" fill="rgb(246,229,37)" fg:x="17679" fg:w="19"/><text x="29.1552%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (19 samples, 0.03%)</title><rect x="28.9052%" y="261" width="0.0311%" height="15" fill="rgb(225,18,5)" fg:x="17679" fg:w="19"/><text x="29.1552%" y="271.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (19 samples, 0.03%)</title><rect x="28.9052%" y="245" width="0.0311%" height="15" fill="rgb(213,204,8)" fg:x="17679" fg:w="19"/><text x="29.1552%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (19 samples, 0.03%)</title><rect x="28.9052%" y="229" width="0.0311%" height="15" fill="rgb(238,103,6)" fg:x="17679" fg:w="19"/><text x="29.1552%" y="239.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (208 samples, 0.34%)</title><rect x="28.5978%" y="453" width="0.3401%" height="15" fill="rgb(222,25,35)" fg:x="17491" fg:w="208"/><text x="28.8478%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run::_{{closure}} (210 samples, 0.34%)</title><rect x="28.5962%" y="533" width="0.3434%" height="15" fill="rgb(213,203,35)" fg:x="17490" fg:w="210"/><text x="28.8462%" y="543.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (210 samples, 0.34%)</title><rect x="28.5962%" y="517" width="0.3434%" height="15" fill="rgb(221,79,53)" fg:x="17490" fg:w="210"/><text x="28.8462%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (210 samples, 0.34%)</title><rect x="28.5962%" y="501" width="0.3434%" height="15" fill="rgb(243,200,35)" fg:x="17490" fg:w="210"/><text x="28.8462%" y="511.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (210 samples, 0.34%)</title><rect x="28.5962%" y="485" width="0.3434%" height="15" fill="rgb(248,60,25)" fg:x="17490" fg:w="210"/><text x="28.8462%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (209 samples, 0.34%)</title><rect x="28.5978%" y="469" width="0.3417%" height="15" fill="rgb(227,53,46)" fg:x="17491" fg:w="209"/><text x="28.8478%" y="479.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (315 samples, 0.52%)</title><rect x="28.4409%" y="933" width="0.5150%" height="15" fill="rgb(216,120,32)" fg:x="17395" fg:w="315"/><text x="28.6909%" y="943.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (314 samples, 0.51%)</title><rect x="28.4425%" y="917" width="0.5134%" height="15" fill="rgb(220,134,1)" fg:x="17396" fg:w="314"/><text x="28.6925%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::update (313 samples, 0.51%)</title><rect x="28.4441%" y="901" width="0.5118%" height="15" fill="rgb(237,168,5)" fg:x="17397" fg:w="313"/><text x="28.6941%" y="911.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (312 samples, 0.51%)</title><rect x="28.4458%" y="885" width="0.5101%" height="15" fill="rgb(231,100,33)" fg:x="17398" fg:w="312"/><text x="28.6958%" y="895.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (311 samples, 0.51%)</title><rect x="28.4474%" y="869" width="0.5085%" height="15" fill="rgb(236,177,47)" fg:x="17399" fg:w="311"/><text x="28.6974%" y="879.50"></text></g><g><title>sk-gen`jaq_core::path::update (311 samples, 0.51%)</title><rect x="28.4474%" y="853" width="0.5085%" height="15" fill="rgb(235,7,49)" fg:x="17399" fg:w="311"/><text x="28.6974%" y="863.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (311 samples, 0.51%)</title><rect x="28.4474%" y="837" width="0.5085%" height="15" fill="rgb(232,119,22)" fg:x="17399" fg:w="311"/><text x="28.6974%" y="847.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (311 samples, 0.51%)</title><rect x="28.4474%" y="821" width="0.5085%" height="15" fill="rgb(254,73,53)" fg:x="17399" fg:w="311"/><text x="28.6974%" y="831.50"></text></g><g><title>sk-gen`jaq_core::path::update (311 samples, 0.51%)</title><rect x="28.4474%" y="805" width="0.5085%" height="15" fill="rgb(251,35,20)" fg:x="17399" fg:w="311"/><text x="28.6974%" y="815.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (310 samples, 0.51%)</title><rect x="28.4490%" y="789" width="0.5069%" height="15" fill="rgb(241,119,20)" fg:x="17400" fg:w="310"/><text x="28.6990%" y="799.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (308 samples, 0.50%)</title><rect x="28.4523%" y="773" width="0.5036%" height="15" fill="rgb(207,102,14)" fg:x="17402" fg:w="308"/><text x="28.7023%" y="783.50"></text></g><g><title>sk-gen`jaq_core::path::update (308 samples, 0.50%)</title><rect x="28.4523%" y="757" width="0.5036%" height="15" fill="rgb(248,201,50)" fg:x="17402" fg:w="308"/><text x="28.7023%" y="767.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (308 samples, 0.50%)</title><rect x="28.4523%" y="741" width="0.5036%" height="15" fill="rgb(222,185,44)" fg:x="17402" fg:w="308"/><text x="28.7023%" y="751.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (308 samples, 0.50%)</title><rect x="28.4523%" y="725" width="0.5036%" height="15" fill="rgb(218,107,18)" fg:x="17402" fg:w="308"/><text x="28.7023%" y="735.50"></text></g><g><title>sk-gen`jaq_core::path::update (308 samples, 0.50%)</title><rect x="28.4523%" y="709" width="0.5036%" height="15" fill="rgb(237,177,39)" fg:x="17402" fg:w="308"/><text x="28.7023%" y="719.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (308 samples, 0.50%)</title><rect x="28.4523%" y="693" width="0.5036%" height="15" fill="rgb(246,69,6)" fg:x="17402" fg:w="308"/><text x="28.7023%" y="703.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (307 samples, 0.50%)</title><rect x="28.4539%" y="677" width="0.5019%" height="15" fill="rgb(234,208,37)" fg:x="17403" fg:w="307"/><text x="28.7039%" y="687.50"></text></g><g><title>sk-gen`jaq_core::path::update (307 samples, 0.50%)</title><rect x="28.4539%" y="661" width="0.5019%" height="15" fill="rgb(225,4,6)" fg:x="17403" fg:w="307"/><text x="28.7039%" y="671.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (307 samples, 0.50%)</title><rect x="28.4539%" y="645" width="0.5019%" height="15" fill="rgb(233,45,0)" fg:x="17403" fg:w="307"/><text x="28.7039%" y="655.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (303 samples, 0.50%)</title><rect x="28.4605%" y="629" width="0.4954%" height="15" fill="rgb(226,136,5)" fg:x="17407" fg:w="303"/><text x="28.7105%" y="639.50"></text></g><g><title>sk-gen`jaq_core::path::update (302 samples, 0.49%)</title><rect x="28.4621%" y="613" width="0.4938%" height="15" fill="rgb(211,91,47)" fg:x="17408" fg:w="302"/><text x="28.7121%" y="623.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (302 samples, 0.49%)</title><rect x="28.4621%" y="597" width="0.4938%" height="15" fill="rgb(242,88,51)" fg:x="17408" fg:w="302"/><text x="28.7121%" y="607.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (299 samples, 0.49%)</title><rect x="28.4670%" y="581" width="0.4889%" height="15" fill="rgb(230,91,28)" fg:x="17411" fg:w="299"/><text x="28.7170%" y="591.50"></text></g><g><title>sk-gen`jaq_core::path::update (299 samples, 0.49%)</title><rect x="28.4670%" y="565" width="0.4889%" height="15" fill="rgb(254,186,29)" fg:x="17411" fg:w="299"/><text x="28.7170%" y="575.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (299 samples, 0.49%)</title><rect x="28.4670%" y="549" width="0.4889%" height="15" fill="rgb(238,6,4)" fg:x="17411" fg:w="299"/><text x="28.7170%" y="559.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place$LT$core..iter..adapters..flatten..FlatMap$LT$alloc..boxed..Box$LT$dyn$u20$core..iter..traits..iterator..Iterator$u2b$Item$u20$$u3d$$u20$core..result..Result$LT$jaq_json..Val$C$jaq_core..exn..Exn$LT$jaq_json..Val$GT$$GT$$GT$$C$alloc..boxed..Box$LT$dyn$u20$core..iter..traits..iterator..Iterator$u2b$Item$u20$$u3d$$u20$core..result..Result$LT$jaq_json..Val$C$jaq_core..exn..Exn$LT$jaq_json..Val$GT$$GT$$GT$$C$jaq_core..box_iter..flat_map_with$LT$jaq_core..filter..Ctx$LT$jaq_json..Val$GT$$C$core..result..Result$LT$jaq_json..Val$C$jaq_core..exn..Exn$LT$jaq_json..Val$GT$$GT$$C$core..result..Result$LT$jaq_json..Val$C$jaq_core..exn..Exn$LT$jaq_json..Val$GT$$GT$$C$alloc..boxed..Box$LT$dyn$u20$core..iter..traits..iterator..Iterator$u2b$Item$u20$$u3d$$u20$core..result..Result$LT$jaq_json..Val$C$jaq_core..exn..Exn$LT$jaq_json..Val$GT$$GT$$GT$$C$jaq_core..box_iter..flat_map_then_with$LT$jaq_core..filter..Ctx$LT$jaq_json..Val$GT$$C$jaq_json..Val$C$jaq_json..Val$C$jaq_core..exn..Exn$LT$jaq_json..Val$GT (9 samples, 0.01%)</title><rect x="28.9412%" y="533" width="0.0147%" height="15" fill="rgb(221,151,16)" fg:x="17701" fg:w="9"/><text x="29.1912%" y="543.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update::_{{closure}} (335 samples, 0.55%)</title><rect x="28.4114%" y="981" width="0.5477%" height="15" fill="rgb(251,143,52)" fg:x="17377" fg:w="335"/><text x="28.6614%" y="991.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;V&gt;::update (318 samples, 0.52%)</title><rect x="28.4392%" y="965" width="0.5199%" height="15" fill="rgb(206,90,15)" fg:x="17394" fg:w="318"/><text x="28.6892%" y="975.50"></text></g><g><title>sk-gen`jaq_core::path::update (318 samples, 0.52%)</title><rect x="28.4392%" y="949" width="0.5199%" height="15" fill="rgb(218,35,8)" fg:x="17394" fg:w="318"/><text x="28.6892%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (348 samples, 0.57%)</title><rect x="28.4000%" y="1045" width="0.5690%" height="15" fill="rgb(239,215,6)" fg:x="17370" fg:w="348"/><text x="28.6500%" y="1055.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (346 samples, 0.57%)</title><rect x="28.4033%" y="1029" width="0.5657%" height="15" fill="rgb(245,116,39)" fg:x="17372" fg:w="346"/><text x="28.6533%" y="1039.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (346 samples, 0.57%)</title><rect x="28.4033%" y="1013" width="0.5657%" height="15" fill="rgb(242,65,28)" fg:x="17372" fg:w="346"/><text x="28.6533%" y="1023.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (341 samples, 0.56%)</title><rect x="28.4114%" y="997" width="0.5575%" height="15" fill="rgb(252,132,53)" fg:x="17377" fg:w="341"/><text x="28.6614%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="28.9722%" y="1029" width="0.0196%" height="15" fill="rgb(224,159,50)" fg:x="17720" fg:w="12"/><text x="29.2222%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::path::Part&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="28.9771%" y="1013" width="0.0147%" height="15" fill="rgb(224,93,4)" fg:x="17723" fg:w="9"/><text x="29.2271%" y="1023.50"></text></g><g><title>sk-gen`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.01%)</title><rect x="28.9771%" y="997" width="0.0147%" height="15" fill="rgb(208,81,34)" fg:x="17723" fg:w="9"/><text x="29.2271%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (15 samples, 0.02%)</title><rect x="29.0098%" y="997" width="0.0245%" height="15" fill="rgb(233,92,54)" fg:x="17743" fg:w="15"/><text x="29.2598%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (15 samples, 0.02%)</title><rect x="29.0098%" y="981" width="0.0245%" height="15" fill="rgb(237,21,14)" fg:x="17743" fg:w="15"/><text x="29.2598%" y="991.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (14 samples, 0.02%)</title><rect x="29.0115%" y="965" width="0.0229%" height="15" fill="rgb(249,128,51)" fg:x="17744" fg:w="14"/><text x="29.2615%" y="975.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (12 samples, 0.02%)</title><rect x="29.0147%" y="949" width="0.0196%" height="15" fill="rgb(223,129,24)" fg:x="17746" fg:w="12"/><text x="29.2647%" y="959.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (10 samples, 0.02%)</title><rect x="29.0180%" y="933" width="0.0164%" height="15" fill="rgb(231,168,25)" fg:x="17748" fg:w="10"/><text x="29.2680%" y="943.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (10 samples, 0.02%)</title><rect x="29.0180%" y="917" width="0.0164%" height="15" fill="rgb(224,39,20)" fg:x="17748" fg:w="10"/><text x="29.2680%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (9 samples, 0.01%)</title><rect x="29.0197%" y="901" width="0.0147%" height="15" fill="rgb(225,152,53)" fg:x="17749" fg:w="9"/><text x="29.2697%" y="911.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (7 samples, 0.01%)</title><rect x="29.0229%" y="885" width="0.0114%" height="15" fill="rgb(252,17,24)" fg:x="17751" fg:w="7"/><text x="29.2729%" y="895.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (7 samples, 0.01%)</title><rect x="29.0229%" y="869" width="0.0114%" height="15" fill="rgb(250,114,30)" fg:x="17751" fg:w="7"/><text x="29.2729%" y="879.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (7 samples, 0.01%)</title><rect x="29.0229%" y="853" width="0.0114%" height="15" fill="rgb(229,5,4)" fg:x="17751" fg:w="7"/><text x="29.2729%" y="863.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="29.0801%" y="533" width="0.0196%" height="15" fill="rgb(225,176,49)" fg:x="17786" fg:w="12"/><text x="29.3301%" y="543.50"></text></g><g><title>sk-gen`&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="29.0818%" y="517" width="0.0180%" height="15" fill="rgb(224,221,49)" fg:x="17787" fg:w="11"/><text x="29.3318%" y="527.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="29.0801%" y="549" width="0.0229%" height="15" fill="rgb(253,169,27)" fg:x="17786" fg:w="14"/><text x="29.3301%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (10 samples, 0.02%)</title><rect x="29.1079%" y="469" width="0.0164%" height="15" fill="rgb(211,206,16)" fg:x="17803" fg:w="10"/><text x="29.3579%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (9 samples, 0.01%)</title><rect x="29.1096%" y="453" width="0.0147%" height="15" fill="rgb(244,87,35)" fg:x="17804" fg:w="9"/><text x="29.3596%" y="463.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (9 samples, 0.01%)</title><rect x="29.1096%" y="437" width="0.0147%" height="15" fill="rgb(246,28,10)" fg:x="17804" fg:w="9"/><text x="29.3596%" y="447.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="29.1259%" y="389" width="0.0114%" height="15" fill="rgb(229,12,44)" fg:x="17814" fg:w="7"/><text x="29.3759%" y="399.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (7 samples, 0.01%)</title><rect x="29.1259%" y="373" width="0.0114%" height="15" fill="rgb(210,145,37)" fg:x="17814" fg:w="7"/><text x="29.3759%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="29.1259%" y="357" width="0.0114%" height="15" fill="rgb(227,112,52)" fg:x="17814" fg:w="7"/><text x="29.3759%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (22 samples, 0.04%)</title><rect x="29.1079%" y="485" width="0.0360%" height="15" fill="rgb(238,155,34)" fg:x="17803" fg:w="22"/><text x="29.3579%" y="495.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (12 samples, 0.02%)</title><rect x="29.1243%" y="469" width="0.0196%" height="15" fill="rgb(239,226,36)" fg:x="17813" fg:w="12"/><text x="29.3743%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (11 samples, 0.02%)</title><rect x="29.1259%" y="453" width="0.0180%" height="15" fill="rgb(230,16,23)" fg:x="17814" fg:w="11"/><text x="29.3759%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="29.1259%" y="437" width="0.0180%" height="15" fill="rgb(236,171,36)" fg:x="17814" fg:w="11"/><text x="29.3759%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (11 samples, 0.02%)</title><rect x="29.1259%" y="421" width="0.0180%" height="15" fill="rgb(221,22,14)" fg:x="17814" fg:w="11"/><text x="29.3759%" y="431.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="29.1259%" y="405" width="0.0180%" height="15" fill="rgb(242,43,11)" fg:x="17814" fg:w="11"/><text x="29.3759%" y="415.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (26 samples, 0.04%)</title><rect x="29.1030%" y="501" width="0.0425%" height="15" fill="rgb(232,69,23)" fg:x="17800" fg:w="26"/><text x="29.3530%" y="511.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (28 samples, 0.05%)</title><rect x="29.1030%" y="517" width="0.0458%" height="15" fill="rgb(216,180,54)" fg:x="17800" fg:w="28"/><text x="29.3530%" y="527.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.08%)</title><rect x="29.0801%" y="565" width="0.0834%" height="15" fill="rgb(216,5,24)" fg:x="17786" fg:w="51"/><text x="29.3301%" y="575.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (37 samples, 0.06%)</title><rect x="29.1030%" y="549" width="0.0605%" height="15" fill="rgb(225,89,9)" fg:x="17800" fg:w="37"/><text x="29.3530%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.06%)</title><rect x="29.1030%" y="533" width="0.0605%" height="15" fill="rgb(243,75,33)" fg:x="17800" fg:w="37"/><text x="29.3530%" y="543.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (9 samples, 0.01%)</title><rect x="29.1488%" y="517" width="0.0147%" height="15" fill="rgb(247,141,45)" fg:x="17828" fg:w="9"/><text x="29.3988%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="29.1521%" y="501" width="0.0114%" height="15" fill="rgb(232,177,36)" fg:x="17830" fg:w="7"/><text x="29.4021%" y="511.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="29.1521%" y="485" width="0.0114%" height="15" fill="rgb(219,125,36)" fg:x="17830" fg:w="7"/><text x="29.4021%" y="495.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (17 samples, 0.03%)</title><rect x="29.1717%" y="373" width="0.0278%" height="15" fill="rgb(227,94,9)" fg:x="17842" fg:w="17"/><text x="29.4217%" y="383.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (16 samples, 0.03%)</title><rect x="29.1733%" y="357" width="0.0262%" height="15" fill="rgb(240,34,52)" fg:x="17843" fg:w="16"/><text x="29.4233%" y="367.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.03%)</title><rect x="29.1733%" y="341" width="0.0262%" height="15" fill="rgb(216,45,12)" fg:x="17843" fg:w="16"/><text x="29.4233%" y="351.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (16 samples, 0.03%)</title><rect x="29.1733%" y="325" width="0.0262%" height="15" fill="rgb(246,21,19)" fg:x="17843" fg:w="16"/><text x="29.4233%" y="335.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.03%)</title><rect x="29.1733%" y="309" width="0.0262%" height="15" fill="rgb(213,98,42)" fg:x="17843" fg:w="16"/><text x="29.4233%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::from_map (15 samples, 0.02%)</title><rect x="29.1750%" y="293" width="0.0245%" height="15" fill="rgb(250,136,47)" fg:x="17844" fg:w="15"/><text x="29.4250%" y="303.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="29.1766%" y="277" width="0.0229%" height="15" fill="rgb(251,124,27)" fg:x="17845" fg:w="14"/><text x="29.4266%" y="287.50"></text></g><g><title>sk-gen`core::iter::adapters::map::map_try_fold::_{{closure}} (10 samples, 0.02%)</title><rect x="29.1832%" y="261" width="0.0164%" height="15" fill="rgb(229,180,14)" fg:x="17849" fg:w="10"/><text x="29.4332%" y="271.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;regex_lite::pool::Pool&lt;regex_lite::pikevm::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_lite::pikevm::Cache+core::marker::Send+core::panic::unwind_safe::UnwindSafe+core::marker::Sync+core::panic::unwind_safe::RefUnwindSafe&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="29.1995%" y="373" width="0.0147%" height="15" fill="rgb(245,216,25)" fg:x="17859" fg:w="9"/><text x="29.4495%" y="383.50"></text></g><g><title>sk-gen`regex_lite::hir::parse::Parser::parse_inner (9 samples, 0.01%)</title><rect x="29.2306%" y="309" width="0.0147%" height="15" fill="rgb(251,43,5)" fg:x="17878" fg:w="9"/><text x="29.4806%" y="319.50"></text></g><g><title>sk-gen`regex_lite::hir::Hir::parse (13 samples, 0.02%)</title><rect x="29.2257%" y="341" width="0.0213%" height="15" fill="rgb(250,128,24)" fg:x="17875" fg:w="13"/><text x="29.4757%" y="351.50"></text></g><g><title>sk-gen`regex_lite::hir::parse::Parser::parse (12 samples, 0.02%)</title><rect x="29.2273%" y="325" width="0.0196%" height="15" fill="rgb(217,117,27)" fg:x="17876" fg:w="12"/><text x="29.4773%" y="335.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c (8 samples, 0.01%)</title><rect x="29.2486%" y="309" width="0.0131%" height="15" fill="rgb(245,147,4)" fg:x="17889" fg:w="8"/><text x="29.4986%" y="319.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c_capture (8 samples, 0.01%)</title><rect x="29.2486%" y="293" width="0.0131%" height="15" fill="rgb(242,201,35)" fg:x="17889" fg:w="8"/><text x="29.4986%" y="303.50"></text></g><g><title>sk-gen`regex_lite::string::RegexBuilder::build (27 samples, 0.04%)</title><rect x="29.2191%" y="357" width="0.0441%" height="15" fill="rgb(218,181,1)" fg:x="17871" fg:w="27"/><text x="29.4691%" y="367.50"></text></g><g><title>sk-gen`regex_lite::nfa::NFA::new (10 samples, 0.02%)</title><rect x="29.2469%" y="341" width="0.0164%" height="15" fill="rgb(222,6,29)" fg:x="17888" fg:w="10"/><text x="29.4969%" y="351.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c_capture (10 samples, 0.02%)</title><rect x="29.2469%" y="325" width="0.0164%" height="15" fill="rgb(208,186,3)" fg:x="17888" fg:w="10"/><text x="29.4969%" y="335.50"></text></g><g><title>sk-gen`jaq_std::regex::Flags::regex (29 samples, 0.05%)</title><rect x="29.2175%" y="373" width="0.0474%" height="15" fill="rgb(216,36,26)" fg:x="17870" fg:w="29"/><text x="29.4675%" y="383.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (66 samples, 0.11%)</title><rect x="29.1717%" y="421" width="0.1079%" height="15" fill="rgb(248,201,23)" fg:x="17842" fg:w="66"/><text x="29.4217%" y="431.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (66 samples, 0.11%)</title><rect x="29.1717%" y="405" width="0.1079%" height="15" fill="rgb(251,170,31)" fg:x="17842" fg:w="66"/><text x="29.4217%" y="415.50"></text></g><g><title>sk-gen`jaq_std::re (66 samples, 0.11%)</title><rect x="29.1717%" y="389" width="0.1079%" height="15" fill="rgb(207,110,25)" fg:x="17842" fg:w="66"/><text x="29.4217%" y="399.50"></text></g><g><title>sk-gen`jaq_std::regex::regex (9 samples, 0.01%)</title><rect x="29.2649%" y="373" width="0.0147%" height="15" fill="rgb(250,54,15)" fg:x="17899" fg:w="9"/><text x="29.5149%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (69 samples, 0.11%)</title><rect x="29.1701%" y="437" width="0.1128%" height="15" fill="rgb(227,68,33)" fg:x="17841" fg:w="69"/><text x="29.4201%" y="447.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (76 samples, 0.12%)</title><rect x="29.1701%" y="453" width="0.1243%" height="15" fill="rgb(238,34,41)" fg:x="17841" fg:w="76"/><text x="29.4201%" y="463.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="29.3123%" y="277" width="0.0131%" height="15" fill="rgb(220,11,15)" fg:x="17928" fg:w="8"/><text x="29.5623%" y="287.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="29.3630%" y="117" width="0.0131%" height="15" fill="rgb(246,111,35)" fg:x="17959" fg:w="8"/><text x="29.6130%" y="127.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="29.3499%" y="181" width="0.0294%" height="15" fill="rgb(209,88,53)" fg:x="17951" fg:w="18"/><text x="29.5999%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="29.3499%" y="165" width="0.0294%" height="15" fill="rgb(231,185,47)" fg:x="17951" fg:w="18"/><text x="29.5999%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (11 samples, 0.02%)</title><rect x="29.3614%" y="149" width="0.0180%" height="15" fill="rgb(233,154,1)" fg:x="17958" fg:w="11"/><text x="29.6114%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (11 samples, 0.02%)</title><rect x="29.3614%" y="133" width="0.0180%" height="15" fill="rgb(225,15,46)" fg:x="17958" fg:w="11"/><text x="29.6114%" y="143.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (34 samples, 0.06%)</title><rect x="29.3401%" y="229" width="0.0556%" height="15" fill="rgb(211,135,41)" fg:x="17945" fg:w="34"/><text x="29.5901%" y="239.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (33 samples, 0.05%)</title><rect x="29.3417%" y="213" width="0.0540%" height="15" fill="rgb(208,54,0)" fg:x="17946" fg:w="33"/><text x="29.5917%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (29 samples, 0.05%)</title><rect x="29.3483%" y="197" width="0.0474%" height="15" fill="rgb(244,136,14)" fg:x="17950" fg:w="29"/><text x="29.5983%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (10 samples, 0.02%)</title><rect x="29.3794%" y="181" width="0.0164%" height="15" fill="rgb(241,56,14)" fg:x="17969" fg:w="10"/><text x="29.6294%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (10 samples, 0.02%)</title><rect x="29.3990%" y="181" width="0.0164%" height="15" fill="rgb(205,80,24)" fg:x="17981" fg:w="10"/><text x="29.6490%" y="191.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (8 samples, 0.01%)</title><rect x="29.4022%" y="165" width="0.0131%" height="15" fill="rgb(220,57,4)" fg:x="17983" fg:w="8"/><text x="29.6522%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (8 samples, 0.01%)</title><rect x="29.4022%" y="149" width="0.0131%" height="15" fill="rgb(226,193,50)" fg:x="17983" fg:w="8"/><text x="29.6522%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (10 samples, 0.02%)</title><rect x="29.4284%" y="117" width="0.0164%" height="15" fill="rgb(231,168,22)" fg:x="17999" fg:w="10"/><text x="29.6784%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (10 samples, 0.02%)</title><rect x="29.4284%" y="101" width="0.0164%" height="15" fill="rgb(254,215,14)" fg:x="17999" fg:w="10"/><text x="29.6784%" y="111.50"></text></g><g><title>sk-gen`jaq_core::path::run (8 samples, 0.01%)</title><rect x="29.4317%" y="85" width="0.0131%" height="15" fill="rgb(211,115,16)" fg:x="18001" fg:w="8"/><text x="29.6817%" y="95.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (17 samples, 0.03%)</title><rect x="29.4186%" y="165" width="0.0278%" height="15" fill="rgb(236,210,16)" fg:x="17993" fg:w="17"/><text x="29.6686%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (13 samples, 0.02%)</title><rect x="29.4251%" y="149" width="0.0213%" height="15" fill="rgb(221,94,12)" fg:x="17997" fg:w="13"/><text x="29.6751%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (13 samples, 0.02%)</title><rect x="29.4251%" y="133" width="0.0213%" height="15" fill="rgb(235,218,49)" fg:x="17997" fg:w="13"/><text x="29.6751%" y="143.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (33 samples, 0.05%)</title><rect x="29.3973%" y="197" width="0.0540%" height="15" fill="rgb(217,114,14)" fg:x="17980" fg:w="33"/><text x="29.6473%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (22 samples, 0.04%)</title><rect x="29.4153%" y="181" width="0.0360%" height="15" fill="rgb(216,145,22)" fg:x="17991" fg:w="22"/><text x="29.6653%" y="191.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.15%)</title><rect x="29.3074%" y="293" width="0.1455%" height="15" fill="rgb(217,112,39)" fg:x="17925" fg:w="89"/><text x="29.5574%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (73 samples, 0.12%)</title><rect x="29.3336%" y="277" width="0.1194%" height="15" fill="rgb(225,85,32)" fg:x="17941" fg:w="73"/><text x="29.5836%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (72 samples, 0.12%)</title><rect x="29.3352%" y="261" width="0.1177%" height="15" fill="rgb(245,209,47)" fg:x="17942" fg:w="72"/><text x="29.5852%" y="271.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (71 samples, 0.12%)</title><rect x="29.3368%" y="245" width="0.1161%" height="15" fill="rgb(218,220,15)" fg:x="17943" fg:w="71"/><text x="29.5868%" y="255.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (35 samples, 0.06%)</title><rect x="29.3957%" y="229" width="0.0572%" height="15" fill="rgb(222,202,31)" fg:x="17979" fg:w="35"/><text x="29.6457%" y="239.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (34 samples, 0.06%)</title><rect x="29.3973%" y="213" width="0.0556%" height="15" fill="rgb(243,203,4)" fg:x="17980" fg:w="34"/><text x="29.6473%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (98 samples, 0.16%)</title><rect x="29.2976%" y="373" width="0.1602%" height="15" fill="rgb(237,92,17)" fg:x="17919" fg:w="98"/><text x="29.5476%" y="383.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (98 samples, 0.16%)</title><rect x="29.2976%" y="357" width="0.1602%" height="15" fill="rgb(231,119,7)" fg:x="17919" fg:w="98"/><text x="29.5476%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (98 samples, 0.16%)</title><rect x="29.2976%" y="341" width="0.1602%" height="15" fill="rgb(237,82,41)" fg:x="17919" fg:w="98"/><text x="29.5476%" y="351.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (92 samples, 0.15%)</title><rect x="29.3074%" y="325" width="0.1504%" height="15" fill="rgb(226,81,48)" fg:x="17925" fg:w="92"/><text x="29.5574%" y="335.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (92 samples, 0.15%)</title><rect x="29.3074%" y="309" width="0.1504%" height="15" fill="rgb(234,70,51)" fg:x="17925" fg:w="92"/><text x="29.5574%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="29.4660%" y="181" width="0.0114%" height="15" fill="rgb(251,86,4)" fg:x="18022" fg:w="7"/><text x="29.7160%" y="191.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (7 samples, 0.01%)</title><rect x="29.4660%" y="165" width="0.0114%" height="15" fill="rgb(244,144,28)" fg:x="18022" fg:w="7"/><text x="29.7160%" y="175.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="29.4644%" y="197" width="0.0147%" height="15" fill="rgb(232,161,39)" fg:x="18021" fg:w="9"/><text x="29.7144%" y="207.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (12 samples, 0.02%)</title><rect x="29.4611%" y="245" width="0.0196%" height="15" fill="rgb(247,34,51)" fg:x="18019" fg:w="12"/><text x="29.7111%" y="255.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (12 samples, 0.02%)</title><rect x="29.4611%" y="229" width="0.0196%" height="15" fill="rgb(225,132,2)" fg:x="18019" fg:w="12"/><text x="29.7111%" y="239.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="29.4627%" y="213" width="0.0180%" height="15" fill="rgb(209,159,44)" fg:x="18020" fg:w="11"/><text x="29.7127%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (20 samples, 0.03%)</title><rect x="29.4595%" y="293" width="0.0327%" height="15" fill="rgb(251,214,1)" fg:x="18018" fg:w="20"/><text x="29.7095%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (19 samples, 0.03%)</title><rect x="29.4611%" y="277" width="0.0311%" height="15" fill="rgb(247,84,47)" fg:x="18019" fg:w="19"/><text x="29.7111%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (19 samples, 0.03%)</title><rect x="29.4611%" y="261" width="0.0311%" height="15" fill="rgb(240,111,43)" fg:x="18019" fg:w="19"/><text x="29.7111%" y="271.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (122 samples, 0.20%)</title><rect x="29.2943%" y="421" width="0.1995%" height="15" fill="rgb(215,214,35)" fg:x="17917" fg:w="122"/><text x="29.5443%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (121 samples, 0.20%)</title><rect x="29.2960%" y="405" width="0.1978%" height="15" fill="rgb(248,207,23)" fg:x="17918" fg:w="121"/><text x="29.5460%" y="415.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (121 samples, 0.20%)</title><rect x="29.2960%" y="389" width="0.1978%" height="15" fill="rgb(214,186,4)" fg:x="17918" fg:w="121"/><text x="29.5460%" y="399.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (22 samples, 0.04%)</title><rect x="29.4578%" y="373" width="0.0360%" height="15" fill="rgb(220,133,22)" fg:x="18017" fg:w="22"/><text x="29.7078%" y="383.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (21 samples, 0.03%)</title><rect x="29.4595%" y="357" width="0.0343%" height="15" fill="rgb(239,134,19)" fg:x="18018" fg:w="21"/><text x="29.7095%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (21 samples, 0.03%)</title><rect x="29.4595%" y="341" width="0.0343%" height="15" fill="rgb(250,140,9)" fg:x="18018" fg:w="21"/><text x="29.7095%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (21 samples, 0.03%)</title><rect x="29.4595%" y="325" width="0.0343%" height="15" fill="rgb(225,59,14)" fg:x="18018" fg:w="21"/><text x="29.7095%" y="335.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (21 samples, 0.03%)</title><rect x="29.4595%" y="309" width="0.0343%" height="15" fill="rgb(214,152,51)" fg:x="18018" fg:w="21"/><text x="29.7095%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run::_{{closure}} (203 samples, 0.33%)</title><rect x="29.1635%" y="565" width="0.3319%" height="15" fill="rgb(251,227,43)" fg:x="17837" fg:w="203"/><text x="29.4135%" y="575.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (202 samples, 0.33%)</title><rect x="29.1652%" y="549" width="0.3303%" height="15" fill="rgb(241,96,17)" fg:x="17838" fg:w="202"/><text x="29.4152%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (202 samples, 0.33%)</title><rect x="29.1652%" y="533" width="0.3303%" height="15" fill="rgb(234,198,43)" fg:x="17838" fg:w="202"/><text x="29.4152%" y="543.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (201 samples, 0.33%)</title><rect x="29.1668%" y="517" width="0.3286%" height="15" fill="rgb(220,108,29)" fg:x="17839" fg:w="201"/><text x="29.4168%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (200 samples, 0.33%)</title><rect x="29.1684%" y="501" width="0.3270%" height="15" fill="rgb(226,163,33)" fg:x="17840" fg:w="200"/><text x="29.4184%" y="511.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (200 samples, 0.33%)</title><rect x="29.1684%" y="485" width="0.3270%" height="15" fill="rgb(205,194,45)" fg:x="17840" fg:w="200"/><text x="29.4184%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (200 samples, 0.33%)</title><rect x="29.1684%" y="469" width="0.3270%" height="15" fill="rgb(206,143,44)" fg:x="17840" fg:w="200"/><text x="29.4184%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (123 samples, 0.20%)</title><rect x="29.2943%" y="453" width="0.2011%" height="15" fill="rgb(236,136,36)" fg:x="17917" fg:w="123"/><text x="29.5443%" y="463.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (123 samples, 0.20%)</title><rect x="29.2943%" y="437" width="0.2011%" height="15" fill="rgb(249,172,42)" fg:x="17917" fg:w="123"/><text x="29.5443%" y="447.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (273 samples, 0.45%)</title><rect x="29.0605%" y="869" width="0.4464%" height="15" fill="rgb(216,139,23)" fg:x="17774" fg:w="273"/><text x="29.3105%" y="879.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (270 samples, 0.44%)</title><rect x="29.0654%" y="853" width="0.4415%" height="15" fill="rgb(207,166,20)" fg:x="17777" fg:w="270"/><text x="29.3154%" y="863.50"></text></g><g><title>sk-gen`jaq_core::path::update (269 samples, 0.44%)</title><rect x="29.0671%" y="837" width="0.4398%" height="15" fill="rgb(210,209,22)" fg:x="17778" fg:w="269"/><text x="29.3171%" y="847.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (268 samples, 0.44%)</title><rect x="29.0687%" y="821" width="0.4382%" height="15" fill="rgb(232,118,20)" fg:x="17779" fg:w="268"/><text x="29.3187%" y="831.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (266 samples, 0.43%)</title><rect x="29.0720%" y="805" width="0.4349%" height="15" fill="rgb(238,113,42)" fg:x="17781" fg:w="266"/><text x="29.3220%" y="815.50"></text></g><g><title>sk-gen`jaq_core::path::update (266 samples, 0.43%)</title><rect x="29.0720%" y="789" width="0.4349%" height="15" fill="rgb(231,42,5)" fg:x="17781" fg:w="266"/><text x="29.3220%" y="799.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (266 samples, 0.43%)</title><rect x="29.0720%" y="773" width="0.4349%" height="15" fill="rgb(243,166,24)" fg:x="17781" fg:w="266"/><text x="29.3220%" y="783.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (265 samples, 0.43%)</title><rect x="29.0736%" y="757" width="0.4333%" height="15" fill="rgb(237,226,12)" fg:x="17782" fg:w="265"/><text x="29.3236%" y="767.50"></text></g><g><title>sk-gen`jaq_core::path::update (265 samples, 0.43%)</title><rect x="29.0736%" y="741" width="0.4333%" height="15" fill="rgb(229,133,24)" fg:x="17782" fg:w="265"/><text x="29.3236%" y="751.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (265 samples, 0.43%)</title><rect x="29.0736%" y="725" width="0.4333%" height="15" fill="rgb(238,33,43)" fg:x="17782" fg:w="265"/><text x="29.3236%" y="735.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (264 samples, 0.43%)</title><rect x="29.0752%" y="709" width="0.4316%" height="15" fill="rgb(227,59,38)" fg:x="17783" fg:w="264"/><text x="29.3252%" y="719.50"></text></g><g><title>sk-gen`jaq_core::path::update (264 samples, 0.43%)</title><rect x="29.0752%" y="693" width="0.4316%" height="15" fill="rgb(230,97,0)" fg:x="17783" fg:w="264"/><text x="29.3252%" y="703.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (264 samples, 0.43%)</title><rect x="29.0752%" y="677" width="0.4316%" height="15" fill="rgb(250,173,50)" fg:x="17783" fg:w="264"/><text x="29.3252%" y="687.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (263 samples, 0.43%)</title><rect x="29.0769%" y="661" width="0.4300%" height="15" fill="rgb(240,15,50)" fg:x="17784" fg:w="263"/><text x="29.3269%" y="671.50"></text></g><g><title>sk-gen`jaq_core::path::update (262 samples, 0.43%)</title><rect x="29.0785%" y="645" width="0.4284%" height="15" fill="rgb(221,93,22)" fg:x="17785" fg:w="262"/><text x="29.3285%" y="655.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (262 samples, 0.43%)</title><rect x="29.0785%" y="629" width="0.4284%" height="15" fill="rgb(245,180,53)" fg:x="17785" fg:w="262"/><text x="29.3285%" y="639.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (261 samples, 0.43%)</title><rect x="29.0801%" y="613" width="0.4267%" height="15" fill="rgb(231,88,51)" fg:x="17786" fg:w="261"/><text x="29.3301%" y="623.50"></text></g><g><title>sk-gen`jaq_core::path::update (261 samples, 0.43%)</title><rect x="29.0801%" y="597" width="0.4267%" height="15" fill="rgb(240,58,21)" fg:x="17786" fg:w="261"/><text x="29.3301%" y="607.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (261 samples, 0.43%)</title><rect x="29.0801%" y="581" width="0.4267%" height="15" fill="rgb(237,21,10)" fg:x="17786" fg:w="261"/><text x="29.3301%" y="591.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (282 samples, 0.46%)</title><rect x="29.0474%" y="917" width="0.4611%" height="15" fill="rgb(218,43,11)" fg:x="17766" fg:w="282"/><text x="29.2974%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (277 samples, 0.45%)</title><rect x="29.0556%" y="901" width="0.4529%" height="15" fill="rgb(218,221,29)" fg:x="17771" fg:w="277"/><text x="29.3056%" y="911.50"></text></g><g><title>sk-gen`jaq_core::path::update (276 samples, 0.45%)</title><rect x="29.0573%" y="885" width="0.4513%" height="15" fill="rgb(214,118,42)" fg:x="17772" fg:w="276"/><text x="29.3073%" y="895.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (287 samples, 0.47%)</title><rect x="29.0409%" y="965" width="0.4692%" height="15" fill="rgb(251,200,26)" fg:x="17762" fg:w="287"/><text x="29.2909%" y="975.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (285 samples, 0.47%)</title><rect x="29.0442%" y="949" width="0.4660%" height="15" fill="rgb(237,101,39)" fg:x="17764" fg:w="285"/><text x="29.2942%" y="959.50"></text></g><g><title>sk-gen`jaq_core::path::update (283 samples, 0.46%)</title><rect x="29.0474%" y="933" width="0.4627%" height="15" fill="rgb(251,117,11)" fg:x="17766" fg:w="283"/><text x="29.2974%" y="943.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update::_{{closure}} (317 samples, 0.52%)</title><rect x="28.9968%" y="1013" width="0.5183%" height="15" fill="rgb(216,223,23)" fg:x="17735" fg:w="317"/><text x="29.2468%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;V&gt;::update (294 samples, 0.48%)</title><rect x="29.0344%" y="997" width="0.4807%" height="15" fill="rgb(251,54,12)" fg:x="17758" fg:w="294"/><text x="29.2844%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::path::update (291 samples, 0.48%)</title><rect x="29.0393%" y="981" width="0.4758%" height="15" fill="rgb(254,176,54)" fg:x="17761" fg:w="291"/><text x="29.2893%" y="991.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (689 samples, 1.13%)</title><rect x="28.3934%" y="1093" width="1.1265%" height="15" fill="rgb(210,32,8)" fg:x="17366" fg:w="689"/><text x="28.6434%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (688 samples, 1.12%)</title><rect x="28.3951%" y="1077" width="1.1249%" height="15" fill="rgb(235,52,38)" fg:x="17367" fg:w="688"/><text x="28.6451%" y="1087.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (687 samples, 1.12%)</title><rect x="28.3967%" y="1061" width="1.1232%" height="15" fill="rgb(231,4,44)" fg:x="17368" fg:w="687"/><text x="28.6467%" y="1071.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (337 samples, 0.55%)</title><rect x="28.9690%" y="1045" width="0.5510%" height="15" fill="rgb(249,2,32)" fg:x="17718" fg:w="337"/><text x="29.2190%" y="1055.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (323 samples, 0.53%)</title><rect x="28.9919%" y="1029" width="0.5281%" height="15" fill="rgb(224,65,26)" fg:x="17732" fg:w="323"/><text x="29.2419%" y="1039.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="29.5216%" y="1061" width="0.0180%" height="15" fill="rgb(250,73,40)" fg:x="18056" fg:w="11"/><text x="29.7716%" y="1071.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (7 samples, 0.01%)</title><rect x="29.5281%" y="1045" width="0.0114%" height="15" fill="rgb(253,177,16)" fg:x="18060" fg:w="7"/><text x="29.7781%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="29.5396%" y="997" width="0.0245%" height="15" fill="rgb(217,32,34)" fg:x="18067" fg:w="15"/><text x="29.7896%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::path::Part&lt;T&gt;::map (14 samples, 0.02%)</title><rect x="29.5412%" y="981" width="0.0229%" height="15" fill="rgb(212,7,10)" fg:x="18068" fg:w="14"/><text x="29.7912%" y="991.50"></text></g><g><title>sk-gen`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.02%)</title><rect x="29.5445%" y="965" width="0.0196%" height="15" fill="rgb(245,89,8)" fg:x="18070" fg:w="12"/><text x="29.7945%" y="975.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (8 samples, 0.01%)</title><rect x="29.5723%" y="965" width="0.0131%" height="15" fill="rgb(237,16,53)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="975.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="29.5723%" y="949" width="0.0131%" height="15" fill="rgb(250,204,30)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="959.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (8 samples, 0.01%)</title><rect x="29.5723%" y="933" width="0.0131%" height="15" fill="rgb(208,77,27)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="943.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="29.5723%" y="917" width="0.0131%" height="15" fill="rgb(250,204,28)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (8 samples, 0.01%)</title><rect x="29.5723%" y="901" width="0.0131%" height="15" fill="rgb(244,63,21)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="911.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="29.5723%" y="885" width="0.0131%" height="15" fill="rgb(236,85,44)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="895.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (8 samples, 0.01%)</title><rect x="29.5723%" y="869" width="0.0131%" height="15" fill="rgb(215,98,4)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="879.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="29.5723%" y="853" width="0.0131%" height="15" fill="rgb(235,38,11)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="863.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (8 samples, 0.01%)</title><rect x="29.5723%" y="837" width="0.0131%" height="15" fill="rgb(254,186,25)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="847.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="29.5723%" y="821" width="0.0131%" height="15" fill="rgb(225,55,31)" fg:x="18087" fg:w="8"/><text x="29.8223%" y="831.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="29.6230%" y="501" width="0.0196%" height="15" fill="rgb(211,15,21)" fg:x="18118" fg:w="12"/><text x="29.8730%" y="511.50"></text></g><g><title>sk-gen`&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="29.6230%" y="485" width="0.0196%" height="15" fill="rgb(215,187,41)" fg:x="18118" fg:w="12"/><text x="29.8730%" y="495.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="29.6230%" y="517" width="0.0213%" height="15" fill="rgb(248,69,32)" fg:x="18118" fg:w="13"/><text x="29.8730%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="29.6524%" y="357" width="0.0114%" height="15" fill="rgb(252,102,52)" fg:x="18136" fg:w="7"/><text x="29.9024%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (7 samples, 0.01%)</title><rect x="29.6524%" y="341" width="0.0114%" height="15" fill="rgb(253,140,32)" fg:x="18136" fg:w="7"/><text x="29.9024%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="29.6524%" y="325" width="0.0114%" height="15" fill="rgb(216,56,42)" fg:x="18136" fg:w="7"/><text x="29.9024%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (16 samples, 0.03%)</title><rect x="29.6442%" y="469" width="0.0262%" height="15" fill="rgb(216,184,14)" fg:x="18131" fg:w="16"/><text x="29.8942%" y="479.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (15 samples, 0.02%)</title><rect x="29.6459%" y="453" width="0.0245%" height="15" fill="rgb(237,187,27)" fg:x="18132" fg:w="15"/><text x="29.8959%" y="463.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (12 samples, 0.02%)</title><rect x="29.6508%" y="437" width="0.0196%" height="15" fill="rgb(219,65,3)" fg:x="18135" fg:w="12"/><text x="29.9008%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (12 samples, 0.02%)</title><rect x="29.6508%" y="421" width="0.0196%" height="15" fill="rgb(245,83,25)" fg:x="18135" fg:w="12"/><text x="29.9008%" y="431.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (12 samples, 0.02%)</title><rect x="29.6508%" y="405" width="0.0196%" height="15" fill="rgb(214,205,45)" fg:x="18135" fg:w="12"/><text x="29.9008%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (12 samples, 0.02%)</title><rect x="29.6508%" y="389" width="0.0196%" height="15" fill="rgb(241,20,18)" fg:x="18135" fg:w="12"/><text x="29.9008%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (12 samples, 0.02%)</title><rect x="29.6508%" y="373" width="0.0196%" height="15" fill="rgb(232,163,23)" fg:x="18135" fg:w="12"/><text x="29.9008%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (7 samples, 0.01%)</title><rect x="29.6900%" y="405" width="0.0114%" height="15" fill="rgb(214,5,46)" fg:x="18159" fg:w="7"/><text x="29.9400%" y="415.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.08%)</title><rect x="29.6230%" y="533" width="0.0801%" height="15" fill="rgb(229,78,17)" fg:x="18118" fg:w="49"/><text x="29.8730%" y="543.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (36 samples, 0.06%)</title><rect x="29.6442%" y="517" width="0.0589%" height="15" fill="rgb(248,89,10)" fg:x="18131" fg:w="36"/><text x="29.8942%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (36 samples, 0.06%)</title><rect x="29.6442%" y="501" width="0.0589%" height="15" fill="rgb(248,54,15)" fg:x="18131" fg:w="36"/><text x="29.8942%" y="511.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (36 samples, 0.06%)</title><rect x="29.6442%" y="485" width="0.0589%" height="15" fill="rgb(223,116,6)" fg:x="18131" fg:w="36"/><text x="29.8942%" y="495.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (20 samples, 0.03%)</title><rect x="29.6704%" y="469" width="0.0327%" height="15" fill="rgb(205,125,38)" fg:x="18147" fg:w="20"/><text x="29.9204%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (19 samples, 0.03%)</title><rect x="29.6720%" y="453" width="0.0311%" height="15" fill="rgb(251,78,38)" fg:x="18148" fg:w="19"/><text x="29.9220%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (17 samples, 0.03%)</title><rect x="29.6753%" y="437" width="0.0278%" height="15" fill="rgb(253,78,28)" fg:x="18150" fg:w="17"/><text x="29.9253%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (9 samples, 0.01%)</title><rect x="29.6884%" y="421" width="0.0147%" height="15" fill="rgb(209,120,3)" fg:x="18158" fg:w="9"/><text x="29.9384%" y="431.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::from_map (14 samples, 0.02%)</title><rect x="29.7243%" y="261" width="0.0229%" height="15" fill="rgb(238,229,9)" fg:x="18180" fg:w="14"/><text x="29.9743%" y="271.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="29.7243%" y="245" width="0.0229%" height="15" fill="rgb(253,159,18)" fg:x="18180" fg:w="14"/><text x="29.9743%" y="255.50"></text></g><g><title>sk-gen`core::iter::adapters::map::map_try_fold::_{{closure}} (10 samples, 0.02%)</title><rect x="29.7309%" y="229" width="0.0164%" height="15" fill="rgb(244,42,34)" fg:x="18184" fg:w="10"/><text x="29.9809%" y="239.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (18 samples, 0.03%)</title><rect x="29.7227%" y="341" width="0.0294%" height="15" fill="rgb(224,8,7)" fg:x="18179" fg:w="18"/><text x="29.9727%" y="351.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (18 samples, 0.03%)</title><rect x="29.7227%" y="325" width="0.0294%" height="15" fill="rgb(210,201,45)" fg:x="18179" fg:w="18"/><text x="29.9727%" y="335.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.03%)</title><rect x="29.7227%" y="309" width="0.0294%" height="15" fill="rgb(252,185,21)" fg:x="18179" fg:w="18"/><text x="29.9727%" y="319.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (18 samples, 0.03%)</title><rect x="29.7227%" y="293" width="0.0294%" height="15" fill="rgb(223,131,1)" fg:x="18179" fg:w="18"/><text x="29.9727%" y="303.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.03%)</title><rect x="29.7243%" y="277" width="0.0278%" height="15" fill="rgb(245,141,16)" fg:x="18180" fg:w="17"/><text x="29.9743%" y="287.50"></text></g><g><title>sk-gen`regex_lite::hir::Hir::parse (11 samples, 0.02%)</title><rect x="29.7734%" y="309" width="0.0180%" height="15" fill="rgb(229,55,45)" fg:x="18210" fg:w="11"/><text x="30.0234%" y="319.50"></text></g><g><title>sk-gen`regex_lite::hir::parse::Parser::parse (10 samples, 0.02%)</title><rect x="29.7750%" y="293" width="0.0164%" height="15" fill="rgb(208,92,15)" fg:x="18211" fg:w="10"/><text x="30.0250%" y="303.50"></text></g><g><title>sk-gen`regex_lite::hir::parse::Parser::parse_inner (9 samples, 0.01%)</title><rect x="29.7767%" y="277" width="0.0147%" height="15" fill="rgb(234,185,47)" fg:x="18212" fg:w="9"/><text x="30.0267%" y="287.50"></text></g><g><title>sk-gen`jaq_std::regex::Flags::regex (25 samples, 0.04%)</title><rect x="29.7619%" y="341" width="0.0409%" height="15" fill="rgb(253,104,50)" fg:x="18203" fg:w="25"/><text x="30.0119%" y="351.50"></text></g><g><title>sk-gen`regex_lite::string::RegexBuilder::build (25 samples, 0.04%)</title><rect x="29.7619%" y="325" width="0.0409%" height="15" fill="rgb(205,70,7)" fg:x="18203" fg:w="25"/><text x="30.0119%" y="335.50"></text></g><g><title>sk-gen`regex_lite::nfa::NFA::new (7 samples, 0.01%)</title><rect x="29.7914%" y="309" width="0.0114%" height="15" fill="rgb(240,178,43)" fg:x="18221" fg:w="7"/><text x="30.0414%" y="319.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c_capture (7 samples, 0.01%)</title><rect x="29.7914%" y="293" width="0.0114%" height="15" fill="rgb(214,112,2)" fg:x="18221" fg:w="7"/><text x="30.0414%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (56 samples, 0.09%)</title><rect x="29.7194%" y="389" width="0.0916%" height="15" fill="rgb(206,46,17)" fg:x="18177" fg:w="56"/><text x="29.9694%" y="399.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (56 samples, 0.09%)</title><rect x="29.7194%" y="373" width="0.0916%" height="15" fill="rgb(225,220,16)" fg:x="18177" fg:w="56"/><text x="29.9694%" y="383.50"></text></g><g><title>sk-gen`jaq_std::re (55 samples, 0.09%)</title><rect x="29.7211%" y="357" width="0.0899%" height="15" fill="rgb(238,65,40)" fg:x="18178" fg:w="55"/><text x="29.9711%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (62 samples, 0.10%)</title><rect x="29.7178%" y="405" width="0.1014%" height="15" fill="rgb(230,151,21)" fg:x="18176" fg:w="62"/><text x="29.9678%" y="415.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (67 samples, 0.11%)</title><rect x="29.7162%" y="421" width="0.1095%" height="15" fill="rgb(218,58,49)" fg:x="18175" fg:w="67"/><text x="29.9662%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (10 samples, 0.02%)</title><rect x="29.8649%" y="85" width="0.0164%" height="15" fill="rgb(219,179,14)" fg:x="18266" fg:w="10"/><text x="30.1149%" y="95.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="29.8568%" y="149" width="0.0294%" height="15" fill="rgb(223,72,1)" fg:x="18261" fg:w="18"/><text x="30.1068%" y="159.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="29.8568%" y="133" width="0.0294%" height="15" fill="rgb(238,126,10)" fg:x="18261" fg:w="18"/><text x="30.1068%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (13 samples, 0.02%)</title><rect x="29.8649%" y="117" width="0.0213%" height="15" fill="rgb(224,206,38)" fg:x="18266" fg:w="13"/><text x="30.1149%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (13 samples, 0.02%)</title><rect x="29.8649%" y="101" width="0.0213%" height="15" fill="rgb(212,201,54)" fg:x="18266" fg:w="13"/><text x="30.1149%" y="111.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (35 samples, 0.06%)</title><rect x="29.8519%" y="197" width="0.0572%" height="15" fill="rgb(218,154,48)" fg:x="18258" fg:w="35"/><text x="30.1019%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (35 samples, 0.06%)</title><rect x="29.8519%" y="181" width="0.0572%" height="15" fill="rgb(232,93,24)" fg:x="18258" fg:w="35"/><text x="30.1019%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (33 samples, 0.05%)</title><rect x="29.8551%" y="165" width="0.0540%" height="15" fill="rgb(245,30,21)" fg:x="18260" fg:w="33"/><text x="30.1051%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (14 samples, 0.02%)</title><rect x="29.8862%" y="149" width="0.0229%" height="15" fill="rgb(242,148,29)" fg:x="18279" fg:w="14"/><text x="30.1362%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (11 samples, 0.02%)</title><rect x="29.8911%" y="133" width="0.0180%" height="15" fill="rgb(244,153,54)" fg:x="18282" fg:w="11"/><text x="30.1411%" y="143.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (10 samples, 0.02%)</title><rect x="29.8927%" y="117" width="0.0164%" height="15" fill="rgb(252,87,22)" fg:x="18283" fg:w="10"/><text x="30.1427%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (10 samples, 0.02%)</title><rect x="29.8927%" y="101" width="0.0164%" height="15" fill="rgb(210,51,29)" fg:x="18283" fg:w="10"/><text x="30.1427%" y="111.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (10 samples, 0.02%)</title><rect x="29.8927%" y="85" width="0.0164%" height="15" fill="rgb(242,136,47)" fg:x="18283" fg:w="10"/><text x="30.1427%" y="95.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (9 samples, 0.01%)</title><rect x="29.8944%" y="69" width="0.0147%" height="15" fill="rgb(238,68,4)" fg:x="18284" fg:w="9"/><text x="30.1444%" y="79.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (9 samples, 0.01%)</title><rect x="29.8944%" y="53" width="0.0147%" height="15" fill="rgb(242,161,30)" fg:x="18284" fg:w="9"/><text x="30.1444%" y="63.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="29.9156%" y="149" width="0.0180%" height="15" fill="rgb(218,58,44)" fg:x="18297" fg:w="11"/><text x="30.1656%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (7 samples, 0.01%)</title><rect x="29.9222%" y="133" width="0.0114%" height="15" fill="rgb(252,125,32)" fg:x="18301" fg:w="7"/><text x="30.1722%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (7 samples, 0.01%)</title><rect x="29.9222%" y="117" width="0.0114%" height="15" fill="rgb(219,178,0)" fg:x="18301" fg:w="7"/><text x="30.1722%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="29.9451%" y="85" width="0.0131%" height="15" fill="rgb(213,152,7)" fg:x="18315" fg:w="8"/><text x="30.1951%" y="95.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (7 samples, 0.01%)</title><rect x="29.9467%" y="69" width="0.0114%" height="15" fill="rgb(249,109,34)" fg:x="18316" fg:w="7"/><text x="30.1967%" y="79.50"></text></g><g><title>sk-gen`jaq_core::path::run (7 samples, 0.01%)</title><rect x="29.9467%" y="53" width="0.0114%" height="15" fill="rgb(232,96,21)" fg:x="18316" fg:w="7"/><text x="30.1967%" y="63.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (13 samples, 0.02%)</title><rect x="29.9385%" y="133" width="0.0213%" height="15" fill="rgb(228,27,39)" fg:x="18311" fg:w="13"/><text x="30.1885%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (10 samples, 0.02%)</title><rect x="29.9434%" y="117" width="0.0164%" height="15" fill="rgb(211,182,52)" fg:x="18314" fg:w="10"/><text x="30.1934%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (9 samples, 0.01%)</title><rect x="29.9451%" y="101" width="0.0147%" height="15" fill="rgb(234,178,38)" fg:x="18315" fg:w="9"/><text x="30.1951%" y="111.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (71 samples, 0.12%)</title><rect x="29.8502%" y="213" width="0.1161%" height="15" fill="rgb(221,111,3)" fg:x="18257" fg:w="71"/><text x="30.1002%" y="223.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (34 samples, 0.06%)</title><rect x="29.9107%" y="197" width="0.0556%" height="15" fill="rgb(228,175,21)" fg:x="18294" fg:w="34"/><text x="30.1607%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (33 samples, 0.05%)</title><rect x="29.9124%" y="181" width="0.0540%" height="15" fill="rgb(228,174,43)" fg:x="18295" fg:w="33"/><text x="30.1624%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (33 samples, 0.05%)</title><rect x="29.9124%" y="165" width="0.0540%" height="15" fill="rgb(211,191,0)" fg:x="18295" fg:w="33"/><text x="30.1624%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (19 samples, 0.03%)</title><rect x="29.9353%" y="149" width="0.0311%" height="15" fill="rgb(253,117,3)" fg:x="18309" fg:w="19"/><text x="30.1853%" y="159.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.13%)</title><rect x="29.8355%" y="261" width="0.1324%" height="15" fill="rgb(241,127,19)" fg:x="18248" fg:w="81"/><text x="30.0855%" y="271.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (73 samples, 0.12%)</title><rect x="29.8486%" y="245" width="0.1194%" height="15" fill="rgb(218,103,12)" fg:x="18256" fg:w="73"/><text x="30.0986%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (73 samples, 0.12%)</title><rect x="29.8486%" y="229" width="0.1194%" height="15" fill="rgb(236,214,43)" fg:x="18256" fg:w="73"/><text x="30.0986%" y="239.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (87 samples, 0.14%)</title><rect x="29.8273%" y="341" width="0.1422%" height="15" fill="rgb(244,144,19)" fg:x="18243" fg:w="87"/><text x="30.0773%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (87 samples, 0.14%)</title><rect x="29.8273%" y="325" width="0.1422%" height="15" fill="rgb(246,188,10)" fg:x="18243" fg:w="87"/><text x="30.0773%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (86 samples, 0.14%)</title><rect x="29.8290%" y="309" width="0.1406%" height="15" fill="rgb(212,193,33)" fg:x="18244" fg:w="86"/><text x="30.0790%" y="319.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (83 samples, 0.14%)</title><rect x="29.8339%" y="293" width="0.1357%" height="15" fill="rgb(241,51,29)" fg:x="18247" fg:w="83"/><text x="30.0839%" y="303.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (83 samples, 0.14%)</title><rect x="29.8339%" y="277" width="0.1357%" height="15" fill="rgb(211,58,19)" fg:x="18247" fg:w="83"/><text x="30.0839%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (8 samples, 0.01%)</title><rect x="29.9745%" y="213" width="0.0131%" height="15" fill="rgb(229,111,26)" fg:x="18333" fg:w="8"/><text x="30.2245%" y="223.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (8 samples, 0.01%)</title><rect x="29.9745%" y="197" width="0.0131%" height="15" fill="rgb(213,115,40)" fg:x="18333" fg:w="8"/><text x="30.2245%" y="207.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (8 samples, 0.01%)</title><rect x="29.9745%" y="181" width="0.0131%" height="15" fill="rgb(209,56,44)" fg:x="18333" fg:w="8"/><text x="30.2245%" y="191.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (103 samples, 0.17%)</title><rect x="29.8273%" y="373" width="0.1684%" height="15" fill="rgb(230,108,32)" fg:x="18243" fg:w="103"/><text x="30.0773%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (103 samples, 0.17%)</title><rect x="29.8273%" y="357" width="0.1684%" height="15" fill="rgb(216,165,31)" fg:x="18243" fg:w="103"/><text x="30.0773%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (16 samples, 0.03%)</title><rect x="29.9696%" y="341" width="0.0262%" height="15" fill="rgb(218,122,21)" fg:x="18330" fg:w="16"/><text x="30.2196%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (16 samples, 0.03%)</title><rect x="29.9696%" y="325" width="0.0262%" height="15" fill="rgb(223,224,47)" fg:x="18330" fg:w="16"/><text x="30.2196%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (16 samples, 0.03%)</title><rect x="29.9696%" y="309" width="0.0262%" height="15" fill="rgb(238,102,44)" fg:x="18330" fg:w="16"/><text x="30.2196%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (15 samples, 0.02%)</title><rect x="29.9712%" y="293" width="0.0245%" height="15" fill="rgb(236,46,40)" fg:x="18331" fg:w="15"/><text x="30.2212%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (15 samples, 0.02%)</title><rect x="29.9712%" y="277" width="0.0245%" height="15" fill="rgb(247,202,50)" fg:x="18331" fg:w="15"/><text x="30.2212%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (15 samples, 0.02%)</title><rect x="29.9712%" y="261" width="0.0245%" height="15" fill="rgb(209,99,20)" fg:x="18331" fg:w="15"/><text x="30.2212%" y="271.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (15 samples, 0.02%)</title><rect x="29.9712%" y="245" width="0.0245%" height="15" fill="rgb(252,27,34)" fg:x="18331" fg:w="15"/><text x="30.2212%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (14 samples, 0.02%)</title><rect x="29.9729%" y="229" width="0.0229%" height="15" fill="rgb(215,206,23)" fg:x="18332" fg:w="14"/><text x="30.2229%" y="239.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run::_{{closure}} (180 samples, 0.29%)</title><rect x="29.7031%" y="533" width="0.2943%" height="15" fill="rgb(212,135,36)" fg:x="18167" fg:w="180"/><text x="29.9531%" y="543.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (179 samples, 0.29%)</title><rect x="29.7047%" y="517" width="0.2927%" height="15" fill="rgb(240,189,1)" fg:x="18168" fg:w="179"/><text x="29.9547%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (179 samples, 0.29%)</title><rect x="29.7047%" y="501" width="0.2927%" height="15" fill="rgb(242,56,20)" fg:x="18168" fg:w="179"/><text x="29.9547%" y="511.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (178 samples, 0.29%)</title><rect x="29.7064%" y="485" width="0.2910%" height="15" fill="rgb(247,132,33)" fg:x="18169" fg:w="178"/><text x="29.9564%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (177 samples, 0.29%)</title><rect x="29.7080%" y="469" width="0.2894%" height="15" fill="rgb(208,149,11)" fg:x="18170" fg:w="177"/><text x="29.9580%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (176 samples, 0.29%)</title><rect x="29.7096%" y="453" width="0.2878%" height="15" fill="rgb(211,33,11)" fg:x="18171" fg:w="176"/><text x="29.9596%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (174 samples, 0.28%)</title><rect x="29.7129%" y="437" width="0.2845%" height="15" fill="rgb(221,29,38)" fg:x="18173" fg:w="174"/><text x="29.9629%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (105 samples, 0.17%)</title><rect x="29.8257%" y="421" width="0.1717%" height="15" fill="rgb(206,182,49)" fg:x="18242" fg:w="105"/><text x="30.0757%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (104 samples, 0.17%)</title><rect x="29.8273%" y="405" width="0.1700%" height="15" fill="rgb(216,140,1)" fg:x="18243" fg:w="104"/><text x="30.0773%" y="415.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (104 samples, 0.17%)</title><rect x="29.8273%" y="389" width="0.1700%" height="15" fill="rgb(232,57,40)" fg:x="18243" fg:w="104"/><text x="30.0773%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (246 samples, 0.40%)</title><rect x="29.6083%" y="741" width="0.4022%" height="15" fill="rgb(224,186,18)" fg:x="18109" fg:w="246"/><text x="29.8583%" y="751.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (246 samples, 0.40%)</title><rect x="29.6083%" y="725" width="0.4022%" height="15" fill="rgb(215,121,11)" fg:x="18109" fg:w="246"/><text x="29.8583%" y="735.50"></text></g><g><title>sk-gen`jaq_core::path::update (246 samples, 0.40%)</title><rect x="29.6083%" y="709" width="0.4022%" height="15" fill="rgb(245,147,10)" fg:x="18109" fg:w="246"/><text x="29.8583%" y="719.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (246 samples, 0.40%)</title><rect x="29.6083%" y="693" width="0.4022%" height="15" fill="rgb(238,153,13)" fg:x="18109" fg:w="246"/><text x="29.8583%" y="703.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (246 samples, 0.40%)</title><rect x="29.6083%" y="677" width="0.4022%" height="15" fill="rgb(233,108,0)" fg:x="18109" fg:w="246"/><text x="29.8583%" y="687.50"></text></g><g><title>sk-gen`jaq_core::path::update (246 samples, 0.40%)</title><rect x="29.6083%" y="661" width="0.4022%" height="15" fill="rgb(212,157,17)" fg:x="18109" fg:w="246"/><text x="29.8583%" y="671.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (246 samples, 0.40%)</title><rect x="29.6083%" y="645" width="0.4022%" height="15" fill="rgb(225,213,38)" fg:x="18109" fg:w="246"/><text x="29.8583%" y="655.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (241 samples, 0.39%)</title><rect x="29.6164%" y="629" width="0.3940%" height="15" fill="rgb(248,16,11)" fg:x="18114" fg:w="241"/><text x="29.8664%" y="639.50"></text></g><g><title>sk-gen`jaq_core::path::update (239 samples, 0.39%)</title><rect x="29.6197%" y="613" width="0.3908%" height="15" fill="rgb(241,33,4)" fg:x="18116" fg:w="239"/><text x="29.8697%" y="623.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (238 samples, 0.39%)</title><rect x="29.6213%" y="597" width="0.3891%" height="15" fill="rgb(222,26,43)" fg:x="18117" fg:w="238"/><text x="29.8713%" y="607.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (238 samples, 0.39%)</title><rect x="29.6213%" y="581" width="0.3891%" height="15" fill="rgb(243,29,36)" fg:x="18117" fg:w="238"/><text x="29.8713%" y="591.50"></text></g><g><title>sk-gen`jaq_core::path::update (238 samples, 0.39%)</title><rect x="29.6213%" y="565" width="0.3891%" height="15" fill="rgb(241,9,27)" fg:x="18117" fg:w="238"/><text x="29.8713%" y="575.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (237 samples, 0.39%)</title><rect x="29.6230%" y="549" width="0.3875%" height="15" fill="rgb(205,117,26)" fg:x="18118" fg:w="237"/><text x="29.8730%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (251 samples, 0.41%)</title><rect x="29.6033%" y="789" width="0.4104%" height="15" fill="rgb(209,80,39)" fg:x="18106" fg:w="251"/><text x="29.8533%" y="799.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (248 samples, 0.41%)</title><rect x="29.6083%" y="773" width="0.4055%" height="15" fill="rgb(239,155,6)" fg:x="18109" fg:w="248"/><text x="29.8583%" y="783.50"></text></g><g><title>sk-gen`jaq_core::path::update (248 samples, 0.41%)</title><rect x="29.6083%" y="757" width="0.4055%" height="15" fill="rgb(212,104,12)" fg:x="18109" fg:w="248"/><text x="29.8583%" y="767.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (255 samples, 0.42%)</title><rect x="29.5984%" y="837" width="0.4169%" height="15" fill="rgb(234,204,3)" fg:x="18103" fg:w="255"/><text x="29.8484%" y="847.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (253 samples, 0.41%)</title><rect x="29.6017%" y="821" width="0.4137%" height="15" fill="rgb(251,218,7)" fg:x="18105" fg:w="253"/><text x="29.8517%" y="831.50"></text></g><g><title>sk-gen`jaq_core::path::update (253 samples, 0.41%)</title><rect x="29.6017%" y="805" width="0.4137%" height="15" fill="rgb(221,81,32)" fg:x="18105" fg:w="253"/><text x="29.8517%" y="815.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (257 samples, 0.42%)</title><rect x="29.5968%" y="885" width="0.4202%" height="15" fill="rgb(214,152,26)" fg:x="18102" fg:w="257"/><text x="29.8468%" y="895.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (256 samples, 0.42%)</title><rect x="29.5984%" y="869" width="0.4186%" height="15" fill="rgb(223,22,3)" fg:x="18103" fg:w="256"/><text x="29.8484%" y="879.50"></text></g><g><title>sk-gen`jaq_core::path::update (256 samples, 0.42%)</title><rect x="29.5984%" y="853" width="0.4186%" height="15" fill="rgb(207,174,7)" fg:x="18103" fg:w="256"/><text x="29.8484%" y="863.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update::_{{closure}} (276 samples, 0.45%)</title><rect x="29.5674%" y="981" width="0.4513%" height="15" fill="rgb(224,19,52)" fg:x="18084" fg:w="276"/><text x="29.8174%" y="991.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;V&gt;::update (265 samples, 0.43%)</title><rect x="29.5854%" y="965" width="0.4333%" height="15" fill="rgb(228,24,14)" fg:x="18095" fg:w="265"/><text x="29.8354%" y="975.50"></text></g><g><title>sk-gen`jaq_core::path::update (265 samples, 0.43%)</title><rect x="29.5854%" y="949" width="0.4333%" height="15" fill="rgb(230,153,43)" fg:x="18095" fg:w="265"/><text x="29.8354%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (265 samples, 0.43%)</title><rect x="29.5854%" y="933" width="0.4333%" height="15" fill="rgb(231,106,12)" fg:x="18095" fg:w="265"/><text x="29.8354%" y="943.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (263 samples, 0.43%)</title><rect x="29.5886%" y="917" width="0.4300%" height="15" fill="rgb(215,92,2)" fg:x="18097" fg:w="263"/><text x="29.8386%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::update (262 samples, 0.43%)</title><rect x="29.5903%" y="901" width="0.4284%" height="15" fill="rgb(249,143,25)" fg:x="18098" fg:w="262"/><text x="29.8403%" y="911.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (309 samples, 0.51%)</title><rect x="29.5216%" y="1077" width="0.5052%" height="15" fill="rgb(252,7,35)" fg:x="18056" fg:w="309"/><text x="29.7716%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (298 samples, 0.49%)</title><rect x="29.5396%" y="1061" width="0.4872%" height="15" fill="rgb(216,69,40)" fg:x="18067" fg:w="298"/><text x="29.7896%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (298 samples, 0.49%)</title><rect x="29.5396%" y="1045" width="0.4872%" height="15" fill="rgb(240,36,33)" fg:x="18067" fg:w="298"/><text x="29.7896%" y="1055.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (298 samples, 0.49%)</title><rect x="29.5396%" y="1029" width="0.4872%" height="15" fill="rgb(231,128,14)" fg:x="18067" fg:w="298"/><text x="29.7896%" y="1039.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (298 samples, 0.49%)</title><rect x="29.5396%" y="1013" width="0.4872%" height="15" fill="rgb(245,143,14)" fg:x="18067" fg:w="298"/><text x="29.7896%" y="1023.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (283 samples, 0.46%)</title><rect x="29.5641%" y="997" width="0.4627%" height="15" fill="rgb(222,130,28)" fg:x="18082" fg:w="283"/><text x="29.8141%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="30.0284%" y="1013" width="0.0131%" height="15" fill="rgb(212,10,48)" fg:x="18366" fg:w="8"/><text x="30.2784%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::path::Part&lt;T&gt;::map (7 samples, 0.01%)</title><rect x="30.0301%" y="997" width="0.0114%" height="15" fill="rgb(254,118,45)" fg:x="18367" fg:w="7"/><text x="30.2801%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (13 samples, 0.02%)</title><rect x="30.0481%" y="981" width="0.0213%" height="15" fill="rgb(228,6,45)" fg:x="18378" fg:w="13"/><text x="30.2981%" y="991.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (12 samples, 0.02%)</title><rect x="30.0497%" y="965" width="0.0196%" height="15" fill="rgb(241,18,35)" fg:x="18379" fg:w="12"/><text x="30.2997%" y="975.50"></text></g><g><title>sk-gen`jaq_core::path::run (12 samples, 0.02%)</title><rect x="30.0497%" y="949" width="0.0196%" height="15" fill="rgb(227,214,53)" fg:x="18379" fg:w="12"/><text x="30.2997%" y="959.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (11 samples, 0.02%)</title><rect x="30.0513%" y="933" width="0.0180%" height="15" fill="rgb(224,107,51)" fg:x="18380" fg:w="11"/><text x="30.3013%" y="943.50"></text></g><g><title>sk-gen`jaq_core::box_iter::then (11 samples, 0.02%)</title><rect x="30.0513%" y="917" width="0.0180%" height="15" fill="rgb(248,60,28)" fg:x="18380" fg:w="11"/><text x="30.3013%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::run (11 samples, 0.02%)</title><rect x="30.0513%" y="901" width="0.0180%" height="15" fill="rgb(249,101,23)" fg:x="18380" fg:w="11"/><text x="30.3013%" y="911.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (9 samples, 0.01%)</title><rect x="30.0546%" y="885" width="0.0147%" height="15" fill="rgb(228,51,19)" fg:x="18382" fg:w="9"/><text x="30.3046%" y="895.50"></text></g><g><title>sk-gen`jaq_core::box_iter::then (9 samples, 0.01%)</title><rect x="30.0546%" y="869" width="0.0147%" height="15" fill="rgb(213,20,6)" fg:x="18382" fg:w="9"/><text x="30.3046%" y="879.50"></text></g><g><title>sk-gen`jaq_core::path::run (9 samples, 0.01%)</title><rect x="30.0546%" y="853" width="0.0147%" height="15" fill="rgb(212,124,10)" fg:x="18382" fg:w="9"/><text x="30.3046%" y="863.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="30.0562%" y="837" width="0.0131%" height="15" fill="rgb(248,3,40)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="847.50"></text></g><g><title>sk-gen`jaq_core::box_iter::then (8 samples, 0.01%)</title><rect x="30.0562%" y="821" width="0.0131%" height="15" fill="rgb(223,178,23)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="831.50"></text></g><g><title>sk-gen`jaq_core::path::run (8 samples, 0.01%)</title><rect x="30.0562%" y="805" width="0.0131%" height="15" fill="rgb(240,132,45)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="815.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="30.0562%" y="789" width="0.0131%" height="15" fill="rgb(245,164,36)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="799.50"></text></g><g><title>sk-gen`jaq_core::box_iter::then (8 samples, 0.01%)</title><rect x="30.0562%" y="773" width="0.0131%" height="15" fill="rgb(231,188,53)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="783.50"></text></g><g><title>sk-gen`jaq_core::path::run (8 samples, 0.01%)</title><rect x="30.0562%" y="757" width="0.0131%" height="15" fill="rgb(237,198,39)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="767.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="30.0562%" y="741" width="0.0131%" height="15" fill="rgb(223,120,35)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="751.50"></text></g><g><title>sk-gen`jaq_core::box_iter::then (8 samples, 0.01%)</title><rect x="30.0562%" y="725" width="0.0131%" height="15" fill="rgb(253,107,49)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="735.50"></text></g><g><title>sk-gen`jaq_core::path::run (8 samples, 0.01%)</title><rect x="30.0562%" y="709" width="0.0131%" height="15" fill="rgb(216,44,31)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="719.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (8 samples, 0.01%)</title><rect x="30.0562%" y="693" width="0.0131%" height="15" fill="rgb(253,87,21)" fg:x="18383" fg:w="8"/><text x="30.3062%" y="703.50"></text></g><g><title>sk-gen`jaq_core::box_iter::then (7 samples, 0.01%)</title><rect x="30.0579%" y="677" width="0.0114%" height="15" fill="rgb(226,18,2)" fg:x="18384" fg:w="7"/><text x="30.3079%" y="687.50"></text></g><g><title>sk-gen`jaq_core::path::run (7 samples, 0.01%)</title><rect x="30.0579%" y="661" width="0.0114%" height="15" fill="rgb(216,8,46)" fg:x="18384" fg:w="7"/><text x="30.3079%" y="671.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (41 samples, 0.07%)</title><rect x="30.0284%" y="1029" width="0.0670%" height="15" fill="rgb(226,140,39)" fg:x="18366" fg:w="41"/><text x="30.2784%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (32 samples, 0.05%)</title><rect x="30.0432%" y="1013" width="0.0523%" height="15" fill="rgb(221,194,54)" fg:x="18375" fg:w="32"/><text x="30.2932%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (31 samples, 0.05%)</title><rect x="30.0448%" y="997" width="0.0507%" height="15" fill="rgb(213,92,11)" fg:x="18376" fg:w="31"/><text x="30.2948%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (16 samples, 0.03%)</title><rect x="30.0693%" y="981" width="0.0262%" height="15" fill="rgb(229,162,46)" fg:x="18391" fg:w="16"/><text x="30.3193%" y="991.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (16 samples, 0.03%)</title><rect x="30.0693%" y="965" width="0.0262%" height="15" fill="rgb(214,111,36)" fg:x="18391" fg:w="16"/><text x="30.3193%" y="975.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (15 samples, 0.02%)</title><rect x="30.0710%" y="949" width="0.0245%" height="15" fill="rgb(207,6,21)" fg:x="18392" fg:w="15"/><text x="30.3210%" y="959.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (14 samples, 0.02%)</title><rect x="30.0726%" y="933" width="0.0229%" height="15" fill="rgb(213,127,38)" fg:x="18393" fg:w="14"/><text x="30.3226%" y="943.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (13 samples, 0.02%)</title><rect x="30.0742%" y="917" width="0.0213%" height="15" fill="rgb(238,118,32)" fg:x="18394" fg:w="13"/><text x="30.3242%" y="927.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (13 samples, 0.02%)</title><rect x="30.0742%" y="901" width="0.0213%" height="15" fill="rgb(240,139,39)" fg:x="18394" fg:w="13"/><text x="30.3242%" y="911.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (13 samples, 0.02%)</title><rect x="30.0742%" y="885" width="0.0213%" height="15" fill="rgb(235,10,37)" fg:x="18394" fg:w="13"/><text x="30.3242%" y="895.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (12 samples, 0.02%)</title><rect x="30.0759%" y="869" width="0.0196%" height="15" fill="rgb(249,171,38)" fg:x="18395" fg:w="12"/><text x="30.3259%" y="879.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (12 samples, 0.02%)</title><rect x="30.0759%" y="853" width="0.0196%" height="15" fill="rgb(242,144,32)" fg:x="18395" fg:w="12"/><text x="30.3259%" y="863.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (12 samples, 0.02%)</title><rect x="30.0759%" y="837" width="0.0196%" height="15" fill="rgb(217,117,21)" fg:x="18395" fg:w="12"/><text x="30.3259%" y="847.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (10 samples, 0.02%)</title><rect x="30.0791%" y="821" width="0.0164%" height="15" fill="rgb(249,87,1)" fg:x="18397" fg:w="10"/><text x="30.3291%" y="831.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (10 samples, 0.02%)</title><rect x="30.0791%" y="805" width="0.0164%" height="15" fill="rgb(248,196,48)" fg:x="18397" fg:w="10"/><text x="30.3291%" y="815.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (9 samples, 0.01%)</title><rect x="30.0808%" y="789" width="0.0147%" height="15" fill="rgb(251,206,33)" fg:x="18398" fg:w="9"/><text x="30.3308%" y="799.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (9 samples, 0.01%)</title><rect x="30.0808%" y="773" width="0.0147%" height="15" fill="rgb(232,141,28)" fg:x="18398" fg:w="9"/><text x="30.3308%" y="783.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (7 samples, 0.01%)</title><rect x="30.0840%" y="757" width="0.0114%" height="15" fill="rgb(209,167,14)" fg:x="18400" fg:w="7"/><text x="30.3340%" y="767.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.02%)</title><rect x="30.1167%" y="725" width="0.0164%" height="15" fill="rgb(225,11,50)" fg:x="18420" fg:w="10"/><text x="30.3667%" y="735.50"></text></g><g><title>sk-gen`core::iter::adapters::map::map_try_fold::_{{closure}} (9 samples, 0.01%)</title><rect x="30.1184%" y="709" width="0.0147%" height="15" fill="rgb(209,50,20)" fg:x="18421" fg:w="9"/><text x="30.3684%" y="719.50"></text></g><g><title>sk-gen`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (8 samples, 0.01%)</title><rect x="30.1200%" y="693" width="0.0131%" height="15" fill="rgb(212,17,46)" fg:x="18422" fg:w="8"/><text x="30.3700%" y="703.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::from_map (13 samples, 0.02%)</title><rect x="30.1151%" y="741" width="0.0213%" height="15" fill="rgb(216,101,39)" fg:x="18419" fg:w="13"/><text x="30.3651%" y="751.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (16 samples, 0.03%)</title><rect x="30.1118%" y="821" width="0.0262%" height="15" fill="rgb(212,228,48)" fg:x="18417" fg:w="16"/><text x="30.3618%" y="831.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (16 samples, 0.03%)</title><rect x="30.1118%" y="805" width="0.0262%" height="15" fill="rgb(250,6,50)" fg:x="18417" fg:w="16"/><text x="30.3618%" y="815.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.03%)</title><rect x="30.1118%" y="789" width="0.0262%" height="15" fill="rgb(250,160,48)" fg:x="18417" fg:w="16"/><text x="30.3618%" y="799.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (16 samples, 0.03%)</title><rect x="30.1118%" y="773" width="0.0262%" height="15" fill="rgb(244,216,33)" fg:x="18417" fg:w="16"/><text x="30.3618%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.02%)</title><rect x="30.1135%" y="757" width="0.0245%" height="15" fill="rgb(207,157,5)" fg:x="18418" fg:w="15"/><text x="30.3635%" y="767.50"></text></g><g><title>sk-gen`jaq_std::regex::Flags::regex (18 samples, 0.03%)</title><rect x="30.1445%" y="821" width="0.0294%" height="15" fill="rgb(228,199,8)" fg:x="18437" fg:w="18"/><text x="30.3945%" y="831.50"></text></g><g><title>sk-gen`regex_lite::string::RegexBuilder::build (18 samples, 0.03%)</title><rect x="30.1445%" y="805" width="0.0294%" height="15" fill="rgb(227,80,20)" fg:x="18437" fg:w="18"/><text x="30.3945%" y="815.50"></text></g><g><title>sk-gen`regex_lite::nfa::NFA::new (9 samples, 0.01%)</title><rect x="30.1592%" y="789" width="0.0147%" height="15" fill="rgb(222,9,33)" fg:x="18446" fg:w="9"/><text x="30.4092%" y="799.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c_capture (9 samples, 0.01%)</title><rect x="30.1592%" y="773" width="0.0147%" height="15" fill="rgb(239,44,28)" fg:x="18446" fg:w="9"/><text x="30.4092%" y="783.50"></text></g><g><title>sk-gen`regex_lite::nfa::Compiler::c (8 samples, 0.01%)</title><rect x="30.1609%" y="757" width="0.0131%" height="15" fill="rgb(249,187,43)" fg:x="18447" fg:w="8"/><text x="30.4109%" y="767.50"></text></g><g><title>sk-gen`&lt;regex_lite::pikevm::CapturesMatches as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="30.1740%" y="805" width="0.0131%" height="15" fill="rgb(216,141,28)" fg:x="18455" fg:w="8"/><text x="30.4240%" y="815.50"></text></g><g><title>sk-gen`&lt;regex_lite::pikevm::FindMatches as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="30.1740%" y="789" width="0.0131%" height="15" fill="rgb(230,154,53)" fg:x="18455" fg:w="8"/><text x="30.4240%" y="799.50"></text></g><g><title>sk-gen`regex_lite::pikevm::PikeVM::search (8 samples, 0.01%)</title><rect x="30.1740%" y="773" width="0.0131%" height="15" fill="rgb(227,82,4)" fg:x="18455" fg:w="8"/><text x="30.4240%" y="783.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (52 samples, 0.09%)</title><rect x="30.1086%" y="869" width="0.0850%" height="15" fill="rgb(220,107,16)" fg:x="18415" fg:w="52"/><text x="30.3586%" y="879.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (51 samples, 0.08%)</title><rect x="30.1102%" y="853" width="0.0834%" height="15" fill="rgb(207,187,2)" fg:x="18416" fg:w="51"/><text x="30.3602%" y="863.50"></text></g><g><title>sk-gen`jaq_std::re (51 samples, 0.08%)</title><rect x="30.1102%" y="837" width="0.0834%" height="15" fill="rgb(210,162,52)" fg:x="18416" fg:w="51"/><text x="30.3602%" y="847.50"></text></g><g><title>sk-gen`jaq_std::regex::regex (12 samples, 0.02%)</title><rect x="30.1740%" y="821" width="0.0196%" height="15" fill="rgb(217,216,49)" fg:x="18455" fg:w="12"/><text x="30.4240%" y="831.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (54 samples, 0.09%)</title><rect x="30.1086%" y="885" width="0.0883%" height="15" fill="rgb(218,146,49)" fg:x="18415" fg:w="54"/><text x="30.3586%" y="895.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (63 samples, 0.10%)</title><rect x="30.1004%" y="901" width="0.1030%" height="15" fill="rgb(216,55,40)" fg:x="18410" fg:w="63"/><text x="30.3504%" y="911.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (11 samples, 0.02%)</title><rect x="30.2557%" y="565" width="0.0180%" height="15" fill="rgb(208,196,21)" fg:x="18505" fg:w="11"/><text x="30.5057%" y="575.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (8 samples, 0.01%)</title><rect x="30.2606%" y="549" width="0.0131%" height="15" fill="rgb(242,117,42)" fg:x="18508" fg:w="8"/><text x="30.5106%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (24 samples, 0.04%)</title><rect x="30.2459%" y="629" width="0.0392%" height="15" fill="rgb(210,11,23)" fg:x="18499" fg:w="24"/><text x="30.4959%" y="639.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (24 samples, 0.04%)</title><rect x="30.2459%" y="613" width="0.0392%" height="15" fill="rgb(217,110,2)" fg:x="18499" fg:w="24"/><text x="30.4959%" y="623.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (21 samples, 0.03%)</title><rect x="30.2508%" y="597" width="0.0343%" height="15" fill="rgb(229,77,54)" fg:x="18502" fg:w="21"/><text x="30.5008%" y="607.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (21 samples, 0.03%)</title><rect x="30.2508%" y="581" width="0.0343%" height="15" fill="rgb(218,53,16)" fg:x="18502" fg:w="21"/><text x="30.5008%" y="591.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;U&gt;::combinations (7 samples, 0.01%)</title><rect x="30.2737%" y="565" width="0.0114%" height="15" fill="rgb(215,38,13)" fg:x="18516" fg:w="7"/><text x="30.5237%" y="575.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (30 samples, 0.05%)</title><rect x="30.2443%" y="677" width="0.0491%" height="15" fill="rgb(235,42,18)" fg:x="18498" fg:w="30"/><text x="30.4943%" y="687.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (30 samples, 0.05%)</title><rect x="30.2443%" y="661" width="0.0491%" height="15" fill="rgb(219,66,54)" fg:x="18498" fg:w="30"/><text x="30.4943%" y="671.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (29 samples, 0.05%)</title><rect x="30.2459%" y="645" width="0.0474%" height="15" fill="rgb(222,205,4)" fg:x="18499" fg:w="29"/><text x="30.4959%" y="655.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="30.2966%" y="629" width="0.0180%" height="15" fill="rgb(227,213,46)" fg:x="18530" fg:w="11"/><text x="30.5466%" y="639.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (10 samples, 0.02%)</title><rect x="30.2982%" y="613" width="0.0164%" height="15" fill="rgb(250,145,42)" fg:x="18531" fg:w="10"/><text x="30.5482%" y="623.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (10 samples, 0.02%)</title><rect x="30.2982%" y="597" width="0.0164%" height="15" fill="rgb(219,15,2)" fg:x="18531" fg:w="10"/><text x="30.5482%" y="607.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::index (8 samples, 0.01%)</title><rect x="30.3342%" y="517" width="0.0131%" height="15" fill="rgb(231,181,52)" fg:x="18553" fg:w="8"/><text x="30.5842%" y="527.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (13 samples, 0.02%)</title><rect x="30.3277%" y="565" width="0.0213%" height="15" fill="rgb(235,1,42)" fg:x="18549" fg:w="13"/><text x="30.5777%" y="575.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (10 samples, 0.02%)</title><rect x="30.3326%" y="549" width="0.0164%" height="15" fill="rgb(249,88,27)" fg:x="18552" fg:w="10"/><text x="30.5826%" y="559.50"></text></g><g><title>sk-gen`jaq_core::path::run (10 samples, 0.02%)</title><rect x="30.3326%" y="533" width="0.0164%" height="15" fill="rgb(235,145,16)" fg:x="18552" fg:w="10"/><text x="30.5826%" y="543.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (88 samples, 0.14%)</title><rect x="30.2099%" y="821" width="0.1439%" height="15" fill="rgb(237,114,19)" fg:x="18477" fg:w="88"/><text x="30.4599%" y="831.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (87 samples, 0.14%)</title><rect x="30.2116%" y="805" width="0.1422%" height="15" fill="rgb(238,51,50)" fg:x="18478" fg:w="87"/><text x="30.4616%" y="815.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (87 samples, 0.14%)</title><rect x="30.2116%" y="789" width="0.1422%" height="15" fill="rgb(205,194,25)" fg:x="18478" fg:w="87"/><text x="30.4616%" y="799.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (82 samples, 0.13%)</title><rect x="30.2197%" y="773" width="0.1341%" height="15" fill="rgb(215,203,17)" fg:x="18483" fg:w="82"/><text x="30.4697%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (82 samples, 0.13%)</title><rect x="30.2197%" y="757" width="0.1341%" height="15" fill="rgb(233,112,49)" fg:x="18483" fg:w="82"/><text x="30.4697%" y="767.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.13%)</title><rect x="30.2246%" y="741" width="0.1292%" height="15" fill="rgb(241,130,26)" fg:x="18486" fg:w="79"/><text x="30.4746%" y="751.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (70 samples, 0.11%)</title><rect x="30.2394%" y="725" width="0.1145%" height="15" fill="rgb(252,223,19)" fg:x="18495" fg:w="70"/><text x="30.4894%" y="735.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (70 samples, 0.11%)</title><rect x="30.2394%" y="709" width="0.1145%" height="15" fill="rgb(211,95,25)" fg:x="18495" fg:w="70"/><text x="30.4894%" y="719.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (68 samples, 0.11%)</title><rect x="30.2426%" y="693" width="0.1112%" height="15" fill="rgb(251,182,27)" fg:x="18497" fg:w="68"/><text x="30.4926%" y="703.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (37 samples, 0.06%)</title><rect x="30.2933%" y="677" width="0.0605%" height="15" fill="rgb(238,24,4)" fg:x="18528" fg:w="37"/><text x="30.5433%" y="687.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (36 samples, 0.06%)</title><rect x="30.2950%" y="661" width="0.0589%" height="15" fill="rgb(224,220,25)" fg:x="18529" fg:w="36"/><text x="30.5450%" y="671.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (36 samples, 0.06%)</title><rect x="30.2950%" y="645" width="0.0589%" height="15" fill="rgb(239,133,26)" fg:x="18529" fg:w="36"/><text x="30.5450%" y="655.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (22 samples, 0.04%)</title><rect x="30.3178%" y="629" width="0.0360%" height="15" fill="rgb(211,94,48)" fg:x="18543" fg:w="22"/><text x="30.5678%" y="639.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (22 samples, 0.04%)</title><rect x="30.3178%" y="613" width="0.0360%" height="15" fill="rgb(239,87,6)" fg:x="18543" fg:w="22"/><text x="30.5678%" y="623.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (17 samples, 0.03%)</title><rect x="30.3260%" y="597" width="0.0278%" height="15" fill="rgb(227,62,0)" fg:x="18548" fg:w="17"/><text x="30.5760%" y="607.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (16 samples, 0.03%)</title><rect x="30.3277%" y="581" width="0.0262%" height="15" fill="rgb(211,226,4)" fg:x="18549" fg:w="16"/><text x="30.5777%" y="591.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (11 samples, 0.02%)</title><rect x="30.3538%" y="645" width="0.0180%" height="15" fill="rgb(253,38,52)" fg:x="18565" fg:w="11"/><text x="30.6038%" y="655.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="30.3538%" y="693" width="0.0294%" height="15" fill="rgb(229,126,40)" fg:x="18565" fg:w="18"/><text x="30.6038%" y="703.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (18 samples, 0.03%)</title><rect x="30.3538%" y="677" width="0.0294%" height="15" fill="rgb(229,165,44)" fg:x="18565" fg:w="18"/><text x="30.6038%" y="687.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (18 samples, 0.03%)</title><rect x="30.3538%" y="661" width="0.0294%" height="15" fill="rgb(247,95,47)" fg:x="18565" fg:w="18"/><text x="30.6038%" y="671.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (7 samples, 0.01%)</title><rect x="30.3718%" y="645" width="0.0114%" height="15" fill="rgb(216,140,30)" fg:x="18576" fg:w="7"/><text x="30.6218%" y="655.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (108 samples, 0.18%)</title><rect x="30.2099%" y="853" width="0.1766%" height="15" fill="rgb(246,214,8)" fg:x="18477" fg:w="108"/><text x="30.4599%" y="863.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (108 samples, 0.18%)</title><rect x="30.2099%" y="837" width="0.1766%" height="15" fill="rgb(227,224,15)" fg:x="18477" fg:w="108"/><text x="30.4599%" y="847.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (20 samples, 0.03%)</title><rect x="30.3538%" y="821" width="0.0327%" height="15" fill="rgb(233,175,4)" fg:x="18565" fg:w="20"/><text x="30.6038%" y="831.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (20 samples, 0.03%)</title><rect x="30.3538%" y="805" width="0.0327%" height="15" fill="rgb(221,66,45)" fg:x="18565" fg:w="20"/><text x="30.6038%" y="815.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (20 samples, 0.03%)</title><rect x="30.3538%" y="789" width="0.0327%" height="15" fill="rgb(221,178,18)" fg:x="18565" fg:w="20"/><text x="30.6038%" y="799.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (20 samples, 0.03%)</title><rect x="30.3538%" y="773" width="0.0327%" height="15" fill="rgb(213,81,29)" fg:x="18565" fg:w="20"/><text x="30.6038%" y="783.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (20 samples, 0.03%)</title><rect x="30.3538%" y="757" width="0.0327%" height="15" fill="rgb(220,89,49)" fg:x="18565" fg:w="20"/><text x="30.6038%" y="767.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (20 samples, 0.03%)</title><rect x="30.3538%" y="741" width="0.0327%" height="15" fill="rgb(227,60,33)" fg:x="18565" fg:w="20"/><text x="30.6038%" y="751.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (20 samples, 0.03%)</title><rect x="30.3538%" y="725" width="0.0327%" height="15" fill="rgb(205,113,12)" fg:x="18565" fg:w="20"/><text x="30.6038%" y="735.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (20 samples, 0.03%)</title><rect x="30.3538%" y="709" width="0.0327%" height="15" fill="rgb(211,32,1)" fg:x="18565" fg:w="20"/><text x="30.6038%" y="719.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (176 samples, 0.29%)</title><rect x="30.1004%" y="933" width="0.2878%" height="15" fill="rgb(246,2,12)" fg:x="18410" fg:w="176"/><text x="30.3504%" y="943.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (176 samples, 0.29%)</title><rect x="30.1004%" y="917" width="0.2878%" height="15" fill="rgb(243,37,27)" fg:x="18410" fg:w="176"/><text x="30.3504%" y="927.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (113 samples, 0.18%)</title><rect x="30.2034%" y="901" width="0.1848%" height="15" fill="rgb(248,211,31)" fg:x="18473" fg:w="113"/><text x="30.4534%" y="911.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (112 samples, 0.18%)</title><rect x="30.2050%" y="885" width="0.1831%" height="15" fill="rgb(242,146,47)" fg:x="18474" fg:w="112"/><text x="30.4550%" y="895.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (112 samples, 0.18%)</title><rect x="30.2050%" y="869" width="0.1831%" height="15" fill="rgb(206,70,20)" fg:x="18474" fg:w="112"/><text x="30.4550%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,817 samples, 2.97%)</title><rect x="27.4190%" y="1141" width="2.9708%" height="15" fill="rgb(215,10,51)" fg:x="16770" fg:w="1817"/><text x="27.6690%" y="1151.50">sk-..</text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (1,688 samples, 2.76%)</title><rect x="27.6299%" y="1125" width="2.7599%" height="15" fill="rgb(243,178,53)" fg:x="16899" fg:w="1688"/><text x="27.8799%" y="1135.50">sk..</text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (1,686 samples, 2.76%)</title><rect x="27.6332%" y="1109" width="2.7566%" height="15" fill="rgb(233,221,20)" fg:x="16901" fg:w="1686"/><text x="27.8832%" y="1119.50">sk..</text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (532 samples, 0.87%)</title><rect x="29.5200%" y="1093" width="0.8698%" height="15" fill="rgb(218,95,35)" fg:x="18055" fg:w="532"/><text x="29.7700%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (222 samples, 0.36%)</title><rect x="30.0268%" y="1077" width="0.3630%" height="15" fill="rgb(229,13,5)" fg:x="18365" fg:w="222"/><text x="30.2768%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (221 samples, 0.36%)</title><rect x="30.0284%" y="1061" width="0.3613%" height="15" fill="rgb(252,164,30)" fg:x="18366" fg:w="221"/><text x="30.2784%" y="1071.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (221 samples, 0.36%)</title><rect x="30.0284%" y="1045" width="0.3613%" height="15" fill="rgb(232,68,36)" fg:x="18366" fg:w="221"/><text x="30.2784%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (180 samples, 0.29%)</title><rect x="30.0955%" y="1029" width="0.2943%" height="15" fill="rgb(219,59,54)" fg:x="18407" fg:w="180"/><text x="30.3455%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (177 samples, 0.29%)</title><rect x="30.1004%" y="1013" width="0.2894%" height="15" fill="rgb(250,92,33)" fg:x="18410" fg:w="177"/><text x="30.3504%" y="1023.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (177 samples, 0.29%)</title><rect x="30.1004%" y="997" width="0.2894%" height="15" fill="rgb(229,162,54)" fg:x="18410" fg:w="177"/><text x="30.3504%" y="1007.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (177 samples, 0.29%)</title><rect x="30.1004%" y="981" width="0.2894%" height="15" fill="rgb(244,114,52)" fg:x="18410" fg:w="177"/><text x="30.3504%" y="991.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (177 samples, 0.29%)</title><rect x="30.1004%" y="965" width="0.2894%" height="15" fill="rgb(212,211,43)" fg:x="18410" fg:w="177"/><text x="30.3504%" y="975.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (177 samples, 0.29%)</title><rect x="30.1004%" y="949" width="0.2894%" height="15" fill="rgb(226,147,8)" fg:x="18410" fg:w="177"/><text x="30.3504%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,826 samples, 2.99%)</title><rect x="27.4157%" y="1157" width="2.9855%" height="15" fill="rgb(226,23,13)" fg:x="16768" fg:w="1826"/><text x="27.6657%" y="1167.50">sk-..</text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (1,863 samples, 3.05%)</title><rect x="27.3569%" y="1189" width="3.0460%" height="15" fill="rgb(240,63,4)" fg:x="16732" fg:w="1863"/><text x="27.6069%" y="1199.50">sk-..</text></g><g><title>sk-gen`core::iter::adapters::try_process (1,827 samples, 2.99%)</title><rect x="27.4157%" y="1173" width="2.9871%" height="15" fill="rgb(221,1,32)" fg:x="16768" fg:w="1827"/><text x="27.6657%" y="1183.50">sk-..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.02%)</title><rect x="30.5909%" y="933" width="0.0164%" height="15" fill="rgb(242,117,10)" fg:x="18710" fg:w="10"/><text x="30.8409%" y="943.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 0.03%)</title><rect x="30.5811%" y="949" width="0.0278%" height="15" fill="rgb(249,172,44)" fg:x="18704" fg:w="17"/><text x="30.8311%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="30.6334%" y="885" width="0.0114%" height="15" fill="rgb(244,46,45)" fg:x="18736" fg:w="7"/><text x="30.8834%" y="895.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="30.6726%" y="821" width="0.0147%" height="15" fill="rgb(206,43,17)" fg:x="18760" fg:w="9"/><text x="30.9226%" y="831.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (14 samples, 0.02%)</title><rect x="30.6710%" y="837" width="0.0229%" height="15" fill="rgb(239,218,39)" fg:x="18759" fg:w="14"/><text x="30.9210%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="30.6988%" y="821" width="0.0180%" height="15" fill="rgb(208,169,54)" fg:x="18776" fg:w="11"/><text x="30.9488%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.01%)</title><rect x="30.7021%" y="805" width="0.0147%" height="15" fill="rgb(247,25,42)" fg:x="18778" fg:w="9"/><text x="30.9521%" y="815.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (14 samples, 0.02%)</title><rect x="30.6955%" y="837" width="0.0229%" height="15" fill="rgb(226,23,31)" fg:x="18774" fg:w="14"/><text x="30.9455%" y="847.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.06%)</title><rect x="30.6612%" y="853" width="0.0621%" height="15" fill="rgb(247,16,28)" fg:x="18753" fg:w="38"/><text x="30.9112%" y="863.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (49 samples, 0.08%)</title><rect x="30.6530%" y="869" width="0.0801%" height="15" fill="rgb(231,147,38)" fg:x="18748" fg:w="49"/><text x="30.9030%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="30.7528%" y="821" width="0.0114%" height="15" fill="rgb(253,81,48)" fg:x="18809" fg:w="7"/><text x="31.0028%" y="831.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.02%)</title><rect x="30.7806%" y="805" width="0.0196%" height="15" fill="rgb(249,222,43)" fg:x="18826" fg:w="12"/><text x="31.0306%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="30.8067%" y="789" width="0.0164%" height="15" fill="rgb(221,3,27)" fg:x="18842" fg:w="10"/><text x="31.0567%" y="799.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 samples, 0.02%)</title><rect x="30.8018%" y="805" width="0.0245%" height="15" fill="rgb(228,180,5)" fg:x="18839" fg:w="15"/><text x="31.0518%" y="815.50"></text></g><g><title>sk-gen`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (9 samples, 0.01%)</title><rect x="30.8263%" y="805" width="0.0147%" height="15" fill="rgb(227,131,42)" fg:x="18854" fg:w="9"/><text x="31.0763%" y="815.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48 samples, 0.08%)</title><rect x="30.7658%" y="821" width="0.0785%" height="15" fill="rgb(212,3,39)" fg:x="18817" fg:w="48"/><text x="31.0158%" y="831.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (64 samples, 0.10%)</title><rect x="30.7478%" y="837" width="0.1046%" height="15" fill="rgb(226,45,5)" fg:x="18806" fg:w="64"/><text x="30.9978%" y="847.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (72 samples, 0.12%)</title><rect x="30.7364%" y="853" width="0.1177%" height="15" fill="rgb(215,167,45)" fg:x="18799" fg:w="72"/><text x="30.9864%" y="863.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (129 samples, 0.21%)</title><rect x="30.6448%" y="885" width="0.2109%" height="15" fill="rgb(250,218,53)" fg:x="18743" fg:w="129"/><text x="30.8948%" y="895.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (75 samples, 0.12%)</title><rect x="30.7331%" y="869" width="0.1226%" height="15" fill="rgb(207,140,0)" fg:x="18797" fg:w="75"/><text x="30.9831%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="30.8574%" y="885" width="0.0196%" height="15" fill="rgb(238,133,51)" fg:x="18873" fg:w="12"/><text x="31.1074%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="30.8656%" y="869" width="0.0114%" height="15" fill="rgb(218,203,53)" fg:x="18878" fg:w="7"/><text x="31.1156%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="30.8656%" y="853" width="0.0114%" height="15" fill="rgb(226,184,25)" fg:x="18878" fg:w="7"/><text x="31.1156%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="30.8819%" y="869" width="0.0114%" height="15" fill="rgb(231,121,21)" fg:x="18888" fg:w="7"/><text x="31.1319%" y="879.50"></text></g><g><title>sk-gen`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (18 samples, 0.03%)</title><rect x="30.8770%" y="885" width="0.0294%" height="15" fill="rgb(251,14,34)" fg:x="18885" fg:w="18"/><text x="31.1270%" y="895.50"></text></g><g><title>sk-gen`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (8 samples, 0.01%)</title><rect x="30.8934%" y="869" width="0.0131%" height="15" fill="rgb(249,193,11)" fg:x="18895" fg:w="8"/><text x="31.1434%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (171 samples, 0.28%)</title><rect x="30.6318%" y="901" width="0.2796%" height="15" fill="rgb(220,172,37)" fg:x="18735" fg:w="171"/><text x="30.8818%" y="911.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (217 samples, 0.35%)</title><rect x="30.5647%" y="965" width="0.3548%" height="15" fill="rgb(231,229,43)" fg:x="18694" fg:w="217"/><text x="30.8147%" y="975.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (189 samples, 0.31%)</title><rect x="30.6105%" y="949" width="0.3090%" height="15" fill="rgb(250,161,5)" fg:x="18722" fg:w="189"/><text x="30.8605%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (188 samples, 0.31%)</title><rect x="30.6121%" y="933" width="0.3074%" height="15" fill="rgb(218,225,18)" fg:x="18723" fg:w="188"/><text x="30.8621%" y="943.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (185 samples, 0.30%)</title><rect x="30.6170%" y="917" width="0.3025%" height="15" fill="rgb(245,45,42)" fg:x="18726" fg:w="185"/><text x="30.8670%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="30.9342%" y="949" width="0.0180%" height="15" fill="rgb(211,115,1)" fg:x="18920" fg:w="11"/><text x="31.1842%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="30.9359%" y="933" width="0.0164%" height="15" fill="rgb(248,133,52)" fg:x="18921" fg:w="10"/><text x="31.1859%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (21 samples, 0.03%)</title><rect x="30.9212%" y="965" width="0.0343%" height="15" fill="rgb(238,100,21)" fg:x="18912" fg:w="21"/><text x="31.1712%" y="975.50"></text></g><g><title>sk-gen`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (9 samples, 0.01%)</title><rect x="30.9555%" y="965" width="0.0147%" height="15" fill="rgb(247,144,11)" fg:x="18933" fg:w="9"/><text x="31.2055%" y="975.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (253 samples, 0.41%)</title><rect x="30.5582%" y="981" width="0.4137%" height="15" fill="rgb(206,164,16)" fg:x="18690" fg:w="253"/><text x="30.8082%" y="991.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (271 samples, 0.44%)</title><rect x="30.5435%" y="997" width="0.4431%" height="15" fill="rgb(222,34,3)" fg:x="18681" fg:w="271"/><text x="30.7935%" y="1007.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (279 samples, 0.46%)</title><rect x="30.5320%" y="1013" width="0.4562%" height="15" fill="rgb(248,82,4)" fg:x="18674" fg:w="279"/><text x="30.7820%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.03%)</title><rect x="30.9996%" y="997" width="0.0278%" height="15" fill="rgb(228,81,46)" fg:x="18960" fg:w="17"/><text x="31.2496%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="31.0062%" y="981" width="0.0213%" height="15" fill="rgb(227,67,47)" fg:x="18964" fg:w="13"/><text x="31.2562%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (27 samples, 0.04%)</title><rect x="30.9882%" y="1013" width="0.0441%" height="15" fill="rgb(215,93,53)" fg:x="18953" fg:w="27"/><text x="31.2382%" y="1023.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (328 samples, 0.54%)</title><rect x="30.5075%" y="1029" width="0.5363%" height="15" fill="rgb(248,194,39)" fg:x="18659" fg:w="328"/><text x="30.7575%" y="1039.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (356 samples, 0.58%)</title><rect x="30.4764%" y="1045" width="0.5821%" height="15" fill="rgb(215,5,19)" fg:x="18640" fg:w="356"/><text x="30.7264%" y="1055.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (381 samples, 0.62%)</title><rect x="30.4486%" y="1061" width="0.6229%" height="15" fill="rgb(226,215,51)" fg:x="18623" fg:w="381"/><text x="30.6986%" y="1071.50"></text></g><g><title>sk-gen`&lt;serde_json::number::Number as core::fmt::Display&gt;::fmt (8 samples, 0.01%)</title><rect x="31.0585%" y="1045" width="0.0131%" height="15" fill="rgb(225,56,26)" fg:x="18996" fg:w="8"/><text x="31.3085%" y="1055.50"></text></g><g><title>sk-gen`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (10 samples, 0.02%)</title><rect x="31.0798%" y="1061" width="0.0164%" height="15" fill="rgb(222,75,29)" fg:x="19009" fg:w="10"/><text x="31.3298%" y="1071.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (407 samples, 0.67%)</title><rect x="30.4323%" y="1077" width="0.6654%" height="15" fill="rgb(236,139,6)" fg:x="18613" fg:w="407"/><text x="30.6823%" y="1087.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (424 samples, 0.69%)</title><rect x="30.4176%" y="1109" width="0.6932%" height="15" fill="rgb(223,137,36)" fg:x="18604" fg:w="424"/><text x="30.6676%" y="1119.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (421 samples, 0.69%)</title><rect x="30.4225%" y="1093" width="0.6883%" height="15" fill="rgb(226,99,2)" fg:x="18607" fg:w="421"/><text x="30.6725%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="31.1108%" y="1109" width="0.0131%" height="15" fill="rgb(206,133,23)" fg:x="19028" fg:w="8"/><text x="31.3608%" y="1119.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (442 samples, 0.72%)</title><rect x="30.4127%" y="1125" width="0.7227%" height="15" fill="rgb(243,173,15)" fg:x="18601" fg:w="442"/><text x="30.6627%" y="1135.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (449 samples, 0.73%)</title><rect x="30.4045%" y="1141" width="0.7341%" height="15" fill="rgb(228,69,28)" fg:x="18596" fg:w="449"/><text x="30.6545%" y="1151.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (453 samples, 0.74%)</title><rect x="30.4029%" y="1189" width="0.7407%" height="15" fill="rgb(212,51,22)" fg:x="18595" fg:w="453"/><text x="30.6529%" y="1199.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (453 samples, 0.74%)</title><rect x="30.4029%" y="1173" width="0.7407%" height="15" fill="rgb(227,113,0)" fg:x="18595" fg:w="453"/><text x="30.6529%" y="1183.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (452 samples, 0.74%)</title><rect x="30.4045%" y="1157" width="0.7390%" height="15" fill="rgb(252,84,27)" fg:x="18596" fg:w="452"/><text x="30.6545%" y="1167.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (21 samples, 0.03%)</title><rect x="31.1435%" y="1189" width="0.0343%" height="15" fill="rgb(223,145,39)" fg:x="19048" fg:w="21"/><text x="31.3935%" y="1199.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (18 samples, 0.03%)</title><rect x="31.1828%" y="1189" width="0.0294%" height="15" fill="rgb(239,219,30)" fg:x="19072" fg:w="18"/><text x="31.4328%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36 samples, 0.06%)</title><rect x="31.2514%" y="1173" width="0.0589%" height="15" fill="rgb(224,196,39)" fg:x="19114" fg:w="36"/><text x="31.5014%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (64 samples, 0.10%)</title><rect x="31.3152%" y="1173" width="0.1046%" height="15" fill="rgb(205,35,43)" fg:x="19153" fg:w="64"/><text x="31.5652%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.08%)</title><rect x="31.3414%" y="1157" width="0.0785%" height="15" fill="rgb(228,201,21)" fg:x="19169" fg:w="48"/><text x="31.5914%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.02%)</title><rect x="31.4035%" y="1141" width="0.0164%" height="15" fill="rgb(237,118,16)" fg:x="19207" fg:w="10"/><text x="31.6535%" y="1151.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (20 samples, 0.03%)</title><rect x="31.4247%" y="1173" width="0.0327%" height="15" fill="rgb(241,17,19)" fg:x="19220" fg:w="20"/><text x="31.6747%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::Filter&lt;jaq_core::filter::Native&lt;jaq_json::Val&gt;&gt;&gt; (360 samples, 0.59%)</title><rect x="31.2285%" y="1189" width="0.5886%" height="15" fill="rgb(214,10,25)" fg:x="19100" fg:w="360"/><text x="31.4785%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::compile::Term&gt; (219 samples, 0.36%)</title><rect x="31.4591%" y="1173" width="0.3581%" height="15" fill="rgb(238,37,29)" fg:x="19241" fg:w="219"/><text x="31.7091%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::compile::Term&gt; (23 samples, 0.04%)</title><rect x="31.8171%" y="1189" width="0.0376%" height="15" fill="rgb(253,83,25)" fg:x="19460" fg:w="23"/><text x="32.0671%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (18 samples, 0.03%)</title><rect x="31.8580%" y="1189" width="0.0294%" height="15" fill="rgb(234,192,12)" fg:x="19485" fg:w="18"/><text x="32.1080%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.03%)</title><rect x="32.3583%" y="1173" width="0.0327%" height="15" fill="rgb(241,216,45)" fg:x="19791" fg:w="20"/><text x="32.6083%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="32.4025%" y="1173" width="0.0180%" height="15" fill="rgb(242,22,33)" fg:x="19818" fg:w="11"/><text x="32.6525%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_free (22 samples, 0.04%)</title><rect x="32.4499%" y="1157" width="0.0360%" height="15" fill="rgb(231,105,49)" fg:x="19847" fg:w="22"/><text x="32.6999%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="32.4859%" y="1157" width="0.0147%" height="15" fill="rgb(218,204,15)" fg:x="19869" fg:w="9"/><text x="32.7359%" y="1167.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (17 samples, 0.03%)</title><rect x="32.5251%" y="1157" width="0.0278%" height="15" fill="rgb(235,138,41)" fg:x="19893" fg:w="17"/><text x="32.7751%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_free (48 samples, 0.08%)</title><rect x="32.8325%" y="1141" width="0.0785%" height="15" fill="rgb(246,0,9)" fg:x="20081" fg:w="48"/><text x="33.0825%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="32.9110%" y="1141" width="0.0180%" height="15" fill="rgb(210,74,4)" fg:x="20129" fg:w="11"/><text x="33.1610%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (64 samples, 0.10%)</title><rect x="32.9289%" y="1141" width="0.1046%" height="15" fill="rgb(250,60,41)" fg:x="20140" fg:w="64"/><text x="33.1789%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="33.0532%" y="1109" width="0.0147%" height="15" fill="rgb(220,115,12)" fg:x="20216" fg:w="9"/><text x="33.3032%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.04%)</title><rect x="33.0401%" y="1141" width="0.0409%" height="15" fill="rgb(237,100,13)" fg:x="20208" fg:w="25"/><text x="33.2901%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.03%)</title><rect x="33.0499%" y="1125" width="0.0311%" height="15" fill="rgb(213,55,26)" fg:x="20214" fg:w="19"/><text x="33.2999%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="33.0679%" y="1109" width="0.0131%" height="15" fill="rgb(216,17,4)" fg:x="20225" fg:w="8"/><text x="33.3179%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="33.0810%" y="1141" width="0.0164%" height="15" fill="rgb(220,153,47)" fg:x="20233" fg:w="10"/><text x="33.3310%" y="1151.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (720 samples, 1.18%)</title><rect x="33.0990%" y="1141" width="1.1772%" height="15" fill="rgb(215,131,9)" fg:x="20244" fg:w="720"/><text x="33.3490%" y="1151.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (23 samples, 0.04%)</title><rect x="34.2762%" y="1141" width="0.0376%" height="15" fill="rgb(233,46,42)" fg:x="20964" fg:w="23"/><text x="34.5262%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="34.3154%" y="1141" width="0.0213%" height="15" fill="rgb(226,86,7)" fg:x="20988" fg:w="13"/><text x="34.5654%" y="1151.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (15 samples, 0.02%)</title><rect x="34.3367%" y="1141" width="0.0245%" height="15" fill="rgb(239,226,21)" fg:x="21001" fg:w="15"/><text x="34.5867%" y="1151.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (69 samples, 0.11%)</title><rect x="34.3628%" y="1141" width="0.1128%" height="15" fill="rgb(244,137,22)" fg:x="21017" fg:w="69"/><text x="34.6128%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (16 samples, 0.03%)</title><rect x="34.5133%" y="1125" width="0.0262%" height="15" fill="rgb(211,139,35)" fg:x="21109" fg:w="16"/><text x="34.7633%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (48 samples, 0.08%)</title><rect x="34.4806%" y="1141" width="0.0785%" height="15" fill="rgb(214,62,50)" fg:x="21089" fg:w="48"/><text x="34.7306%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (11 samples, 0.02%)</title><rect x="34.5411%" y="1125" width="0.0180%" height="15" fill="rgb(212,113,44)" fg:x="21126" fg:w="11"/><text x="34.7911%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (43 samples, 0.07%)</title><rect x="34.5590%" y="1141" width="0.0703%" height="15" fill="rgb(226,150,43)" fg:x="21137" fg:w="43"/><text x="34.8090%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (21 samples, 0.03%)</title><rect x="34.5950%" y="1125" width="0.0343%" height="15" fill="rgb(250,71,37)" fg:x="21159" fg:w="21"/><text x="34.8450%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_default (49 samples, 0.08%)</title><rect x="34.6293%" y="1141" width="0.0801%" height="15" fill="rgb(219,76,19)" fg:x="21180" fg:w="49"/><text x="34.8793%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (11 samples, 0.02%)</title><rect x="34.6915%" y="1125" width="0.0180%" height="15" fill="rgb(250,39,11)" fg:x="21218" fg:w="11"/><text x="34.9415%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (9 samples, 0.01%)</title><rect x="34.7095%" y="1141" width="0.0147%" height="15" fill="rgb(230,64,31)" fg:x="21229" fg:w="9"/><text x="34.9595%" y="1151.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (31 samples, 0.05%)</title><rect x="34.7274%" y="1141" width="0.0507%" height="15" fill="rgb(208,222,23)" fg:x="21240" fg:w="31"/><text x="34.9774%" y="1151.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (17 samples, 0.03%)</title><rect x="34.7503%" y="1125" width="0.0278%" height="15" fill="rgb(227,125,18)" fg:x="21254" fg:w="17"/><text x="35.0003%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (13 samples, 0.02%)</title><rect x="34.7569%" y="1109" width="0.0213%" height="15" fill="rgb(234,210,9)" fg:x="21258" fg:w="13"/><text x="35.0069%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_free (13 samples, 0.02%)</title><rect x="35.0708%" y="1125" width="0.0213%" height="15" fill="rgb(217,127,24)" fg:x="21450" fg:w="13"/><text x="35.3208%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="35.0921%" y="1125" width="0.0164%" height="15" fill="rgb(239,141,48)" fg:x="21463" fg:w="10"/><text x="35.3421%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (33 samples, 0.05%)</title><rect x="35.1084%" y="1125" width="0.0540%" height="15" fill="rgb(227,109,8)" fg:x="21473" fg:w="33"/><text x="35.3584%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.02%)</title><rect x="35.1934%" y="1093" width="0.0164%" height="15" fill="rgb(235,184,23)" fg:x="21525" fg:w="10"/><text x="35.4434%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.04%)</title><rect x="35.1754%" y="1125" width="0.0441%" height="15" fill="rgb(227,226,48)" fg:x="21514" fg:w="27"/><text x="35.4254%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.03%)</title><rect x="35.1869%" y="1109" width="0.0327%" height="15" fill="rgb(206,150,11)" fg:x="21521" fg:w="20"/><text x="35.4369%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (75 samples, 0.12%)</title><rect x="35.2196%" y="1125" width="0.1226%" height="15" fill="rgb(254,2,33)" fg:x="21541" fg:w="75"/><text x="35.4696%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (75 samples, 0.12%)</title><rect x="35.2196%" y="1109" width="0.1226%" height="15" fill="rgb(243,160,20)" fg:x="21541" fg:w="75"/><text x="35.4696%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`madvise (75 samples, 0.12%)</title><rect x="35.2196%" y="1093" width="0.1226%" height="15" fill="rgb(218,208,30)" fg:x="21541" fg:w="75"/><text x="35.4696%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (93 samples, 0.15%)</title><rect x="35.3455%" y="1125" width="0.1521%" height="15" fill="rgb(224,120,49)" fg:x="21618" fg:w="93"/><text x="35.5955%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.01%)</title><rect x="35.4975%" y="1125" width="0.0114%" height="15" fill="rgb(246,12,2)" fg:x="21711" fg:w="7"/><text x="35.7475%" y="1135.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (7 samples, 0.01%)</title><rect x="35.5417%" y="1125" width="0.0114%" height="15" fill="rgb(236,117,3)" fg:x="21738" fg:w="7"/><text x="35.7917%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (9 samples, 0.01%)</title><rect x="35.6251%" y="1077" width="0.0147%" height="15" fill="rgb(216,128,52)" fg:x="21789" fg:w="9"/><text x="35.8751%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.01%)</title><rect x="35.6463%" y="1077" width="0.0131%" height="15" fill="rgb(246,145,19)" fg:x="21802" fg:w="8"/><text x="35.8963%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="35.6872%" y="1029" width="0.0147%" height="15" fill="rgb(222,11,46)" fg:x="21827" fg:w="9"/><text x="35.9372%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.03%)</title><rect x="35.6741%" y="1061" width="0.0294%" height="15" fill="rgb(245,82,36)" fg:x="21819" fg:w="18"/><text x="35.9241%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.02%)</title><rect x="35.6790%" y="1045" width="0.0245%" height="15" fill="rgb(250,73,51)" fg:x="21822" fg:w="15"/><text x="35.9290%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (67 samples, 0.11%)</title><rect x="35.6054%" y="1093" width="0.1095%" height="15" fill="rgb(221,189,23)" fg:x="21777" fg:w="67"/><text x="35.8554%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_shrink_in_place (33 samples, 0.05%)</title><rect x="35.6610%" y="1077" width="0.0540%" height="15" fill="rgb(210,33,7)" fg:x="21811" fg:w="33"/><text x="35.9110%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (81 samples, 0.13%)</title><rect x="35.5940%" y="1109" width="0.1324%" height="15" fill="rgb(210,107,22)" fg:x="21770" fg:w="81"/><text x="35.8440%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (33 samples, 0.05%)</title><rect x="35.7788%" y="1077" width="0.0540%" height="15" fill="rgb(222,116,37)" fg:x="21883" fg:w="33"/><text x="36.0288%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="35.9308%" y="1061" width="0.0131%" height="15" fill="rgb(254,17,48)" fg:x="21976" fg:w="8"/><text x="36.1808%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.01%)</title><rect x="35.9439%" y="1061" width="0.0114%" height="15" fill="rgb(224,36,32)" fg:x="21984" fg:w="7"/><text x="36.1939%" y="1071.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (28 samples, 0.05%)</title><rect x="35.9553%" y="1061" width="0.0458%" height="15" fill="rgb(232,90,46)" fg:x="21991" fg:w="28"/><text x="36.2053%" y="1071.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (15 samples, 0.02%)</title><rect x="35.9766%" y="1045" width="0.0245%" height="15" fill="rgb(241,66,40)" fg:x="22004" fg:w="15"/><text x="36.2266%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (9 samples, 0.01%)</title><rect x="35.9864%" y="1029" width="0.0147%" height="15" fill="rgb(249,184,29)" fg:x="22010" fg:w="9"/><text x="36.2364%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (8 samples, 0.01%)</title><rect x="35.9880%" y="1013" width="0.0131%" height="15" fill="rgb(231,181,1)" fg:x="22011" fg:w="8"/><text x="36.2380%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (7 samples, 0.01%)</title><rect x="35.9897%" y="997" width="0.0114%" height="15" fill="rgb(224,94,2)" fg:x="22012" fg:w="7"/><text x="36.2397%" y="1007.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (14 samples, 0.02%)</title><rect x="36.0011%" y="1061" width="0.0229%" height="15" fill="rgb(229,170,15)" fg:x="22019" fg:w="14"/><text x="36.2511%" y="1071.50"></text></g><g><title>sk-gen`core::str::pattern::StrSearcher::new (8 samples, 0.01%)</title><rect x="36.0240%" y="1061" width="0.0131%" height="15" fill="rgb(240,127,35)" fg:x="22033" fg:w="8"/><text x="36.2740%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (29 samples, 0.05%)</title><rect x="36.0371%" y="1061" width="0.0474%" height="15" fill="rgb(248,196,34)" fg:x="22041" fg:w="29"/><text x="36.2871%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (23 samples, 0.04%)</title><rect x="36.0469%" y="1045" width="0.0376%" height="15" fill="rgb(236,137,7)" fg:x="22047" fg:w="23"/><text x="36.2969%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (7 samples, 0.01%)</title><rect x="36.0731%" y="1029" width="0.0114%" height="15" fill="rgb(235,127,16)" fg:x="22063" fg:w="7"/><text x="36.3231%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm_tr (9 samples, 0.01%)</title><rect x="36.0845%" y="1061" width="0.0147%" height="15" fill="rgb(250,192,54)" fg:x="22070" fg:w="9"/><text x="36.3345%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (8 samples, 0.01%)</title><rect x="36.0861%" y="1045" width="0.0131%" height="15" fill="rgb(218,98,20)" fg:x="22071" fg:w="8"/><text x="36.3361%" y="1055.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="36.1172%" y="1045" width="0.0131%" height="15" fill="rgb(230,176,47)" fg:x="22090" fg:w="8"/><text x="36.3672%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (237 samples, 0.39%)</title><rect x="35.7608%" y="1093" width="0.3875%" height="15" fill="rgb(244,2,33)" fg:x="21872" fg:w="237"/><text x="36.0108%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (181 samples, 0.30%)</title><rect x="35.8523%" y="1077" width="0.2959%" height="15" fill="rgb(231,100,17)" fg:x="21928" fg:w="181"/><text x="36.1023%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (30 samples, 0.05%)</title><rect x="36.0992%" y="1061" width="0.0491%" height="15" fill="rgb(245,23,12)" fg:x="22079" fg:w="30"/><text x="36.3492%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (8 samples, 0.01%)</title><rect x="36.1352%" y="1045" width="0.0131%" height="15" fill="rgb(249,55,22)" fg:x="22101" fg:w="8"/><text x="36.3852%" y="1055.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (249 samples, 0.41%)</title><rect x="35.7444%" y="1109" width="0.4071%" height="15" fill="rgb(207,134,9)" fg:x="21862" fg:w="249"/><text x="35.9944%" y="1119.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (365 samples, 0.60%)</title><rect x="35.5580%" y="1125" width="0.5968%" height="15" fill="rgb(218,134,0)" fg:x="21748" fg:w="365"/><text x="35.8080%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (28 samples, 0.05%)</title><rect x="36.1695%" y="1077" width="0.0458%" height="15" fill="rgb(213,212,33)" fg:x="22122" fg:w="28"/><text x="36.4195%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (26 samples, 0.04%)</title><rect x="36.1728%" y="1061" width="0.0425%" height="15" fill="rgb(252,106,18)" fg:x="22124" fg:w="26"/><text x="36.4228%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (29 samples, 0.05%)</title><rect x="36.1695%" y="1093" width="0.0474%" height="15" fill="rgb(208,126,42)" fg:x="22122" fg:w="29"/><text x="36.4195%" y="1103.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (31 samples, 0.05%)</title><rect x="36.1695%" y="1125" width="0.0507%" height="15" fill="rgb(246,175,29)" fg:x="22122" fg:w="31"/><text x="36.4195%" y="1135.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (31 samples, 0.05%)</title><rect x="36.1695%" y="1109" width="0.0507%" height="15" fill="rgb(215,13,50)" fg:x="22122" fg:w="31"/><text x="36.4195%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (8 samples, 0.01%)</title><rect x="36.2496%" y="1093" width="0.0131%" height="15" fill="rgb(216,172,15)" fg:x="22171" fg:w="8"/><text x="36.4996%" y="1103.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (27 samples, 0.04%)</title><rect x="36.2218%" y="1125" width="0.0441%" height="15" fill="rgb(212,103,13)" fg:x="22154" fg:w="27"/><text x="36.4718%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::path::Part&lt;T&gt;::map (13 samples, 0.02%)</title><rect x="36.2447%" y="1109" width="0.0213%" height="15" fill="rgb(231,171,36)" fg:x="22168" fg:w="13"/><text x="36.4947%" y="1119.50"></text></g><g><title>sk-gen`core::str::pattern::StrSearcher::new (17 samples, 0.03%)</title><rect x="36.2660%" y="1125" width="0.0278%" height="15" fill="rgb(250,123,20)" fg:x="22181" fg:w="17"/><text x="36.5160%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (29 samples, 0.05%)</title><rect x="36.3150%" y="1109" width="0.0474%" height="15" fill="rgb(212,53,50)" fg:x="22211" fg:w="29"/><text x="36.5650%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="36.3755%" y="1109" width="0.0131%" height="15" fill="rgb(243,54,12)" fg:x="22248" fg:w="8"/><text x="36.6255%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.01%)</title><rect x="36.4033%" y="1093" width="0.0114%" height="15" fill="rgb(234,101,34)" fg:x="22265" fg:w="7"/><text x="36.6533%" y="1103.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="36.4802%" y="1029" width="0.0131%" height="15" fill="rgb(254,67,22)" fg:x="22312" fg:w="8"/><text x="36.7302%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (24 samples, 0.04%)</title><rect x="36.4671%" y="1045" width="0.0392%" height="15" fill="rgb(250,35,47)" fg:x="22304" fg:w="24"/><text x="36.7171%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (34 samples, 0.06%)</title><rect x="36.4524%" y="1061" width="0.0556%" height="15" fill="rgb(226,126,38)" fg:x="22295" fg:w="34"/><text x="36.7024%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm_tr (59 samples, 0.10%)</title><rect x="36.4148%" y="1093" width="0.0965%" height="15" fill="rgb(216,138,53)" fg:x="22272" fg:w="59"/><text x="36.6648%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (54 samples, 0.09%)</title><rect x="36.4229%" y="1077" width="0.0883%" height="15" fill="rgb(246,199,43)" fg:x="22277" fg:w="54"/><text x="36.6729%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (104 samples, 0.17%)</title><rect x="36.3968%" y="1109" width="0.1700%" height="15" fill="rgb(232,125,11)" fg:x="22261" fg:w="104"/><text x="36.6468%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (34 samples, 0.06%)</title><rect x="36.5112%" y="1093" width="0.0556%" height="15" fill="rgb(218,219,45)" fg:x="22331" fg:w="34"/><text x="36.7612%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (9 samples, 0.01%)</title><rect x="36.5521%" y="1077" width="0.0147%" height="15" fill="rgb(216,102,54)" fg:x="22356" fg:w="9"/><text x="36.8021%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.02%)</title><rect x="36.5881%" y="1093" width="0.0196%" height="15" fill="rgb(250,228,7)" fg:x="22378" fg:w="12"/><text x="36.8381%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="36.6322%" y="1045" width="0.0147%" height="15" fill="rgb(226,125,25)" fg:x="22405" fg:w="9"/><text x="36.8822%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::MapVec&lt;K,V&gt;::pop (55 samples, 0.09%)</title><rect x="36.5668%" y="1109" width="0.0899%" height="15" fill="rgb(224,165,27)" fg:x="22365" fg:w="55"/><text x="36.8168%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (29 samples, 0.05%)</title><rect x="36.6093%" y="1093" width="0.0474%" height="15" fill="rgb(233,86,3)" fg:x="22391" fg:w="29"/><text x="36.8593%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (18 samples, 0.03%)</title><rect x="36.6273%" y="1077" width="0.0294%" height="15" fill="rgb(228,116,20)" fg:x="22402" fg:w="18"/><text x="36.8773%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (16 samples, 0.03%)</title><rect x="36.6306%" y="1061" width="0.0262%" height="15" fill="rgb(209,192,17)" fg:x="22404" fg:w="16"/><text x="36.8806%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::def_post (226 samples, 0.37%)</title><rect x="36.2938%" y="1125" width="0.3695%" height="15" fill="rgb(224,88,34)" fg:x="22198" fg:w="226"/><text x="36.5438%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.02%)</title><rect x="36.6780%" y="1109" width="0.0180%" height="15" fill="rgb(233,38,6)" fg:x="22433" fg:w="11"/><text x="36.9280%" y="1119.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="36.7598%" y="1093" width="0.0147%" height="15" fill="rgb(212,59,30)" fg:x="22483" fg:w="9"/><text x="37.0098%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (44 samples, 0.07%)</title><rect x="36.7843%" y="1093" width="0.0719%" height="15" fill="rgb(213,80,3)" fg:x="22498" fg:w="44"/><text x="37.0343%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (32 samples, 0.05%)</title><rect x="36.8039%" y="1077" width="0.0523%" height="15" fill="rgb(251,178,7)" fg:x="22510" fg:w="32"/><text x="37.0539%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (128 samples, 0.21%)</title><rect x="36.6633%" y="1125" width="0.2093%" height="15" fill="rgb(213,154,26)" fg:x="22424" fg:w="128"/><text x="36.9133%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (105 samples, 0.17%)</title><rect x="36.7009%" y="1109" width="0.1717%" height="15" fill="rgb(238,165,49)" fg:x="22447" fg:w="105"/><text x="36.9509%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (10 samples, 0.02%)</title><rect x="36.8562%" y="1093" width="0.0164%" height="15" fill="rgb(248,91,46)" fg:x="22542" fg:w="10"/><text x="37.1062%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.01%)</title><rect x="36.9069%" y="1077" width="0.0114%" height="15" fill="rgb(244,21,52)" fg:x="22573" fg:w="7"/><text x="37.1569%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (27 samples, 0.04%)</title><rect x="36.8955%" y="1093" width="0.0441%" height="15" fill="rgb(247,122,20)" fg:x="22566" fg:w="27"/><text x="37.1455%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (9 samples, 0.01%)</title><rect x="36.9249%" y="1077" width="0.0147%" height="15" fill="rgb(218,27,9)" fg:x="22584" fg:w="9"/><text x="37.1749%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm_tr (44 samples, 0.07%)</title><rect x="36.8726%" y="1125" width="0.0719%" height="15" fill="rgb(246,7,6)" fg:x="22552" fg:w="44"/><text x="37.1226%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (44 samples, 0.07%)</title><rect x="36.8726%" y="1109" width="0.0719%" height="15" fill="rgb(227,135,54)" fg:x="22552" fg:w="44"/><text x="37.1226%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.03%)</title><rect x="37.1799%" y="1109" width="0.0278%" height="15" fill="rgb(247,14,11)" fg:x="22740" fg:w="17"/><text x="37.4299%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="37.2077%" y="1109" width="0.0131%" height="15" fill="rgb(206,149,34)" fg:x="22757" fg:w="8"/><text x="37.4577%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (38 samples, 0.06%)</title><rect x="37.2274%" y="1109" width="0.0621%" height="15" fill="rgb(227,228,4)" fg:x="22769" fg:w="38"/><text x="37.4774%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="37.3582%" y="1045" width="0.0114%" height="15" fill="rgb(238,218,28)" fg:x="22849" fg:w="7"/><text x="37.6082%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_shrink_in_place (9 samples, 0.01%)</title><rect x="37.3582%" y="1061" width="0.0147%" height="15" fill="rgb(252,86,40)" fg:x="22849" fg:w="9"/><text x="37.6082%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (20 samples, 0.03%)</title><rect x="37.3418%" y="1077" width="0.0327%" height="15" fill="rgb(251,225,11)" fg:x="22839" fg:w="20"/><text x="37.5918%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (23 samples, 0.04%)</title><rect x="37.3402%" y="1093" width="0.0376%" height="15" fill="rgb(206,46,49)" fg:x="22838" fg:w="23"/><text x="37.5902%" y="1103.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (12 samples, 0.02%)</title><rect x="37.4595%" y="981" width="0.0196%" height="15" fill="rgb(245,128,24)" fg:x="22911" fg:w="12"/><text x="37.7095%" y="991.50"></text></g><g><title>sk-gen`jaq_core::path::Part&lt;T&gt;::map (10 samples, 0.02%)</title><rect x="37.4628%" y="965" width="0.0164%" height="15" fill="rgb(219,177,34)" fg:x="22913" fg:w="10"/><text x="37.7128%" y="975.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (9 samples, 0.01%)</title><rect x="37.4644%" y="949" width="0.0147%" height="15" fill="rgb(218,60,48)" fg:x="22914" fg:w="9"/><text x="37.7144%" y="959.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (22 samples, 0.04%)</title><rect x="37.4465%" y="1045" width="0.0360%" height="15" fill="rgb(221,11,5)" fg:x="22903" fg:w="22"/><text x="37.6965%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::obj_entry (17 samples, 0.03%)</title><rect x="37.4546%" y="1029" width="0.0278%" height="15" fill="rgb(220,148,13)" fg:x="22908" fg:w="17"/><text x="37.7046%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (17 samples, 0.03%)</title><rect x="37.4546%" y="1013" width="0.0278%" height="15" fill="rgb(210,16,3)" fg:x="22908" fg:w="17"/><text x="37.7046%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (14 samples, 0.02%)</title><rect x="37.4595%" y="997" width="0.0229%" height="15" fill="rgb(236,80,2)" fg:x="22911" fg:w="14"/><text x="37.7095%" y="1007.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="37.5086%" y="1029" width="0.0114%" height="15" fill="rgb(239,129,19)" fg:x="22941" fg:w="7"/><text x="37.7586%" y="1039.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (11 samples, 0.02%)</title><rect x="37.5200%" y="1029" width="0.0180%" height="15" fill="rgb(220,106,35)" fg:x="22948" fg:w="11"/><text x="37.7700%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::obj_entry (10 samples, 0.02%)</title><rect x="37.5217%" y="1013" width="0.0164%" height="15" fill="rgb(252,139,45)" fg:x="22949" fg:w="10"/><text x="37.7717%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (10 samples, 0.02%)</title><rect x="37.5217%" y="997" width="0.0164%" height="15" fill="rgb(229,8,36)" fg:x="22949" fg:w="10"/><text x="37.7717%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (9 samples, 0.01%)</title><rect x="37.5233%" y="981" width="0.0147%" height="15" fill="rgb(230,126,33)" fg:x="22950" fg:w="9"/><text x="37.7733%" y="991.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (7 samples, 0.01%)</title><rect x="37.5266%" y="965" width="0.0114%" height="15" fill="rgb(239,140,21)" fg:x="22952" fg:w="7"/><text x="37.7766%" y="975.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (107 samples, 0.17%)</title><rect x="37.3860%" y="1093" width="0.1749%" height="15" fill="rgb(254,104,9)" fg:x="22866" fg:w="107"/><text x="37.6360%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (94 samples, 0.15%)</title><rect x="37.4072%" y="1077" width="0.1537%" height="15" fill="rgb(239,52,14)" fg:x="22879" fg:w="94"/><text x="37.6572%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (90 samples, 0.15%)</title><rect x="37.4138%" y="1061" width="0.1472%" height="15" fill="rgb(208,227,44)" fg:x="22883" fg:w="90"/><text x="37.6638%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (44 samples, 0.07%)</title><rect x="37.4890%" y="1045" width="0.0719%" height="15" fill="rgb(246,18,19)" fg:x="22929" fg:w="44"/><text x="37.7390%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (14 samples, 0.02%)</title><rect x="37.5380%" y="1029" width="0.0229%" height="15" fill="rgb(235,228,25)" fg:x="22959" fg:w="14"/><text x="37.7880%" y="1039.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (147 samples, 0.24%)</title><rect x="37.3238%" y="1109" width="0.2403%" height="15" fill="rgb(240,156,20)" fg:x="22828" fg:w="147"/><text x="37.5738%" y="1119.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.01%)</title><rect x="37.5756%" y="1109" width="0.0147%" height="15" fill="rgb(224,8,20)" fg:x="22982" fg:w="9"/><text x="37.8256%" y="1119.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="37.5756%" y="1093" width="0.0147%" height="15" fill="rgb(214,12,52)" fg:x="22982" fg:w="9"/><text x="37.8256%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (8 samples, 0.01%)</title><rect x="37.5773%" y="1077" width="0.0131%" height="15" fill="rgb(211,220,47)" fg:x="22983" fg:w="8"/><text x="37.8273%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (8 samples, 0.01%)</title><rect x="37.5773%" y="1061" width="0.0131%" height="15" fill="rgb(250,173,5)" fg:x="22983" fg:w="8"/><text x="37.8273%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="37.5789%" y="1045" width="0.0114%" height="15" fill="rgb(250,125,52)" fg:x="22984" fg:w="7"/><text x="37.8289%" y="1055.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (20 samples, 0.03%)</title><rect x="37.5903%" y="1109" width="0.0327%" height="15" fill="rgb(209,133,18)" fg:x="22991" fg:w="20"/><text x="37.8403%" y="1119.50"></text></g><g><title>sk-gen`core::str::pattern::StrSearcher::new (22 samples, 0.04%)</title><rect x="37.6247%" y="1109" width="0.0360%" height="15" fill="rgb(216,173,22)" fg:x="23012" fg:w="22"/><text x="37.8747%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.02%)</title><rect x="37.6786%" y="1093" width="0.0180%" height="15" fill="rgb(205,3,22)" fg:x="23045" fg:w="11"/><text x="37.9286%" y="1103.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (24 samples, 0.04%)</title><rect x="37.6966%" y="1093" width="0.0392%" height="15" fill="rgb(248,22,20)" fg:x="23056" fg:w="24"/><text x="37.9466%" y="1103.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (24 samples, 0.04%)</title><rect x="37.6966%" y="1077" width="0.0392%" height="15" fill="rgb(233,6,29)" fg:x="23056" fg:w="24"/><text x="37.9466%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (24 samples, 0.04%)</title><rect x="37.6966%" y="1061" width="0.0392%" height="15" fill="rgb(240,22,54)" fg:x="23056" fg:w="24"/><text x="37.9466%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (24 samples, 0.04%)</title><rect x="37.6966%" y="1045" width="0.0392%" height="15" fill="rgb(231,133,32)" fg:x="23056" fg:w="24"/><text x="37.9466%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.03%)</title><rect x="37.7015%" y="1029" width="0.0343%" height="15" fill="rgb(248,193,4)" fg:x="23059" fg:w="21"/><text x="37.9515%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.01%)</title><rect x="37.7833%" y="1061" width="0.0114%" height="15" fill="rgb(211,178,46)" fg:x="23109" fg:w="7"/><text x="38.0333%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7 samples, 0.01%)</title><rect x="37.7833%" y="1045" width="0.0114%" height="15" fill="rgb(224,5,42)" fg:x="23109" fg:w="7"/><text x="38.0333%" y="1055.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (9 samples, 0.01%)</title><rect x="37.8062%" y="1013" width="0.0147%" height="15" fill="rgb(239,176,25)" fg:x="23123" fg:w="9"/><text x="38.0562%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="37.8078%" y="997" width="0.0131%" height="15" fill="rgb(245,187,50)" fg:x="23124" fg:w="8"/><text x="38.0578%" y="1007.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (25 samples, 0.04%)</title><rect x="37.7816%" y="1077" width="0.0409%" height="15" fill="rgb(248,24,15)" fg:x="23108" fg:w="25"/><text x="38.0316%" y="1087.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (16 samples, 0.03%)</title><rect x="37.7963%" y="1061" width="0.0262%" height="15" fill="rgb(205,166,13)" fg:x="23117" fg:w="16"/><text x="38.0463%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (16 samples, 0.03%)</title><rect x="37.7963%" y="1045" width="0.0262%" height="15" fill="rgb(208,114,23)" fg:x="23117" fg:w="16"/><text x="38.0463%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (14 samples, 0.02%)</title><rect x="37.7996%" y="1029" width="0.0229%" height="15" fill="rgb(239,127,18)" fg:x="23119" fg:w="14"/><text x="38.0496%" y="1039.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (20 samples, 0.03%)</title><rect x="37.8241%" y="1077" width="0.0327%" height="15" fill="rgb(219,154,28)" fg:x="23134" fg:w="20"/><text x="38.0741%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::path::Part&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="37.8421%" y="1061" width="0.0147%" height="15" fill="rgb(225,157,23)" fg:x="23145" fg:w="9"/><text x="38.0921%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (130 samples, 0.21%)</title><rect x="37.6606%" y="1109" width="0.2126%" height="15" fill="rgb(219,8,6)" fg:x="23034" fg:w="130"/><text x="37.9106%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (84 samples, 0.14%)</title><rect x="37.7358%" y="1093" width="0.1373%" height="15" fill="rgb(212,47,6)" fg:x="23080" fg:w="84"/><text x="37.9858%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (8 samples, 0.01%)</title><rect x="37.8601%" y="1077" width="0.0131%" height="15" fill="rgb(224,190,4)" fg:x="23156" fg:w="8"/><text x="38.1101%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (23 samples, 0.04%)</title><rect x="38.0808%" y="1077" width="0.0376%" height="15" fill="rgb(239,183,29)" fg:x="23291" fg:w="23"/><text x="38.3308%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (22 samples, 0.04%)</title><rect x="38.0825%" y="1061" width="0.0360%" height="15" fill="rgb(213,57,7)" fg:x="23292" fg:w="22"/><text x="38.3325%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_shrink_in_place (11 samples, 0.02%)</title><rect x="38.1005%" y="1045" width="0.0180%" height="15" fill="rgb(216,148,1)" fg:x="23303" fg:w="11"/><text x="38.3505%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="38.1397%" y="1045" width="0.0131%" height="15" fill="rgb(236,182,29)" fg:x="23327" fg:w="8"/><text x="38.3897%" y="1055.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="38.2656%" y="1013" width="0.0180%" height="15" fill="rgb(244,120,48)" fg:x="23404" fg:w="11"/><text x="38.5156%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (107 samples, 0.17%)</title><rect x="38.1348%" y="1061" width="0.1749%" height="15" fill="rgb(206,71,34)" fg:x="23324" fg:w="107"/><text x="38.3848%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (94 samples, 0.15%)</title><rect x="38.1560%" y="1045" width="0.1537%" height="15" fill="rgb(242,32,6)" fg:x="23337" fg:w="94"/><text x="38.4060%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (42 samples, 0.07%)</title><rect x="38.2411%" y="1029" width="0.0687%" height="15" fill="rgb(241,35,3)" fg:x="23389" fg:w="42"/><text x="38.4911%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (13 samples, 0.02%)</title><rect x="38.2885%" y="1013" width="0.0213%" height="15" fill="rgb(222,62,19)" fg:x="23418" fg:w="13"/><text x="38.5385%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (10 samples, 0.02%)</title><rect x="38.2934%" y="997" width="0.0164%" height="15" fill="rgb(223,110,41)" fg:x="23421" fg:w="10"/><text x="38.5434%" y="1007.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (149 samples, 0.24%)</title><rect x="38.0678%" y="1093" width="0.2436%" height="15" fill="rgb(208,224,4)" fg:x="23283" fg:w="149"/><text x="38.3178%" y="1103.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (114 samples, 0.19%)</title><rect x="38.1250%" y="1077" width="0.1864%" height="15" fill="rgb(241,137,19)" fg:x="23318" fg:w="114"/><text x="38.3750%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (8 samples, 0.01%)</title><rect x="38.3228%" y="1077" width="0.0131%" height="15" fill="rgb(244,24,17)" fg:x="23439" fg:w="8"/><text x="38.5728%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::obj_entry (16 samples, 0.03%)</title><rect x="38.3359%" y="1077" width="0.0262%" height="15" fill="rgb(245,178,49)" fg:x="23447" fg:w="16"/><text x="38.5859%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (16 samples, 0.03%)</title><rect x="38.3359%" y="1061" width="0.0262%" height="15" fill="rgb(219,160,38)" fg:x="23447" fg:w="16"/><text x="38.5859%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (15 samples, 0.02%)</title><rect x="38.3375%" y="1045" width="0.0245%" height="15" fill="rgb(228,137,14)" fg:x="23448" fg:w="15"/><text x="38.5875%" y="1055.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (8 samples, 0.01%)</title><rect x="38.3490%" y="1029" width="0.0131%" height="15" fill="rgb(237,134,11)" fg:x="23455" fg:w="8"/><text x="38.5990%" y="1039.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (30 samples, 0.05%)</title><rect x="38.3146%" y="1093" width="0.0491%" height="15" fill="rgb(211,126,44)" fg:x="23434" fg:w="30"/><text x="38.5646%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (13 samples, 0.02%)</title><rect x="38.3719%" y="1093" width="0.0213%" height="15" fill="rgb(226,171,33)" fg:x="23469" fg:w="13"/><text x="38.6219%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (12 samples, 0.02%)</title><rect x="38.3735%" y="1077" width="0.0196%" height="15" fill="rgb(253,99,13)" fg:x="23470" fg:w="12"/><text x="38.6235%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (8 samples, 0.01%)</title><rect x="38.4405%" y="1045" width="0.0131%" height="15" fill="rgb(244,48,7)" fg:x="23511" fg:w="8"/><text x="38.6905%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.02%)</title><rect x="38.4389%" y="1061" width="0.0180%" height="15" fill="rgb(244,217,54)" fg:x="23510" fg:w="11"/><text x="38.6889%" y="1071.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (30 samples, 0.05%)</title><rect x="38.4356%" y="1077" width="0.0491%" height="15" fill="rgb(224,15,18)" fg:x="23508" fg:w="30"/><text x="38.6856%" y="1087.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (16 samples, 0.03%)</title><rect x="38.4585%" y="1061" width="0.0262%" height="15" fill="rgb(244,99,12)" fg:x="23522" fg:w="16"/><text x="38.7085%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (14 samples, 0.02%)</title><rect x="38.4618%" y="1045" width="0.0229%" height="15" fill="rgb(233,226,8)" fg:x="23524" fg:w="14"/><text x="38.7118%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (10 samples, 0.02%)</title><rect x="38.4683%" y="1029" width="0.0164%" height="15" fill="rgb(229,211,3)" fg:x="23528" fg:w="10"/><text x="38.7183%" y="1039.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (8 samples, 0.01%)</title><rect x="38.4912%" y="1045" width="0.0131%" height="15" fill="rgb(216,140,21)" fg:x="23542" fg:w="8"/><text x="38.7412%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::path::Part&lt;T&gt;::map (7 samples, 0.01%)</title><rect x="38.4929%" y="1029" width="0.0114%" height="15" fill="rgb(234,122,30)" fg:x="23543" fg:w="7"/><text x="38.7429%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (11 samples, 0.02%)</title><rect x="38.4912%" y="1077" width="0.0180%" height="15" fill="rgb(236,25,46)" fg:x="23542" fg:w="11"/><text x="38.7412%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (11 samples, 0.02%)</title><rect x="38.4912%" y="1061" width="0.0180%" height="15" fill="rgb(217,52,54)" fg:x="23542" fg:w="11"/><text x="38.7412%" y="1071.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (11 samples, 0.02%)</title><rect x="38.5534%" y="1029" width="0.0180%" height="15" fill="rgb(222,29,26)" fg:x="23580" fg:w="11"/><text x="38.8034%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::path::Part&lt;T&gt;::map (11 samples, 0.02%)</title><rect x="38.5534%" y="1013" width="0.0180%" height="15" fill="rgb(216,177,29)" fg:x="23580" fg:w="11"/><text x="38.8034%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (10 samples, 0.02%)</title><rect x="38.5550%" y="997" width="0.0164%" height="15" fill="rgb(247,136,51)" fg:x="23581" fg:w="10"/><text x="38.8050%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (7 samples, 0.01%)</title><rect x="38.5599%" y="981" width="0.0114%" height="15" fill="rgb(231,47,47)" fg:x="23584" fg:w="7"/><text x="38.8099%" y="991.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="38.5779%" y="1013" width="0.0131%" height="15" fill="rgb(211,192,36)" fg:x="23595" fg:w="8"/><text x="38.8279%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (30 samples, 0.05%)</title><rect x="38.5942%" y="1013" width="0.0491%" height="15" fill="rgb(229,156,32)" fg:x="23605" fg:w="30"/><text x="38.8442%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (21 samples, 0.03%)</title><rect x="38.6089%" y="997" width="0.0343%" height="15" fill="rgb(248,213,20)" fg:x="23614" fg:w="21"/><text x="38.8589%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (8 samples, 0.01%)</title><rect x="38.6302%" y="981" width="0.0131%" height="15" fill="rgb(217,64,7)" fg:x="23627" fg:w="8"/><text x="38.8802%" y="991.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (63 samples, 0.10%)</title><rect x="38.5435%" y="1061" width="0.1030%" height="15" fill="rgb(232,142,8)" fg:x="23574" fg:w="63"/><text x="38.7935%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (60 samples, 0.10%)</title><rect x="38.5484%" y="1045" width="0.0981%" height="15" fill="rgb(224,92,44)" fg:x="23577" fg:w="60"/><text x="38.7984%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (46 samples, 0.08%)</title><rect x="38.5713%" y="1029" width="0.0752%" height="15" fill="rgb(214,169,17)" fg:x="23591" fg:w="46"/><text x="38.8213%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (123 samples, 0.20%)</title><rect x="38.5157%" y="1077" width="0.2011%" height="15" fill="rgb(210,59,37)" fg:x="23557" fg:w="123"/><text x="38.7657%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (43 samples, 0.07%)</title><rect x="38.6465%" y="1061" width="0.0703%" height="15" fill="rgb(214,116,48)" fg:x="23637" fg:w="43"/><text x="38.8965%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (23 samples, 0.04%)</title><rect x="38.6792%" y="1045" width="0.0376%" height="15" fill="rgb(244,191,6)" fg:x="23657" fg:w="23"/><text x="38.9292%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (20 samples, 0.03%)</title><rect x="38.6842%" y="1029" width="0.0327%" height="15" fill="rgb(241,50,52)" fg:x="23660" fg:w="20"/><text x="38.9342%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (13 samples, 0.02%)</title><rect x="38.6956%" y="1013" width="0.0213%" height="15" fill="rgb(236,75,39)" fg:x="23667" fg:w="13"/><text x="38.9456%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (7 samples, 0.01%)</title><rect x="38.7054%" y="997" width="0.0114%" height="15" fill="rgb(236,99,0)" fg:x="23673" fg:w="7"/><text x="38.9554%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (7 samples, 0.01%)</title><rect x="38.7054%" y="981" width="0.0114%" height="15" fill="rgb(207,202,15)" fg:x="23673" fg:w="7"/><text x="38.9554%" y="991.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (199 samples, 0.33%)</title><rect x="38.3931%" y="1093" width="0.3254%" height="15" fill="rgb(233,207,14)" fg:x="23482" fg:w="199"/><text x="38.6431%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (521 samples, 0.85%)</title><rect x="37.8732%" y="1109" width="0.8518%" height="15" fill="rgb(226,27,51)" fg:x="23164" fg:w="521"/><text x="38.1232%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (1,101 samples, 1.80%)</title><rect x="36.9445%" y="1125" width="1.8001%" height="15" fill="rgb(206,104,42)" fg:x="22596" fg:w="1101"/><text x="37.1945%" y="1135.50">s..</text></g><g><title>sk-gen`jaq_core::compile::MapVecLen&lt;S&gt;::pop (12 samples, 0.02%)</title><rect x="38.7250%" y="1109" width="0.0196%" height="15" fill="rgb(212,225,4)" fg:x="23685" fg:w="12"/><text x="38.9750%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (7 samples, 0.01%)</title><rect x="38.7561%" y="1109" width="0.0114%" height="15" fill="rgb(233,96,42)" fg:x="23704" fg:w="7"/><text x="39.0061%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::with_vars (16 samples, 0.03%)</title><rect x="38.7446%" y="1125" width="0.0262%" height="15" fill="rgb(229,21,32)" fg:x="23697" fg:w="16"/><text x="38.9946%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="38.7921%" y="1093" width="0.0114%" height="15" fill="rgb(226,216,24)" fg:x="23726" fg:w="7"/><text x="39.0421%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_default (9 samples, 0.01%)</title><rect x="38.7904%" y="1109" width="0.0147%" height="15" fill="rgb(221,163,17)" fg:x="23725" fg:w="9"/><text x="39.0404%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::MapVec&lt;K,V&gt;::push (22 samples, 0.04%)</title><rect x="38.7708%" y="1125" width="0.0360%" height="15" fill="rgb(216,216,42)" fg:x="23713" fg:w="22"/><text x="39.0208%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::compile::MapVecLen&lt;S&gt;::pop (11 samples, 0.02%)</title><rect x="38.8068%" y="1125" width="0.0180%" height="15" fill="rgb(240,118,7)" fg:x="23735" fg:w="11"/><text x="39.0568%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (7 samples, 0.01%)</title><rect x="38.8133%" y="1109" width="0.0114%" height="15" fill="rgb(221,67,37)" fg:x="23739" fg:w="7"/><text x="39.0633%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (2,469 samples, 4.04%)</title><rect x="34.7896%" y="1141" width="4.0368%" height="15" fill="rgb(241,32,44)" fg:x="21278" fg:w="2469"/><text x="35.0396%" y="1151.50">sk-g..</text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (9 samples, 0.01%)</title><rect x="39.4019%" y="1125" width="0.0147%" height="15" fill="rgb(235,204,43)" fg:x="24099" fg:w="9"/><text x="39.6519%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (125 samples, 0.20%)</title><rect x="39.4166%" y="1125" width="0.2044%" height="15" fill="rgb(213,116,10)" fg:x="24108" fg:w="125"/><text x="39.6666%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (41 samples, 0.07%)</title><rect x="39.6210%" y="1125" width="0.0670%" height="15" fill="rgb(239,15,48)" fg:x="24233" fg:w="41"/><text x="39.8710%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (41 samples, 0.07%)</title><rect x="39.6210%" y="1109" width="0.0670%" height="15" fill="rgb(207,123,36)" fg:x="24233" fg:w="41"/><text x="39.8710%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`madvise (41 samples, 0.07%)</title><rect x="39.6210%" y="1093" width="0.0670%" height="15" fill="rgb(209,103,30)" fg:x="24233" fg:w="41"/><text x="39.8710%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (326 samples, 0.53%)</title><rect x="39.6979%" y="1125" width="0.5330%" height="15" fill="rgb(238,100,19)" fg:x="24280" fg:w="326"/><text x="39.9479%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (11 samples, 0.02%)</title><rect x="40.2309%" y="1125" width="0.0180%" height="15" fill="rgb(244,30,14)" fg:x="24606" fg:w="11"/><text x="40.4809%" y="1135.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (30 samples, 0.05%)</title><rect x="40.2587%" y="1125" width="0.0491%" height="15" fill="rgb(249,174,6)" fg:x="24623" fg:w="30"/><text x="40.5087%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="40.8391%" y="1093" width="0.0114%" height="15" fill="rgb(235,213,41)" fg:x="24978" fg:w="7"/><text x="41.0891%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (12 samples, 0.02%)</title><rect x="40.8522%" y="1093" width="0.0196%" height="15" fill="rgb(213,118,6)" fg:x="24986" fg:w="12"/><text x="41.1022%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (114 samples, 0.19%)</title><rect x="40.8996%" y="1077" width="0.1864%" height="15" fill="rgb(235,44,51)" fg:x="25015" fg:w="114"/><text x="41.1496%" y="1087.50"></text></g><g><title>sk-gen`DYLD-STUB$$memmove (7 samples, 0.01%)</title><rect x="41.0860%" y="1077" width="0.0114%" height="15" fill="rgb(217,9,53)" fg:x="25129" fg:w="7"/><text x="41.3360%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (31 samples, 0.05%)</title><rect x="41.2478%" y="1061" width="0.0507%" height="15" fill="rgb(237,172,34)" fg:x="25228" fg:w="31"/><text x="41.4978%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::bulk_steal_left (7 samples, 0.01%)</title><rect x="41.3067%" y="1061" width="0.0114%" height="15" fill="rgb(206,206,11)" fg:x="25264" fg:w="7"/><text x="41.5567%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="41.3835%" y="1013" width="0.0114%" height="15" fill="rgb(214,149,29)" fg:x="25311" fg:w="7"/><text x="41.6335%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.05%)</title><rect x="41.3557%" y="1045" width="0.0474%" height="15" fill="rgb(208,123,3)" fg:x="25294" fg:w="29"/><text x="41.6057%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.04%)</title><rect x="41.3623%" y="1029" width="0.0409%" height="15" fill="rgb(229,126,4)" fg:x="25298" fg:w="25"/><text x="41.6123%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (402 samples, 0.66%)</title><rect x="40.7639%" y="1109" width="0.6573%" height="15" fill="rgb(222,92,36)" fg:x="24932" fg:w="402"/><text x="41.0139%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (336 samples, 0.55%)</title><rect x="40.8718%" y="1093" width="0.5494%" height="15" fill="rgb(216,39,41)" fg:x="24998" fg:w="336"/><text x="41.1218%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (197 samples, 0.32%)</title><rect x="41.0990%" y="1077" width="0.3221%" height="15" fill="rgb(253,127,28)" fg:x="25137" fg:w="197"/><text x="41.3490%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::do_merge (61 samples, 0.10%)</title><rect x="41.3214%" y="1061" width="0.0997%" height="15" fill="rgb(249,152,51)" fg:x="25273" fg:w="61"/><text x="41.5714%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (9 samples, 0.01%)</title><rect x="41.4064%" y="1045" width="0.0147%" height="15" fill="rgb(209,123,42)" fg:x="25325" fg:w="9"/><text x="41.6564%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (685 samples, 1.12%)</title><rect x="40.3077%" y="1125" width="1.1200%" height="15" fill="rgb(241,118,22)" fg:x="24653" fg:w="685"/><text x="40.5577%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::compile::MapVec&lt;K,V&gt;::pop (1,598 samples, 2.61%)</title><rect x="38.8264%" y="1141" width="2.6127%" height="15" fill="rgb(208,25,7)" fg:x="23747" fg:w="1598"/><text x="39.0764%" y="1151.50">sk..</text></g><g><title>sk-gen`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (7 samples, 0.01%)</title><rect x="41.4277%" y="1125" width="0.0114%" height="15" fill="rgb(243,144,39)" fg:x="25338" fg:w="7"/><text x="41.6777%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (101 samples, 0.17%)</title><rect x="41.8201%" y="1109" width="0.1651%" height="15" fill="rgb(250,50,5)" fg:x="25578" fg:w="101"/><text x="42.0701%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="42.0850%" y="1093" width="0.0147%" height="15" fill="rgb(207,67,11)" fg:x="25740" fg:w="9"/><text x="42.3350%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.03%)</title><rect x="42.1127%" y="1077" width="0.0294%" height="15" fill="rgb(245,204,40)" fg:x="25757" fg:w="18"/><text x="42.3627%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.02%)</title><rect x="42.1209%" y="1061" width="0.0213%" height="15" fill="rgb(238,228,24)" fg:x="25762" fg:w="13"/><text x="42.3709%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="42.1258%" y="1045" width="0.0164%" height="15" fill="rgb(217,116,22)" fg:x="25765" fg:w="10"/><text x="42.3758%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_default (223 samples, 0.36%)</title><rect x="41.7792%" y="1125" width="0.3646%" height="15" fill="rgb(234,98,12)" fg:x="25553" fg:w="223"/><text x="42.0292%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (91 samples, 0.15%)</title><rect x="41.9950%" y="1109" width="0.1488%" height="15" fill="rgb(242,170,50)" fg:x="25685" fg:w="91"/><text x="42.2450%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (22 samples, 0.04%)</title><rect x="42.1078%" y="1093" width="0.0360%" height="15" fill="rgb(235,7,5)" fg:x="25754" fg:w="22"/><text x="42.3578%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (7 samples, 0.01%)</title><rect x="42.1438%" y="1125" width="0.0114%" height="15" fill="rgb(241,114,28)" fg:x="25776" fg:w="7"/><text x="42.3938%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.03%)</title><rect x="42.1732%" y="1109" width="0.0311%" height="15" fill="rgb(246,112,42)" fg:x="25794" fg:w="19"/><text x="42.4232%" y="1119.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (62 samples, 0.10%)</title><rect x="42.1553%" y="1125" width="0.1014%" height="15" fill="rgb(248,228,14)" fg:x="25783" fg:w="62"/><text x="42.4053%" y="1135.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (26 samples, 0.04%)</title><rect x="42.2141%" y="1109" width="0.0425%" height="15" fill="rgb(208,133,18)" fg:x="25819" fg:w="26"/><text x="42.4641%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (21 samples, 0.03%)</title><rect x="42.2223%" y="1093" width="0.0343%" height="15" fill="rgb(207,35,49)" fg:x="25824" fg:w="21"/><text x="42.4723%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::compile::MapVec&lt;K,V&gt;::push (502 samples, 0.82%)</title><rect x="41.4391%" y="1141" width="0.8208%" height="15" fill="rgb(205,68,36)" fg:x="25345" fg:w="502"/><text x="41.6891%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18 samples, 0.03%)</title><rect x="42.3073%" y="1125" width="0.0294%" height="15" fill="rgb(245,62,40)" fg:x="25876" fg:w="18"/><text x="42.5573%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (15 samples, 0.02%)</title><rect x="42.3367%" y="1125" width="0.0245%" height="15" fill="rgb(228,27,24)" fg:x="25894" fg:w="15"/><text x="42.5867%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.02%)</title><rect x="42.4054%" y="1077" width="0.0196%" height="15" fill="rgb(253,19,12)" fg:x="25936" fg:w="12"/><text x="42.6554%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (32 samples, 0.05%)</title><rect x="42.3907%" y="1109" width="0.0523%" height="15" fill="rgb(232,28,20)" fg:x="25927" fg:w="32"/><text x="42.6407%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (25 samples, 0.04%)</title><rect x="42.4021%" y="1093" width="0.0409%" height="15" fill="rgb(218,35,51)" fg:x="25934" fg:w="25"/><text x="42.6521%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (9 samples, 0.01%)</title><rect x="42.4283%" y="1077" width="0.0147%" height="15" fill="rgb(212,90,40)" fg:x="25950" fg:w="9"/><text x="42.6783%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (45 samples, 0.07%)</title><rect x="42.3711%" y="1125" width="0.0736%" height="15" fill="rgb(220,172,12)" fg:x="25915" fg:w="45"/><text x="42.6211%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::def_post (6,038 samples, 9.87%)</title><rect x="32.5774%" y="1157" width="9.8721%" height="15" fill="rgb(226,159,20)" fg:x="19925" fg:w="6038"/><text x="32.8274%" y="1167.50">sk-gen`jaq_cor..</text></g><g><title>sk-gen`jaq_core::compile::MapVecLen&lt;S&gt;::pop (116 samples, 0.19%)</title><rect x="42.2599%" y="1141" width="0.1897%" height="15" fill="rgb(234,205,16)" fg:x="25847" fg:w="116"/><text x="42.5099%" y="1151.50"></text></g><g><title>sk-gen`jaq_core::compile::MapVec&lt;K,V&gt;::pop (10 samples, 0.02%)</title><rect x="42.4528%" y="1157" width="0.0164%" height="15" fill="rgb(207,9,39)" fg:x="25965" fg:w="10"/><text x="42.7028%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,141 samples, 10.04%)</title><rect x="32.4335%" y="1173" width="10.0405%" height="15" fill="rgb(249,143,15)" fg:x="19837" fg:w="6141"/><text x="32.6835%" y="1183.50">sk-gen`&lt;alloc::..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (56 samples, 0.09%)</title><rect x="42.4986%" y="1157" width="0.0916%" height="15" fill="rgb(253,133,29)" fg:x="25993" fg:w="56"/><text x="42.7486%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.03%)</title><rect x="42.6752%" y="1125" width="0.0311%" height="15" fill="rgb(221,187,0)" fg:x="26101" fg:w="19"/><text x="42.9252%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.03%)</title><rect x="42.6801%" y="1109" width="0.0262%" height="15" fill="rgb(205,204,26)" fg:x="26104" fg:w="16"/><text x="42.9301%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="42.6899%" y="1093" width="0.0164%" height="15" fill="rgb(224,68,54)" fg:x="26110" fg:w="10"/><text x="42.9399%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (68 samples, 0.11%)</title><rect x="42.5967%" y="1157" width="0.1112%" height="15" fill="rgb(209,67,4)" fg:x="26053" fg:w="68"/><text x="42.8467%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (27 samples, 0.04%)</title><rect x="42.6637%" y="1141" width="0.0441%" height="15" fill="rgb(228,229,18)" fg:x="26094" fg:w="27"/><text x="42.9137%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_default (138 samples, 0.23%)</title><rect x="42.4839%" y="1173" width="0.2256%" height="15" fill="rgb(231,89,13)" fg:x="25984" fg:w="138"/><text x="42.7339%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.01%)</title><rect x="42.7095%" y="1173" width="0.0131%" height="15" fill="rgb(210,182,18)" fg:x="26122" fg:w="8"/><text x="42.9595%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="42.7406%" y="1157" width="0.0196%" height="15" fill="rgb(240,105,2)" fg:x="26141" fg:w="12"/><text x="42.9906%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.01%)</title><rect x="42.7798%" y="1109" width="0.0131%" height="15" fill="rgb(207,170,50)" fg:x="26165" fg:w="8"/><text x="43.0298%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (16 samples, 0.03%)</title><rect x="42.7766%" y="1125" width="0.0262%" height="15" fill="rgb(232,133,24)" fg:x="26163" fg:w="16"/><text x="43.0266%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (17 samples, 0.03%)</title><rect x="42.7766%" y="1141" width="0.0278%" height="15" fill="rgb(235,166,27)" fg:x="26163" fg:w="17"/><text x="43.0266%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (65 samples, 0.11%)</title><rect x="42.8044%" y="1141" width="0.1063%" height="15" fill="rgb(209,19,13)" fg:x="26180" fg:w="65"/><text x="43.0544%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (43 samples, 0.07%)</title><rect x="42.8403%" y="1125" width="0.0703%" height="15" fill="rgb(226,79,39)" fg:x="26202" fg:w="43"/><text x="43.0903%" y="1135.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (118 samples, 0.19%)</title><rect x="42.7226%" y="1173" width="0.1929%" height="15" fill="rgb(222,163,10)" fg:x="26130" fg:w="118"/><text x="42.9726%" y="1183.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (93 samples, 0.15%)</title><rect x="42.7635%" y="1157" width="0.1521%" height="15" fill="rgb(214,44,19)" fg:x="26155" fg:w="93"/><text x="43.0135%" y="1167.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::compile (6,752 samples, 11.04%)</title><rect x="31.8874%" y="1189" width="11.0395%" height="15" fill="rgb(210,217,13)" fg:x="19503" fg:w="6752"/><text x="32.1374%" y="1199.50">sk-gen`jaq_core:..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="42.9450%" y="1157" width="0.0294%" height="15" fill="rgb(237,61,54)" fg:x="26266" fg:w="18"/><text x="43.1950%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.05%)</title><rect x="42.9303%" y="1173" width="0.0523%" height="15" fill="rgb(226,184,24)" fg:x="26257" fg:w="32"/><text x="43.1803%" y="1183.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::with_funs (36 samples, 0.06%)</title><rect x="42.9270%" y="1189" width="0.0589%" height="15" fill="rgb(223,226,4)" fg:x="26255" fg:w="36"/><text x="43.1770%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (23 samples, 0.04%)</title><rect x="43.0071%" y="1157" width="0.0376%" height="15" fill="rgb(210,26,41)" fg:x="26304" fg:w="23"/><text x="43.2571%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (15 samples, 0.02%)</title><rect x="43.0202%" y="1141" width="0.0245%" height="15" fill="rgb(220,221,6)" fg:x="26312" fg:w="15"/><text x="43.2702%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (10 samples, 0.02%)</title><rect x="43.0284%" y="1125" width="0.0164%" height="15" fill="rgb(225,89,49)" fg:x="26317" fg:w="10"/><text x="43.2784%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7 samples, 0.01%)</title><rect x="43.0970%" y="981" width="0.0114%" height="15" fill="rgb(218,70,45)" fg:x="26359" fg:w="7"/><text x="43.3470%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (9 samples, 0.01%)</title><rect x="43.0954%" y="997" width="0.0147%" height="15" fill="rgb(238,166,21)" fg:x="26358" fg:w="9"/><text x="43.3454%" y="1007.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (11 samples, 0.02%)</title><rect x="43.0938%" y="1029" width="0.0180%" height="15" fill="rgb(224,141,44)" fg:x="26357" fg:w="11"/><text x="43.3438%" y="1039.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="43.0954%" y="1013" width="0.0164%" height="15" fill="rgb(230,12,49)" fg:x="26358" fg:w="10"/><text x="43.3454%" y="1023.50"></text></g><g><title>sk-gen`core::str::_&lt;impl str&gt;::trim_start_matches (7 samples, 0.01%)</title><rect x="43.1575%" y="965" width="0.0114%" height="15" fill="rgb(212,174,12)" fg:x="26396" fg:w="7"/><text x="43.4075%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.03%)</title><rect x="43.1935%" y="901" width="0.0311%" height="15" fill="rgb(246,67,9)" fg:x="26418" fg:w="19"/><text x="43.4435%" y="911.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (14 samples, 0.02%)</title><rect x="43.2017%" y="885" width="0.0229%" height="15" fill="rgb(239,35,23)" fg:x="26423" fg:w="14"/><text x="43.4517%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.06%)</title><rect x="43.1706%" y="949" width="0.0638%" height="15" fill="rgb(211,167,0)" fg:x="26404" fg:w="39"/><text x="43.4206%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (32 samples, 0.05%)</title><rect x="43.1820%" y="933" width="0.0523%" height="15" fill="rgb(225,119,45)" fg:x="26411" fg:w="32"/><text x="43.4320%" y="943.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (25 samples, 0.04%)</title><rect x="43.1935%" y="917" width="0.0409%" height="15" fill="rgb(210,162,6)" fg:x="26418" fg:w="25"/><text x="43.4435%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (52 samples, 0.09%)</title><rect x="43.1526%" y="997" width="0.0850%" height="15" fill="rgb(208,118,35)" fg:x="26393" fg:w="52"/><text x="43.4026%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (51 samples, 0.08%)</title><rect x="43.1542%" y="981" width="0.0834%" height="15" fill="rgb(239,4,53)" fg:x="26394" fg:w="51"/><text x="43.4042%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (41 samples, 0.07%)</title><rect x="43.1706%" y="965" width="0.0670%" height="15" fill="rgb(213,130,21)" fg:x="26404" fg:w="41"/><text x="43.4206%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (94 samples, 0.15%)</title><rect x="43.0905%" y="1045" width="0.1537%" height="15" fill="rgb(235,148,0)" fg:x="26355" fg:w="94"/><text x="43.3405%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (81 samples, 0.13%)</title><rect x="43.1117%" y="1029" width="0.1324%" height="15" fill="rgb(244,224,18)" fg:x="26368" fg:w="81"/><text x="43.3617%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (61 samples, 0.10%)</title><rect x="43.1444%" y="1013" width="0.0997%" height="15" fill="rgb(211,214,4)" fg:x="26388" fg:w="61"/><text x="43.3944%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (123 samples, 0.20%)</title><rect x="43.0512%" y="1093" width="0.2011%" height="15" fill="rgb(206,119,25)" fg:x="26331" fg:w="123"/><text x="43.3012%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (117 samples, 0.19%)</title><rect x="43.0611%" y="1077" width="0.1913%" height="15" fill="rgb(243,93,47)" fg:x="26337" fg:w="117"/><text x="43.3111%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (101 samples, 0.17%)</title><rect x="43.0872%" y="1061" width="0.1651%" height="15" fill="rgb(224,194,6)" fg:x="26353" fg:w="101"/><text x="43.3372%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::lex (128 samples, 0.21%)</title><rect x="43.0447%" y="1157" width="0.2093%" height="15" fill="rgb(243,229,6)" fg:x="26327" fg:w="128"/><text x="43.2947%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (128 samples, 0.21%)</title><rect x="43.0447%" y="1141" width="0.2093%" height="15" fill="rgb(207,23,50)" fg:x="26327" fg:w="128"/><text x="43.2947%" y="1151.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (128 samples, 0.21%)</title><rect x="43.0447%" y="1125" width="0.2093%" height="15" fill="rgb(253,192,32)" fg:x="26327" fg:w="128"/><text x="43.2947%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (124 samples, 0.20%)</title><rect x="43.0512%" y="1109" width="0.2027%" height="15" fill="rgb(213,21,6)" fg:x="26331" fg:w="124"/><text x="43.3012%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (7 samples, 0.01%)</title><rect x="43.2605%" y="1077" width="0.0114%" height="15" fill="rgb(243,151,13)" fg:x="26459" fg:w="7"/><text x="43.5105%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (7 samples, 0.01%)</title><rect x="43.2605%" y="1061" width="0.0114%" height="15" fill="rgb(233,165,41)" fg:x="26459" fg:w="7"/><text x="43.5105%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (7 samples, 0.01%)</title><rect x="43.2850%" y="789" width="0.0114%" height="15" fill="rgb(246,176,45)" fg:x="26474" fg:w="7"/><text x="43.5350%" y="799.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (9 samples, 0.01%)</title><rect x="43.2850%" y="837" width="0.0147%" height="15" fill="rgb(217,170,52)" fg:x="26474" fg:w="9"/><text x="43.5350%" y="847.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (9 samples, 0.01%)</title><rect x="43.2850%" y="821" width="0.0147%" height="15" fill="rgb(214,203,54)" fg:x="26474" fg:w="9"/><text x="43.5350%" y="831.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (9 samples, 0.01%)</title><rect x="43.2850%" y="805" width="0.0147%" height="15" fill="rgb(248,215,49)" fg:x="26474" fg:w="9"/><text x="43.5350%" y="815.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (17 samples, 0.03%)</title><rect x="43.2834%" y="981" width="0.0278%" height="15" fill="rgb(208,46,10)" fg:x="26473" fg:w="17"/><text x="43.5334%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.03%)</title><rect x="43.2834%" y="965" width="0.0278%" height="15" fill="rgb(254,5,31)" fg:x="26473" fg:w="17"/><text x="43.5334%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (17 samples, 0.03%)</title><rect x="43.2834%" y="949" width="0.0278%" height="15" fill="rgb(222,104,33)" fg:x="26473" fg:w="17"/><text x="43.5334%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (17 samples, 0.03%)</title><rect x="43.2834%" y="933" width="0.0278%" height="15" fill="rgb(248,49,16)" fg:x="26473" fg:w="17"/><text x="43.5334%" y="943.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (17 samples, 0.03%)</title><rect x="43.2834%" y="917" width="0.0278%" height="15" fill="rgb(232,198,41)" fg:x="26473" fg:w="17"/><text x="43.5334%" y="927.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (16 samples, 0.03%)</title><rect x="43.2850%" y="901" width="0.0262%" height="15" fill="rgb(214,125,3)" fg:x="26474" fg:w="16"/><text x="43.5350%" y="911.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (16 samples, 0.03%)</title><rect x="43.2850%" y="885" width="0.0262%" height="15" fill="rgb(229,220,28)" fg:x="26474" fg:w="16"/><text x="43.5350%" y="895.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (16 samples, 0.03%)</title><rect x="43.2850%" y="869" width="0.0262%" height="15" fill="rgb(222,64,37)" fg:x="26474" fg:w="16"/><text x="43.5350%" y="879.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (16 samples, 0.03%)</title><rect x="43.2850%" y="853" width="0.0262%" height="15" fill="rgb(249,184,13)" fg:x="26474" fg:w="16"/><text x="43.5350%" y="863.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="43.2998%" y="837" width="0.0114%" height="15" fill="rgb(252,176,6)" fg:x="26483" fg:w="7"/><text x="43.5498%" y="847.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (10 samples, 0.02%)</title><rect x="43.3112%" y="981" width="0.0164%" height="15" fill="rgb(228,153,7)" fg:x="26490" fg:w="10"/><text x="43.5612%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (31 samples, 0.05%)</title><rect x="43.2785%" y="1029" width="0.0507%" height="15" fill="rgb(242,193,5)" fg:x="26470" fg:w="31"/><text x="43.5285%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (31 samples, 0.05%)</title><rect x="43.2785%" y="1013" width="0.0507%" height="15" fill="rgb(232,140,9)" fg:x="26470" fg:w="31"/><text x="43.5285%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (28 samples, 0.05%)</title><rect x="43.2834%" y="997" width="0.0458%" height="15" fill="rgb(213,222,16)" fg:x="26473" fg:w="28"/><text x="43.5334%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (33 samples, 0.05%)</title><rect x="43.2769%" y="1045" width="0.0540%" height="15" fill="rgb(222,75,50)" fg:x="26469" fg:w="33"/><text x="43.5269%" y="1055.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (10 samples, 0.02%)</title><rect x="43.3406%" y="997" width="0.0164%" height="15" fill="rgb(205,180,2)" fg:x="26508" fg:w="10"/><text x="43.5906%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="43.3406%" y="981" width="0.0164%" height="15" fill="rgb(216,34,7)" fg:x="26508" fg:w="10"/><text x="43.5906%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (9 samples, 0.01%)</title><rect x="43.3423%" y="965" width="0.0147%" height="15" fill="rgb(253,16,32)" fg:x="26509" fg:w="9"/><text x="43.5923%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (8 samples, 0.01%)</title><rect x="43.3439%" y="949" width="0.0131%" height="15" fill="rgb(208,97,28)" fg:x="26510" fg:w="8"/><text x="43.5939%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (8 samples, 0.01%)</title><rect x="43.3439%" y="933" width="0.0131%" height="15" fill="rgb(225,92,11)" fg:x="26510" fg:w="8"/><text x="43.5939%" y="943.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (8 samples, 0.01%)</title><rect x="43.3439%" y="917" width="0.0131%" height="15" fill="rgb(243,38,12)" fg:x="26510" fg:w="8"/><text x="43.5939%" y="927.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (50 samples, 0.08%)</title><rect x="43.2769%" y="1061" width="0.0818%" height="15" fill="rgb(208,139,16)" fg:x="26469" fg:w="50"/><text x="43.5269%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (17 samples, 0.03%)</title><rect x="43.3308%" y="1045" width="0.0278%" height="15" fill="rgb(227,24,9)" fg:x="26502" fg:w="17"/><text x="43.5808%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (17 samples, 0.03%)</title><rect x="43.3308%" y="1029" width="0.0278%" height="15" fill="rgb(206,62,11)" fg:x="26502" fg:w="17"/><text x="43.5808%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (12 samples, 0.02%)</title><rect x="43.3390%" y="1013" width="0.0196%" height="15" fill="rgb(228,134,27)" fg:x="26507" fg:w="12"/><text x="43.5890%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="43.3586%" y="1029" width="0.0131%" height="15" fill="rgb(205,55,33)" fg:x="26519" fg:w="8"/><text x="43.6086%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (8 samples, 0.01%)</title><rect x="43.3586%" y="1013" width="0.0131%" height="15" fill="rgb(243,75,43)" fg:x="26519" fg:w="8"/><text x="43.6086%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (8 samples, 0.01%)</title><rect x="43.3586%" y="997" width="0.0131%" height="15" fill="rgb(223,27,42)" fg:x="26519" fg:w="8"/><text x="43.6086%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (8 samples, 0.01%)</title><rect x="43.3586%" y="981" width="0.0131%" height="15" fill="rgb(232,189,33)" fg:x="26519" fg:w="8"/><text x="43.6086%" y="991.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (10 samples, 0.02%)</title><rect x="43.3586%" y="1045" width="0.0164%" height="15" fill="rgb(210,9,39)" fg:x="26519" fg:w="10"/><text x="43.6086%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (8 samples, 0.01%)</title><rect x="43.3831%" y="837" width="0.0131%" height="15" fill="rgb(242,85,26)" fg:x="26534" fg:w="8"/><text x="43.6331%" y="847.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (8 samples, 0.01%)</title><rect x="43.3831%" y="821" width="0.0131%" height="15" fill="rgb(248,44,4)" fg:x="26534" fg:w="8"/><text x="43.6331%" y="831.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (8 samples, 0.01%)</title><rect x="43.3831%" y="805" width="0.0131%" height="15" fill="rgb(250,96,46)" fg:x="26534" fg:w="8"/><text x="43.6331%" y="815.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (8 samples, 0.01%)</title><rect x="43.3831%" y="789" width="0.0131%" height="15" fill="rgb(229,116,26)" fg:x="26534" fg:w="8"/><text x="43.6331%" y="799.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (7 samples, 0.01%)</title><rect x="43.4060%" y="741" width="0.0114%" height="15" fill="rgb(246,94,34)" fg:x="26548" fg:w="7"/><text x="43.6560%" y="751.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="43.4060%" y="725" width="0.0114%" height="15" fill="rgb(251,73,21)" fg:x="26548" fg:w="7"/><text x="43.6560%" y="735.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (7 samples, 0.01%)</title><rect x="43.4060%" y="709" width="0.0114%" height="15" fill="rgb(254,121,25)" fg:x="26548" fg:w="7"/><text x="43.6560%" y="719.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (10 samples, 0.02%)</title><rect x="43.4044%" y="773" width="0.0164%" height="15" fill="rgb(215,161,49)" fg:x="26547" fg:w="10"/><text x="43.6544%" y="783.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (10 samples, 0.02%)</title><rect x="43.4044%" y="757" width="0.0164%" height="15" fill="rgb(221,43,13)" fg:x="26547" fg:w="10"/><text x="43.6544%" y="767.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (15 samples, 0.02%)</title><rect x="43.3979%" y="805" width="0.0245%" height="15" fill="rgb(249,5,37)" fg:x="26543" fg:w="15"/><text x="43.6479%" y="815.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (15 samples, 0.02%)</title><rect x="43.3979%" y="789" width="0.0245%" height="15" fill="rgb(226,25,44)" fg:x="26543" fg:w="15"/><text x="43.6479%" y="799.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (27 samples, 0.04%)</title><rect x="43.3799%" y="981" width="0.0441%" height="15" fill="rgb(238,189,16)" fg:x="26532" fg:w="27"/><text x="43.6299%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 0.04%)</title><rect x="43.3799%" y="965" width="0.0441%" height="15" fill="rgb(251,186,8)" fg:x="26532" fg:w="27"/><text x="43.6299%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (27 samples, 0.04%)</title><rect x="43.3799%" y="949" width="0.0441%" height="15" fill="rgb(254,34,31)" fg:x="26532" fg:w="27"/><text x="43.6299%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (27 samples, 0.04%)</title><rect x="43.3799%" y="933" width="0.0441%" height="15" fill="rgb(225,215,27)" fg:x="26532" fg:w="27"/><text x="43.6299%" y="943.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (27 samples, 0.04%)</title><rect x="43.3799%" y="917" width="0.0441%" height="15" fill="rgb(221,192,48)" fg:x="26532" fg:w="27"/><text x="43.6299%" y="927.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (27 samples, 0.04%)</title><rect x="43.3799%" y="901" width="0.0441%" height="15" fill="rgb(219,137,20)" fg:x="26532" fg:w="27"/><text x="43.6299%" y="911.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (27 samples, 0.04%)</title><rect x="43.3799%" y="885" width="0.0441%" height="15" fill="rgb(219,84,11)" fg:x="26532" fg:w="27"/><text x="43.6299%" y="895.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (26 samples, 0.04%)</title><rect x="43.3815%" y="869" width="0.0425%" height="15" fill="rgb(224,10,23)" fg:x="26533" fg:w="26"/><text x="43.6315%" y="879.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (26 samples, 0.04%)</title><rect x="43.3815%" y="853" width="0.0425%" height="15" fill="rgb(248,22,39)" fg:x="26533" fg:w="26"/><text x="43.6315%" y="863.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (17 samples, 0.03%)</title><rect x="43.3962%" y="837" width="0.0278%" height="15" fill="rgb(212,154,20)" fg:x="26542" fg:w="17"/><text x="43.6462%" y="847.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (17 samples, 0.03%)</title><rect x="43.3962%" y="821" width="0.0278%" height="15" fill="rgb(236,199,50)" fg:x="26542" fg:w="17"/><text x="43.6462%" y="831.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (29 samples, 0.05%)</title><rect x="43.3799%" y="1029" width="0.0474%" height="15" fill="rgb(211,9,17)" fg:x="26532" fg:w="29"/><text x="43.6299%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (29 samples, 0.05%)</title><rect x="43.3799%" y="1013" width="0.0474%" height="15" fill="rgb(243,216,36)" fg:x="26532" fg:w="29"/><text x="43.6299%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (29 samples, 0.05%)</title><rect x="43.3799%" y="997" width="0.0474%" height="15" fill="rgb(250,2,10)" fg:x="26532" fg:w="29"/><text x="43.6299%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (7 samples, 0.01%)</title><rect x="43.4371%" y="917" width="0.0114%" height="15" fill="rgb(226,50,48)" fg:x="26567" fg:w="7"/><text x="43.6871%" y="927.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="43.4371%" y="901" width="0.0114%" height="15" fill="rgb(243,81,16)" fg:x="26567" fg:w="7"/><text x="43.6871%" y="911.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (14 samples, 0.02%)</title><rect x="43.4273%" y="1029" width="0.0229%" height="15" fill="rgb(250,14,2)" fg:x="26561" fg:w="14"/><text x="43.6773%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (14 samples, 0.02%)</title><rect x="43.4273%" y="1013" width="0.0229%" height="15" fill="rgb(233,135,29)" fg:x="26561" fg:w="14"/><text x="43.6773%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (9 samples, 0.01%)</title><rect x="43.4355%" y="997" width="0.0147%" height="15" fill="rgb(224,64,43)" fg:x="26566" fg:w="9"/><text x="43.6855%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (9 samples, 0.01%)</title><rect x="43.4355%" y="981" width="0.0147%" height="15" fill="rgb(238,84,13)" fg:x="26566" fg:w="9"/><text x="43.6855%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (8 samples, 0.01%)</title><rect x="43.4371%" y="965" width="0.0131%" height="15" fill="rgb(253,48,26)" fg:x="26567" fg:w="8"/><text x="43.6871%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (8 samples, 0.01%)</title><rect x="43.4371%" y="949" width="0.0131%" height="15" fill="rgb(205,223,31)" fg:x="26567" fg:w="8"/><text x="43.6871%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (8 samples, 0.01%)</title><rect x="43.4371%" y="933" width="0.0131%" height="15" fill="rgb(221,41,32)" fg:x="26567" fg:w="8"/><text x="43.6871%" y="943.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (54 samples, 0.09%)</title><rect x="43.3750%" y="1045" width="0.0883%" height="15" fill="rgb(213,158,31)" fg:x="26529" fg:w="54"/><text x="43.6250%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path (8 samples, 0.01%)</title><rect x="43.4502%" y="1029" width="0.0131%" height="15" fill="rgb(245,126,43)" fg:x="26575" fg:w="8"/><text x="43.7002%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (119 samples, 0.19%)</title><rect x="43.2736%" y="1077" width="0.1946%" height="15" fill="rgb(227,7,22)" fg:x="26467" fg:w="119"/><text x="43.5236%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (67 samples, 0.11%)</title><rect x="43.3586%" y="1061" width="0.1095%" height="15" fill="rgb(252,90,44)" fg:x="26519" fg:w="67"/><text x="43.6086%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (129 samples, 0.21%)</title><rect x="43.2589%" y="1125" width="0.2109%" height="15" fill="rgb(253,91,0)" fg:x="26458" fg:w="129"/><text x="43.5089%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (128 samples, 0.21%)</title><rect x="43.2605%" y="1109" width="0.2093%" height="15" fill="rgb(252,175,49)" fg:x="26459" fg:w="128"/><text x="43.5105%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (128 samples, 0.21%)</title><rect x="43.2605%" y="1093" width="0.2093%" height="15" fill="rgb(246,150,1)" fg:x="26459" fg:w="128"/><text x="43.5105%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::Loader&lt;&amp;str,P,R&gt;::load (297 samples, 0.49%)</title><rect x="42.9858%" y="1189" width="0.4856%" height="15" fill="rgb(241,192,25)" fg:x="26291" fg:w="297"/><text x="43.2358%" y="1199.50"></text></g><g><title>sk-gen`jaq_core::load::parse_main (287 samples, 0.47%)</title><rect x="43.0022%" y="1173" width="0.4692%" height="15" fill="rgb(239,187,11)" fg:x="26301" fg:w="287"/><text x="43.2522%" y="1183.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::parse (133 samples, 0.22%)</title><rect x="43.2540%" y="1157" width="0.2175%" height="15" fill="rgb(218,202,51)" fg:x="26455" fg:w="133"/><text x="43.5040%" y="1167.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (130 samples, 0.21%)</title><rect x="43.2589%" y="1141" width="0.2126%" height="15" fill="rgb(225,176,8)" fg:x="26458" fg:w="130"/><text x="43.5089%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.03%)</title><rect x="43.4747%" y="1173" width="0.0311%" height="15" fill="rgb(219,122,41)" fg:x="26590" fg:w="19"/><text x="43.7247%" y="1183.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.03%)</title><rect x="43.4780%" y="1157" width="0.0278%" height="15" fill="rgb(248,140,20)" fg:x="26592" fg:w="17"/><text x="43.7280%" y="1167.50"></text></g><g><title>sk-gen`jaq_core::load::Loader&lt;&amp;str,P,fn(jaq_core::load::Import&lt;&amp;str,P&gt;) .&gt; core::result::Result&lt;jaq_core::load::File&lt;alloc::string::String,P&gt;,alloc::string::String&gt;&gt;::new (23 samples, 0.04%)</title><rect x="43.4714%" y="1189" width="0.0376%" height="15" fill="rgb(245,41,37)" fg:x="26588" fg:w="23"/><text x="43.7214%" y="1199.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.03%)</title><rect x="43.6219%" y="965" width="0.0278%" height="15" fill="rgb(235,82,39)" fg:x="26680" fg:w="17"/><text x="43.8719%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="43.6497%" y="965" width="0.0147%" height="15" fill="rgb(230,108,42)" fg:x="26697" fg:w="9"/><text x="43.8997%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="43.6529%" y="949" width="0.0114%" height="15" fill="rgb(215,150,50)" fg:x="26699" fg:w="7"/><text x="43.9029%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.03%)</title><rect x="43.6824%" y="933" width="0.0327%" height="15" fill="rgb(233,212,5)" fg:x="26717" fg:w="20"/><text x="43.9324%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.03%)</title><rect x="43.6873%" y="917" width="0.0278%" height="15" fill="rgb(245,80,22)" fg:x="26720" fg:w="17"/><text x="43.9373%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="43.6922%" y="901" width="0.0229%" height="15" fill="rgb(238,129,16)" fg:x="26723" fg:w="14"/><text x="43.9422%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.03%)</title><rect x="43.7347%" y="901" width="0.0311%" height="15" fill="rgb(240,19,0)" fg:x="26749" fg:w="19"/><text x="43.9847%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="43.7657%" y="901" width="0.0196%" height="15" fill="rgb(232,42,35)" fg:x="26768" fg:w="12"/><text x="44.0157%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="43.7723%" y="885" width="0.0131%" height="15" fill="rgb(223,130,24)" fg:x="26772" fg:w="8"/><text x="44.0223%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="43.8099%" y="869" width="0.0262%" height="15" fill="rgb(237,16,22)" fg:x="26795" fg:w="16"/><text x="44.0599%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.02%)</title><rect x="43.8115%" y="853" width="0.0245%" height="15" fill="rgb(248,192,20)" fg:x="26796" fg:w="15"/><text x="44.0615%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="43.8230%" y="837" width="0.0131%" height="15" fill="rgb(233,167,2)" fg:x="26803" fg:w="8"/><text x="44.0730%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="43.8638%" y="837" width="0.0147%" height="15" fill="rgb(252,71,44)" fg:x="26828" fg:w="9"/><text x="44.1138%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="43.8965%" y="821" width="0.0114%" height="15" fill="rgb(238,37,47)" fg:x="26848" fg:w="7"/><text x="44.1465%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="43.9080%" y="821" width="0.0131%" height="15" fill="rgb(214,202,54)" fg:x="26855" fg:w="8"/><text x="44.1580%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="43.9309%" y="805" width="0.0147%" height="15" fill="rgb(254,165,40)" fg:x="26869" fg:w="9"/><text x="44.1809%" y="815.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="43.9325%" y="789" width="0.0131%" height="15" fill="rgb(246,173,38)" fg:x="26870" fg:w="8"/><text x="44.1825%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (19 samples, 0.03%)</title><rect x="43.9211%" y="821" width="0.0311%" height="15" fill="rgb(215,3,27)" fg:x="26863" fg:w="19"/><text x="44.1711%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="43.9521%" y="821" width="0.0180%" height="15" fill="rgb(239,169,51)" fg:x="26882" fg:w="11"/><text x="44.2021%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="43.9538%" y="805" width="0.0164%" height="15" fill="rgb(212,5,25)" fg:x="26883" fg:w="10"/><text x="44.2038%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="43.9865%" y="757" width="0.0147%" height="15" fill="rgb(243,45,17)" fg:x="26903" fg:w="9"/><text x="44.2365%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="43.9881%" y="741" width="0.0131%" height="15" fill="rgb(242,97,9)" fg:x="26904" fg:w="8"/><text x="44.2381%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="44.0404%" y="725" width="0.0147%" height="15" fill="rgb(228,71,31)" fg:x="26936" fg:w="9"/><text x="44.2904%" y="735.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="44.0551%" y="725" width="0.0196%" height="15" fill="rgb(252,184,16)" fg:x="26945" fg:w="12"/><text x="44.3051%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="44.0584%" y="709" width="0.0164%" height="15" fill="rgb(236,169,46)" fg:x="26947" fg:w="10"/><text x="44.3084%" y="719.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="44.1451%" y="629" width="0.0229%" height="15" fill="rgb(207,17,47)" fg:x="27000" fg:w="14"/><text x="44.3951%" y="639.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="44.1467%" y="613" width="0.0213%" height="15" fill="rgb(206,201,28)" fg:x="27001" fg:w="13"/><text x="44.3967%" y="623.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (25 samples, 0.04%)</title><rect x="44.1287%" y="645" width="0.0409%" height="15" fill="rgb(224,184,23)" fg:x="26990" fg:w="25"/><text x="44.3787%" y="655.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.07%)</title><rect x="44.1075%" y="693" width="0.0670%" height="15" fill="rgb(208,139,48)" fg:x="26977" fg:w="41"/><text x="44.3575%" y="703.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.07%)</title><rect x="44.1091%" y="677" width="0.0654%" height="15" fill="rgb(208,130,10)" fg:x="26978" fg:w="40"/><text x="44.3591%" y="687.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (29 samples, 0.05%)</title><rect x="44.1271%" y="661" width="0.0474%" height="15" fill="rgb(211,213,45)" fg:x="26989" fg:w="29"/><text x="44.3771%" y="671.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (54 samples, 0.09%)</title><rect x="44.0993%" y="709" width="0.0883%" height="15" fill="rgb(235,100,30)" fg:x="26972" fg:w="54"/><text x="44.3493%" y="719.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (7 samples, 0.01%)</title><rect x="44.1761%" y="693" width="0.0114%" height="15" fill="rgb(206,144,31)" fg:x="27019" fg:w="7"/><text x="44.4261%" y="703.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="44.1876%" y="709" width="0.0147%" height="15" fill="rgb(224,200,26)" fg:x="27026" fg:w="9"/><text x="44.4376%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="44.1876%" y="693" width="0.0147%" height="15" fill="rgb(247,104,53)" fg:x="27026" fg:w="9"/><text x="44.4376%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.01%)</title><rect x="44.1908%" y="677" width="0.0114%" height="15" fill="rgb(220,14,17)" fg:x="27028" fg:w="7"/><text x="44.4408%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="44.2301%" y="645" width="0.0180%" height="15" fill="rgb(230,140,40)" fg:x="27052" fg:w="11"/><text x="44.4801%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="44.2350%" y="629" width="0.0131%" height="15" fill="rgb(229,2,41)" fg:x="27055" fg:w="8"/><text x="44.4850%" y="639.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="44.2775%" y="613" width="0.0114%" height="15" fill="rgb(232,89,16)" fg:x="27081" fg:w="7"/><text x="44.5275%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="44.2938%" y="597" width="0.0114%" height="15" fill="rgb(247,59,52)" fg:x="27091" fg:w="7"/><text x="44.5438%" y="607.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.07%)</title><rect x="44.2562%" y="629" width="0.0736%" height="15" fill="rgb(226,110,21)" fg:x="27068" fg:w="45"/><text x="44.5062%" y="639.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (25 samples, 0.04%)</title><rect x="44.2889%" y="613" width="0.0409%" height="15" fill="rgb(224,176,43)" fg:x="27088" fg:w="25"/><text x="44.5389%" y="623.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="44.3053%" y="597" width="0.0245%" height="15" fill="rgb(221,73,6)" fg:x="27098" fg:w="15"/><text x="44.5553%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14 samples, 0.02%)</title><rect x="44.3069%" y="581" width="0.0229%" height="15" fill="rgb(232,78,19)" fg:x="27099" fg:w="14"/><text x="44.5569%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.01%)</title><rect x="44.3151%" y="565" width="0.0147%" height="15" fill="rgb(233,112,48)" fg:x="27104" fg:w="9"/><text x="44.5651%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (8 samples, 0.01%)</title><rect x="44.3167%" y="549" width="0.0131%" height="15" fill="rgb(243,131,47)" fg:x="27105" fg:w="8"/><text x="44.5667%" y="559.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 0.08%)</title><rect x="44.2513%" y="645" width="0.0801%" height="15" fill="rgb(226,51,1)" fg:x="27065" fg:w="49"/><text x="44.5013%" y="655.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (17 samples, 0.03%)</title><rect x="44.3364%" y="645" width="0.0278%" height="15" fill="rgb(247,58,7)" fg:x="27117" fg:w="17"/><text x="44.5864%" y="655.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (88 samples, 0.14%)</title><rect x="44.2235%" y="661" width="0.1439%" height="15" fill="rgb(209,7,32)" fg:x="27048" fg:w="88"/><text x="44.4735%" y="671.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (103 samples, 0.17%)</title><rect x="44.2023%" y="709" width="0.1684%" height="15" fill="rgb(209,39,41)" fg:x="27035" fg:w="103"/><text x="44.4523%" y="719.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 0.16%)</title><rect x="44.2072%" y="693" width="0.1635%" height="15" fill="rgb(226,182,46)" fg:x="27038" fg:w="100"/><text x="44.4572%" y="703.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (93 samples, 0.15%)</title><rect x="44.2186%" y="677" width="0.1521%" height="15" fill="rgb(230,219,10)" fg:x="27045" fg:w="93"/><text x="44.4686%" y="687.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (219 samples, 0.36%)</title><rect x="44.0159%" y="741" width="0.3581%" height="15" fill="rgb(227,175,30)" fg:x="26921" fg:w="219"/><text x="44.2659%" y="751.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (180 samples, 0.29%)</title><rect x="44.0797%" y="725" width="0.2943%" height="15" fill="rgb(217,2,50)" fg:x="26960" fg:w="180"/><text x="44.3297%" y="735.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (223 samples, 0.36%)</title><rect x="44.0110%" y="757" width="0.3646%" height="15" fill="rgb(229,160,0)" fg:x="26918" fg:w="223"/><text x="44.2610%" y="767.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (17 samples, 0.03%)</title><rect x="44.3838%" y="757" width="0.0278%" height="15" fill="rgb(207,78,37)" fg:x="27146" fg:w="17"/><text x="44.6338%" y="767.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (265 samples, 0.43%)</title><rect x="43.9799%" y="773" width="0.4333%" height="15" fill="rgb(225,57,0)" fg:x="26899" fg:w="265"/><text x="44.2299%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (272 samples, 0.44%)</title><rect x="43.9701%" y="821" width="0.4447%" height="15" fill="rgb(232,154,2)" fg:x="26893" fg:w="272"/><text x="44.2201%" y="831.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (269 samples, 0.44%)</title><rect x="43.9750%" y="805" width="0.4398%" height="15" fill="rgb(241,212,25)" fg:x="26896" fg:w="269"/><text x="44.2250%" y="815.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (268 samples, 0.44%)</title><rect x="43.9767%" y="789" width="0.4382%" height="15" fill="rgb(226,69,20)" fg:x="26897" fg:w="268"/><text x="44.2267%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (354 samples, 0.58%)</title><rect x="43.8393%" y="869" width="0.5788%" height="15" fill="rgb(247,184,54)" fg:x="26813" fg:w="354"/><text x="44.0893%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (350 samples, 0.57%)</title><rect x="43.8459%" y="853" width="0.5723%" height="15" fill="rgb(210,145,0)" fg:x="26817" fg:w="350"/><text x="44.0959%" y="863.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (322 samples, 0.53%)</title><rect x="43.8916%" y="837" width="0.5265%" height="15" fill="rgb(253,82,12)" fg:x="26845" fg:w="322"/><text x="44.1416%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (16 samples, 0.03%)</title><rect x="44.4197%" y="869" width="0.0262%" height="15" fill="rgb(245,42,11)" fg:x="27168" fg:w="16"/><text x="44.6697%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (394 samples, 0.64%)</title><rect x="43.8050%" y="885" width="0.6442%" height="15" fill="rgb(219,147,32)" fg:x="26792" fg:w="394"/><text x="44.0550%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (455 samples, 0.74%)</title><rect x="43.7200%" y="933" width="0.7439%" height="15" fill="rgb(246,12,7)" fg:x="26740" fg:w="455"/><text x="43.9700%" y="943.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (454 samples, 0.74%)</title><rect x="43.7216%" y="917" width="0.7423%" height="15" fill="rgb(243,50,9)" fg:x="26741" fg:w="454"/><text x="43.9716%" y="927.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (415 samples, 0.68%)</title><rect x="43.7854%" y="901" width="0.6785%" height="15" fill="rgb(219,149,6)" fg:x="26780" fg:w="415"/><text x="44.0354%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (504 samples, 0.82%)</title><rect x="43.6709%" y="949" width="0.8240%" height="15" fill="rgb(241,51,42)" fg:x="26710" fg:w="504"/><text x="43.9209%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (12 samples, 0.02%)</title><rect x="44.4753%" y="933" width="0.0196%" height="15" fill="rgb(226,128,27)" fg:x="27202" fg:w="12"/><text x="44.7253%" y="943.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (552 samples, 0.90%)</title><rect x="43.6006%" y="981" width="0.9025%" height="15" fill="rgb(244,144,4)" fg:x="26667" fg:w="552"/><text x="43.8506%" y="991.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (513 samples, 0.84%)</title><rect x="43.6644%" y="965" width="0.8388%" height="15" fill="rgb(221,4,13)" fg:x="26706" fg:w="513"/><text x="43.9144%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (564 samples, 0.92%)</title><rect x="43.5843%" y="997" width="0.9221%" height="15" fill="rgb(208,170,28)" fg:x="26657" fg:w="564"/><text x="43.8343%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (23 samples, 0.04%)</title><rect x="44.5080%" y="997" width="0.0376%" height="15" fill="rgb(226,131,13)" fg:x="27222" fg:w="23"/><text x="44.7580%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (599 samples, 0.98%)</title><rect x="43.5712%" y="1013" width="0.9794%" height="15" fill="rgb(215,72,41)" fg:x="26649" fg:w="599"/><text x="43.8212%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (628 samples, 1.03%)</title><rect x="43.5287%" y="1061" width="1.0268%" height="15" fill="rgb(243,108,20)" fg:x="26623" fg:w="628"/><text x="43.7787%" y="1071.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (622 samples, 1.02%)</title><rect x="43.5385%" y="1045" width="1.0170%" height="15" fill="rgb(230,189,17)" fg:x="26629" fg:w="622"/><text x="43.7885%" y="1055.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (606 samples, 0.99%)</title><rect x="43.5646%" y="1029" width="0.9908%" height="15" fill="rgb(220,50,17)" fg:x="26645" fg:w="606"/><text x="43.8146%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (14 samples, 0.02%)</title><rect x="44.5587%" y="1061" width="0.0229%" height="15" fill="rgb(248,152,48)" fg:x="27253" fg:w="14"/><text x="44.8087%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (649 samples, 1.06%)</title><rect x="43.5221%" y="1077" width="1.0611%" height="15" fill="rgb(244,91,11)" fg:x="26619" fg:w="649"/><text x="43.7721%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (658 samples, 1.08%)</title><rect x="43.5107%" y="1173" width="1.0758%" height="15" fill="rgb(220,157,5)" fg:x="26612" fg:w="658"/><text x="43.7607%" y="1183.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (658 samples, 1.08%)</title><rect x="43.5107%" y="1157" width="1.0758%" height="15" fill="rgb(253,137,8)" fg:x="26612" fg:w="658"/><text x="43.7607%" y="1167.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (657 samples, 1.07%)</title><rect x="43.5123%" y="1141" width="1.0742%" height="15" fill="rgb(217,137,51)" fg:x="26613" fg:w="657"/><text x="43.7623%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (655 samples, 1.07%)</title><rect x="43.5156%" y="1125" width="1.0709%" height="15" fill="rgb(218,209,53)" fg:x="26615" fg:w="655"/><text x="43.7656%" y="1135.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (654 samples, 1.07%)</title><rect x="43.5172%" y="1109" width="1.0693%" height="15" fill="rgb(249,137,25)" fg:x="26616" fg:w="654"/><text x="43.7672%" y="1119.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (651 samples, 1.06%)</title><rect x="43.5221%" y="1093" width="1.0644%" height="15" fill="rgb(239,155,26)" fg:x="26619" fg:w="651"/><text x="43.7721%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="44.6143%" y="1125" width="0.0131%" height="15" fill="rgb(227,85,46)" fg:x="27287" fg:w="8"/><text x="44.8643%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="44.6454%" y="1109" width="0.0131%" height="15" fill="rgb(251,107,43)" fg:x="27306" fg:w="8"/><text x="44.8954%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.02%)</title><rect x="44.6584%" y="1109" width="0.0164%" height="15" fill="rgb(234,170,33)" fg:x="27314" fg:w="10"/><text x="44.9084%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_free (9 samples, 0.01%)</title><rect x="44.7026%" y="1093" width="0.0147%" height="15" fill="rgb(206,29,35)" fg:x="27341" fg:w="9"/><text x="44.9526%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.04%)</title><rect x="44.7173%" y="1093" width="0.0360%" height="15" fill="rgb(227,138,25)" fg:x="27350" fg:w="22"/><text x="44.9673%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.03%)</title><rect x="44.7762%" y="1077" width="0.0311%" height="15" fill="rgb(249,131,35)" fg:x="27386" fg:w="19"/><text x="45.0262%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.03%)</title><rect x="44.8399%" y="1061" width="0.0311%" height="15" fill="rgb(239,6,40)" fg:x="27425" fg:w="19"/><text x="45.0899%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_free (9 samples, 0.01%)</title><rect x="44.8857%" y="1045" width="0.0147%" height="15" fill="rgb(246,136,47)" fg:x="27453" fg:w="9"/><text x="45.1357%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="44.9004%" y="1045" width="0.0114%" height="15" fill="rgb(253,58,26)" fg:x="27462" fg:w="7"/><text x="45.1504%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="44.9495%" y="1029" width="0.0245%" height="15" fill="rgb(237,141,10)" fg:x="27492" fg:w="15"/><text x="45.1995%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.03%)</title><rect x="45.0051%" y="1013" width="0.0278%" height="15" fill="rgb(234,156,12)" fg:x="27526" fg:w="17"/><text x="45.2551%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.02%)</title><rect x="45.0427%" y="997" width="0.0180%" height="15" fill="rgb(243,224,36)" fg:x="27549" fg:w="11"/><text x="45.2927%" y="1007.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (44 samples, 0.07%)</title><rect x="44.9904%" y="1029" width="0.0719%" height="15" fill="rgb(205,229,51)" fg:x="27517" fg:w="44"/><text x="45.2404%" y="1039.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (13 samples, 0.02%)</title><rect x="45.0410%" y="1013" width="0.0213%" height="15" fill="rgb(223,189,4)" fg:x="27548" fg:w="13"/><text x="45.2910%" y="1023.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (81 samples, 0.13%)</title><rect x="44.9331%" y="1045" width="0.1324%" height="15" fill="rgb(249,167,54)" fg:x="27482" fg:w="81"/><text x="45.1831%" y="1055.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (118 samples, 0.19%)</title><rect x="44.8792%" y="1061" width="0.1929%" height="15" fill="rgb(218,34,28)" fg:x="27449" fg:w="118"/><text x="45.1292%" y="1071.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (198 samples, 0.32%)</title><rect x="44.7647%" y="1093" width="0.3237%" height="15" fill="rgb(232,109,42)" fg:x="27379" fg:w="198"/><text x="45.0147%" y="1103.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (163 samples, 0.27%)</title><rect x="44.8219%" y="1077" width="0.2665%" height="15" fill="rgb(248,214,46)" fg:x="27414" fg:w="163"/><text x="45.0719%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_json::Val&gt; (10 samples, 0.02%)</title><rect x="45.0721%" y="1061" width="0.0164%" height="15" fill="rgb(244,216,40)" fg:x="27567" fg:w="10"/><text x="45.3221%" y="1071.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (249 samples, 0.41%)</title><rect x="44.6895%" y="1109" width="0.4071%" height="15" fill="rgb(231,226,31)" fg:x="27333" fg:w="249"/><text x="44.9395%" y="1119.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (287 samples, 0.47%)</title><rect x="44.6372%" y="1125" width="0.4692%" height="15" fill="rgb(238,38,43)" fg:x="27301" fg:w="287"/><text x="44.8872%" y="1135.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (311 samples, 0.51%)</title><rect x="44.6012%" y="1141" width="0.5085%" height="15" fill="rgb(208,88,43)" fg:x="27279" fg:w="311"/><text x="44.8512%" y="1151.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (980 samples, 1.60%)</title><rect x="43.5107%" y="1189" width="1.6023%" height="15" fill="rgb(205,136,37)" fg:x="26612" fg:w="980"/><text x="43.7607%" y="1199.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (322 samples, 0.53%)</title><rect x="44.5865%" y="1173" width="0.5265%" height="15" fill="rgb(237,34,14)" fg:x="27270" fg:w="322"/><text x="44.8365%" y="1183.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (322 samples, 0.53%)</title><rect x="44.5865%" y="1157" width="0.5265%" height="15" fill="rgb(236,193,44)" fg:x="27270" fg:w="322"/><text x="44.8365%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (49 samples, 0.08%)</title><rect x="45.1473%" y="1157" width="0.0801%" height="15" fill="rgb(231,48,10)" fg:x="27613" fg:w="49"/><text x="45.3973%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (23 samples, 0.04%)</title><rect x="45.1898%" y="1141" width="0.0376%" height="15" fill="rgb(213,141,34)" fg:x="27639" fg:w="23"/><text x="45.4398%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="45.2536%" y="1045" width="0.0114%" height="15" fill="rgb(249,130,34)" fg:x="27678" fg:w="7"/><text x="45.5036%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (16 samples, 0.03%)</title><rect x="45.2421%" y="1061" width="0.0262%" height="15" fill="rgb(219,42,41)" fg:x="27671" fg:w="16"/><text x="45.4921%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (22 samples, 0.04%)</title><rect x="45.2421%" y="1077" width="0.0360%" height="15" fill="rgb(224,100,54)" fg:x="27671" fg:w="22"/><text x="45.4921%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (28 samples, 0.05%)</title><rect x="45.2405%" y="1093" width="0.0458%" height="15" fill="rgb(229,200,27)" fg:x="27670" fg:w="28"/><text x="45.4905%" y="1103.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (32 samples, 0.05%)</title><rect x="45.2372%" y="1125" width="0.0523%" height="15" fill="rgb(217,118,10)" fg:x="27668" fg:w="32"/><text x="45.4872%" y="1135.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (31 samples, 0.05%)</title><rect x="45.2389%" y="1109" width="0.0507%" height="15" fill="rgb(206,22,3)" fg:x="27669" fg:w="31"/><text x="45.4889%" y="1119.50"></text></g><g><title>sk-gen`core::str::_&lt;impl str&gt;::trim_start_matches (32 samples, 0.05%)</title><rect x="45.4007%" y="1109" width="0.0523%" height="15" fill="rgb(232,163,46)" fg:x="27768" fg:w="32"/><text x="45.6507%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::space (12 samples, 0.02%)</title><rect x="45.4563%" y="1109" width="0.0196%" height="15" fill="rgb(206,95,13)" fg:x="27802" fg:w="12"/><text x="45.7063%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="45.4972%" y="1077" width="0.0114%" height="15" fill="rgb(253,154,18)" fg:x="27827" fg:w="7"/><text x="45.7472%" y="1087.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="45.5086%" y="1077" width="0.0114%" height="15" fill="rgb(219,32,23)" fg:x="27834" fg:w="7"/><text x="45.7586%" y="1087.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="45.5086%" y="1061" width="0.0114%" height="15" fill="rgb(230,191,45)" fg:x="27834" fg:w="7"/><text x="45.7586%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.01%)</title><rect x="45.5086%" y="1045" width="0.0114%" height="15" fill="rgb(229,64,36)" fg:x="27834" fg:w="7"/><text x="45.7586%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7 samples, 0.01%)</title><rect x="45.5086%" y="1029" width="0.0114%" height="15" fill="rgb(205,129,25)" fg:x="27834" fg:w="7"/><text x="45.7586%" y="1039.50"></text></g><g><title>sk-gen`core::str::_&lt;impl str&gt;::trim_start_matches (11 samples, 0.02%)</title><rect x="45.5642%" y="1061" width="0.0180%" height="15" fill="rgb(254,112,7)" fg:x="27868" fg:w="11"/><text x="45.8142%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="45.6689%" y="997" width="0.0229%" height="15" fill="rgb(226,53,48)" fg:x="27932" fg:w="14"/><text x="45.9189%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (11 samples, 0.02%)</title><rect x="45.6738%" y="981" width="0.0180%" height="15" fill="rgb(214,153,38)" fg:x="27935" fg:w="11"/><text x="45.9238%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (59 samples, 0.10%)</title><rect x="45.6035%" y="1045" width="0.0965%" height="15" fill="rgb(243,101,7)" fg:x="27892" fg:w="59"/><text x="45.8535%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (51 samples, 0.08%)</title><rect x="45.6166%" y="1029" width="0.0834%" height="15" fill="rgb(240,140,22)" fg:x="27900" fg:w="51"/><text x="45.8666%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (25 samples, 0.04%)</title><rect x="45.6591%" y="1013" width="0.0409%" height="15" fill="rgb(235,114,2)" fg:x="27926" fg:w="25"/><text x="45.9091%" y="1023.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.01%)</title><rect x="45.6999%" y="1045" width="0.0114%" height="15" fill="rgb(242,59,12)" fg:x="27951" fg:w="7"/><text x="45.9499%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (138 samples, 0.23%)</title><rect x="45.4923%" y="1093" width="0.2256%" height="15" fill="rgb(252,134,9)" fg:x="27824" fg:w="138"/><text x="45.7423%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (119 samples, 0.19%)</title><rect x="45.5234%" y="1077" width="0.1946%" height="15" fill="rgb(236,4,44)" fg:x="27843" fg:w="119"/><text x="45.7734%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (79 samples, 0.13%)</title><rect x="45.5888%" y="1061" width="0.1292%" height="15" fill="rgb(254,172,41)" fg:x="27883" fg:w="79"/><text x="45.8388%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (308 samples, 0.50%)</title><rect x="45.2274%" y="1141" width="0.5036%" height="15" fill="rgb(244,63,20)" fg:x="27662" fg:w="308"/><text x="45.4774%" y="1151.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (266 samples, 0.43%)</title><rect x="45.2961%" y="1125" width="0.4349%" height="15" fill="rgb(250,73,31)" fg:x="27704" fg:w="266"/><text x="45.5461%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (154 samples, 0.25%)</title><rect x="45.4792%" y="1109" width="0.2518%" height="15" fill="rgb(241,38,36)" fg:x="27816" fg:w="154"/><text x="45.7292%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::lex (311 samples, 0.51%)</title><rect x="45.2274%" y="1157" width="0.5085%" height="15" fill="rgb(245,211,2)" fg:x="27662" fg:w="311"/><text x="45.4774%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.01%)</title><rect x="45.7555%" y="1029" width="0.0147%" height="15" fill="rgb(206,120,28)" fg:x="27985" fg:w="9"/><text x="46.0055%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (13 samples, 0.02%)</title><rect x="45.7555%" y="1045" width="0.0213%" height="15" fill="rgb(211,59,34)" fg:x="27985" fg:w="13"/><text x="46.0055%" y="1055.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (15 samples, 0.02%)</title><rect x="45.7555%" y="1093" width="0.0245%" height="15" fill="rgb(233,168,5)" fg:x="27985" fg:w="15"/><text x="46.0055%" y="1103.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="45.7555%" y="1077" width="0.0245%" height="15" fill="rgb(234,33,13)" fg:x="27985" fg:w="15"/><text x="46.0055%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (15 samples, 0.02%)</title><rect x="45.7555%" y="1061" width="0.0245%" height="15" fill="rgb(231,150,26)" fg:x="27985" fg:w="15"/><text x="46.0055%" y="1071.50"></text></g><g><title>sk-gen`&lt;&amp;str as core::str::pattern::Pattern&gt;::is_contained_in (10 samples, 0.02%)</title><rect x="45.7915%" y="1077" width="0.0164%" height="15" fill="rgb(217,191,4)" fg:x="28007" fg:w="10"/><text x="46.0415%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (16 samples, 0.03%)</title><rect x="45.8242%" y="1061" width="0.0262%" height="15" fill="rgb(246,198,38)" fg:x="28027" fg:w="16"/><text x="46.0742%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (14 samples, 0.02%)</title><rect x="45.8275%" y="1045" width="0.0229%" height="15" fill="rgb(245,64,37)" fg:x="28029" fg:w="14"/><text x="46.0775%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (14 samples, 0.02%)</title><rect x="45.8585%" y="1061" width="0.0229%" height="15" fill="rgb(250,30,36)" fg:x="28048" fg:w="14"/><text x="46.1085%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (11 samples, 0.02%)</title><rect x="45.9190%" y="933" width="0.0180%" height="15" fill="rgb(217,86,53)" fg:x="28085" fg:w="11"/><text x="46.1690%" y="943.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (33 samples, 0.05%)</title><rect x="45.9092%" y="1013" width="0.0540%" height="15" fill="rgb(228,157,16)" fg:x="28079" fg:w="33"/><text x="46.1592%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.05%)</title><rect x="45.9092%" y="997" width="0.0540%" height="15" fill="rgb(217,59,31)" fg:x="28079" fg:w="33"/><text x="46.1592%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (32 samples, 0.05%)</title><rect x="45.9109%" y="981" width="0.0523%" height="15" fill="rgb(237,138,41)" fg:x="28080" fg:w="32"/><text x="46.1609%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (32 samples, 0.05%)</title><rect x="45.9109%" y="965" width="0.0523%" height="15" fill="rgb(227,91,49)" fg:x="28080" fg:w="32"/><text x="46.1609%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (32 samples, 0.05%)</title><rect x="45.9109%" y="949" width="0.0523%" height="15" fill="rgb(247,21,44)" fg:x="28080" fg:w="32"/><text x="46.1609%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (16 samples, 0.03%)</title><rect x="45.9370%" y="933" width="0.0262%" height="15" fill="rgb(219,210,51)" fg:x="28096" fg:w="16"/><text x="46.1870%" y="943.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (9 samples, 0.01%)</title><rect x="45.9485%" y="917" width="0.0147%" height="15" fill="rgb(209,140,6)" fg:x="28103" fg:w="9"/><text x="46.1985%" y="927.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (9 samples, 0.01%)</title><rect x="45.9485%" y="901" width="0.0147%" height="15" fill="rgb(221,188,24)" fg:x="28103" fg:w="9"/><text x="46.1985%" y="911.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (8 samples, 0.01%)</title><rect x="45.9501%" y="885" width="0.0131%" height="15" fill="rgb(232,154,20)" fg:x="28104" fg:w="8"/><text x="46.2001%" y="895.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="45.9517%" y="869" width="0.0114%" height="15" fill="rgb(244,137,50)" fg:x="28105" fg:w="7"/><text x="46.2017%" y="879.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::def_tail (42 samples, 0.07%)</title><rect x="45.9043%" y="1045" width="0.0687%" height="15" fill="rgb(225,185,43)" fg:x="28076" fg:w="42"/><text x="46.1543%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (39 samples, 0.06%)</title><rect x="45.9092%" y="1029" width="0.0638%" height="15" fill="rgb(213,205,38)" fg:x="28079" fg:w="39"/><text x="46.1592%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (9 samples, 0.01%)</title><rect x="45.9959%" y="949" width="0.0147%" height="15" fill="rgb(236,73,12)" fg:x="28132" fg:w="9"/><text x="46.2459%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (8 samples, 0.01%)</title><rect x="45.9975%" y="933" width="0.0131%" height="15" fill="rgb(235,219,13)" fg:x="28133" fg:w="8"/><text x="46.2475%" y="943.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (13 samples, 0.02%)</title><rect x="45.9926%" y="965" width="0.0213%" height="15" fill="rgb(218,59,36)" fg:x="28130" fg:w="13"/><text x="46.2426%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (21 samples, 0.03%)</title><rect x="45.9861%" y="997" width="0.0343%" height="15" fill="rgb(205,110,39)" fg:x="28126" fg:w="21"/><text x="46.2361%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (18 samples, 0.03%)</title><rect x="45.9910%" y="981" width="0.0294%" height="15" fill="rgb(218,206,42)" fg:x="28129" fg:w="18"/><text x="46.2410%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (25 samples, 0.04%)</title><rect x="45.9828%" y="1013" width="0.0409%" height="15" fill="rgb(248,125,24)" fg:x="28124" fg:w="25"/><text x="46.2328%" y="1023.50"></text></g><g><title>sk-gen`core::ops::function::Fn::call (12 samples, 0.02%)</title><rect x="46.0400%" y="965" width="0.0196%" height="15" fill="rgb(242,28,27)" fg:x="28159" fg:w="12"/><text x="46.2900%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (11 samples, 0.02%)</title><rect x="46.0417%" y="949" width="0.0180%" height="15" fill="rgb(216,228,15)" fg:x="28160" fg:w="11"/><text x="46.2917%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (27 samples, 0.04%)</title><rect x="46.0318%" y="997" width="0.0441%" height="15" fill="rgb(235,116,46)" fg:x="28154" fg:w="27"/><text x="46.2818%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (25 samples, 0.04%)</title><rect x="46.0351%" y="981" width="0.0409%" height="15" fill="rgb(224,18,32)" fg:x="28156" fg:w="25"/><text x="46.2851%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (10 samples, 0.02%)</title><rect x="46.0596%" y="965" width="0.0164%" height="15" fill="rgb(252,5,12)" fg:x="28171" fg:w="10"/><text x="46.3096%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (9 samples, 0.01%)</title><rect x="46.0613%" y="949" width="0.0147%" height="15" fill="rgb(251,36,5)" fg:x="28172" fg:w="9"/><text x="46.3113%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path (8 samples, 0.01%)</title><rect x="46.0629%" y="933" width="0.0131%" height="15" fill="rgb(217,53,14)" fg:x="28173" fg:w="8"/><text x="46.3129%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="46.0629%" y="917" width="0.0131%" height="15" fill="rgb(215,86,45)" fg:x="28173" fg:w="8"/><text x="46.3129%" y="927.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (33 samples, 0.05%)</title><rect x="46.0237%" y="1013" width="0.0540%" height="15" fill="rgb(242,169,11)" fg:x="28149" fg:w="33"/><text x="46.2737%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (67 samples, 0.11%)</title><rect x="45.9730%" y="1045" width="0.1095%" height="15" fill="rgb(211,213,45)" fg:x="28118" fg:w="67"/><text x="46.2230%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (66 samples, 0.11%)</title><rect x="45.9746%" y="1029" width="0.1079%" height="15" fill="rgb(205,88,11)" fg:x="28119" fg:w="66"/><text x="46.2246%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (7 samples, 0.01%)</title><rect x="46.1022%" y="949" width="0.0114%" height="15" fill="rgb(252,69,26)" fg:x="28197" fg:w="7"/><text x="46.3522%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (20 samples, 0.03%)</title><rect x="46.0825%" y="1045" width="0.0327%" height="15" fill="rgb(246,123,37)" fg:x="28185" fg:w="20"/><text x="46.3325%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (16 samples, 0.03%)</title><rect x="46.0891%" y="1029" width="0.0262%" height="15" fill="rgb(212,205,5)" fg:x="28189" fg:w="16"/><text x="46.3391%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (14 samples, 0.02%)</title><rect x="46.0923%" y="1013" width="0.0229%" height="15" fill="rgb(253,148,0)" fg:x="28191" fg:w="14"/><text x="46.3423%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (14 samples, 0.02%)</title><rect x="46.0923%" y="997" width="0.0229%" height="15" fill="rgb(239,22,4)" fg:x="28191" fg:w="14"/><text x="46.3423%" y="1007.50"></text></g><g><title>sk-gen`core::ops::function::Fn::call (13 samples, 0.02%)</title><rect x="46.0940%" y="981" width="0.0213%" height="15" fill="rgb(226,26,53)" fg:x="28192" fg:w="13"/><text x="46.3440%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (9 samples, 0.01%)</title><rect x="46.1005%" y="965" width="0.0147%" height="15" fill="rgb(225,229,45)" fg:x="28196" fg:w="9"/><text x="46.3505%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path (10 samples, 0.02%)</title><rect x="46.1152%" y="1045" width="0.0164%" height="15" fill="rgb(220,60,37)" fg:x="28205" fg:w="10"/><text x="46.3652%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="46.1152%" y="1029" width="0.0164%" height="15" fill="rgb(217,180,35)" fg:x="28205" fg:w="10"/><text x="46.3652%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (10 samples, 0.02%)</title><rect x="46.1414%" y="1029" width="0.0164%" height="15" fill="rgb(229,7,53)" fg:x="28221" fg:w="10"/><text x="46.3914%" y="1039.50"></text></g><g><title>sk-gen`alloc::alloc::exchange_malloc (7 samples, 0.01%)</title><rect x="46.1741%" y="933" width="0.0114%" height="15" fill="rgb(254,137,3)" fg:x="28241" fg:w="7"/><text x="46.4241%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="46.1741%" y="917" width="0.0114%" height="15" fill="rgb(215,140,41)" fg:x="28241" fg:w="7"/><text x="46.4241%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.01%)</title><rect x="46.1741%" y="901" width="0.0114%" height="15" fill="rgb(250,80,15)" fg:x="28241" fg:w="7"/><text x="46.4241%" y="911.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (10 samples, 0.02%)</title><rect x="46.1725%" y="981" width="0.0164%" height="15" fill="rgb(252,191,6)" fg:x="28240" fg:w="10"/><text x="46.4225%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (9 samples, 0.01%)</title><rect x="46.1741%" y="965" width="0.0147%" height="15" fill="rgb(246,217,18)" fg:x="28241" fg:w="9"/><text x="46.4241%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (9 samples, 0.01%)</title><rect x="46.1741%" y="949" width="0.0147%" height="15" fill="rgb(223,93,7)" fg:x="28241" fg:w="9"/><text x="46.4241%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (188 samples, 0.31%)</title><rect x="45.8831%" y="1061" width="0.3074%" height="15" fill="rgb(225,55,52)" fg:x="28063" fg:w="188"/><text x="46.1331%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (36 samples, 0.06%)</title><rect x="46.1316%" y="1045" width="0.0589%" height="15" fill="rgb(240,31,24)" fg:x="28215" fg:w="36"/><text x="46.3816%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (20 samples, 0.03%)</title><rect x="46.1577%" y="1029" width="0.0327%" height="15" fill="rgb(205,56,52)" fg:x="28231" fg:w="20"/><text x="46.4077%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (12 samples, 0.02%)</title><rect x="46.1708%" y="1013" width="0.0196%" height="15" fill="rgb(246,146,12)" fg:x="28239" fg:w="12"/><text x="46.4208%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (12 samples, 0.02%)</title><rect x="46.1708%" y="997" width="0.0196%" height="15" fill="rgb(239,84,36)" fg:x="28239" fg:w="12"/><text x="46.4208%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (10 samples, 0.02%)</title><rect x="46.2068%" y="1045" width="0.0164%" height="15" fill="rgb(207,41,40)" fg:x="28261" fg:w="10"/><text x="46.4568%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (7 samples, 0.01%)</title><rect x="46.2264%" y="1013" width="0.0114%" height="15" fill="rgb(241,179,25)" fg:x="28273" fg:w="7"/><text x="46.4764%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (10 samples, 0.02%)</title><rect x="46.2248%" y="1029" width="0.0164%" height="15" fill="rgb(210,0,34)" fg:x="28272" fg:w="10"/><text x="46.4748%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (12 samples, 0.02%)</title><rect x="46.2231%" y="1045" width="0.0196%" height="15" fill="rgb(225,217,29)" fg:x="28271" fg:w="12"/><text x="46.4731%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (34 samples, 0.06%)</title><rect x="46.1937%" y="1061" width="0.0556%" height="15" fill="rgb(216,191,38)" fg:x="28253" fg:w="34"/><text x="46.4437%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::def_tail (289 samples, 0.47%)</title><rect x="45.7801%" y="1093" width="0.4725%" height="15" fill="rgb(232,140,52)" fg:x="28000" fg:w="289"/><text x="46.0301%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (269 samples, 0.44%)</title><rect x="45.8128%" y="1077" width="0.4398%" height="15" fill="rgb(223,158,51)" fg:x="28020" fg:w="269"/><text x="46.0628%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (316 samples, 0.52%)</title><rect x="45.7375%" y="1109" width="0.5167%" height="15" fill="rgb(235,29,51)" fg:x="27974" fg:w="316"/><text x="45.9875%" y="1119.50"></text></g><g><title>sk-gen`jaq_json::defs (699 samples, 1.14%)</title><rect x="45.1130%" y="1189" width="1.1429%" height="15" fill="rgb(215,181,18)" fg:x="27592" fg:w="699"/><text x="45.3630%" y="1199.50"></text></g><g><title>sk-gen`jaq_core::load::parse (685 samples, 1.12%)</title><rect x="45.1359%" y="1173" width="1.1200%" height="15" fill="rgb(227,125,34)" fg:x="27606" fg:w="685"/><text x="45.3859%" y="1183.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::parse (317 samples, 0.52%)</title><rect x="45.7375%" y="1157" width="0.5183%" height="15" fill="rgb(230,197,49)" fg:x="27974" fg:w="317"/><text x="45.9875%" y="1167.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::defs (317 samples, 0.52%)</title><rect x="45.7375%" y="1141" width="0.5183%" height="15" fill="rgb(239,141,16)" fg:x="27974" fg:w="317"/><text x="45.9875%" y="1151.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (317 samples, 0.52%)</title><rect x="45.7375%" y="1125" width="0.5183%" height="15" fill="rgb(225,105,43)" fg:x="27974" fg:w="317"/><text x="45.9875%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (28 samples, 0.05%)</title><rect x="46.2935%" y="1173" width="0.0458%" height="15" fill="rgb(214,131,14)" fg:x="28314" fg:w="28"/><text x="46.5435%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.02%)</title><rect x="46.3768%" y="1141" width="0.0164%" height="15" fill="rgb(229,177,11)" fg:x="28365" fg:w="10"/><text x="46.6268%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.05%)</title><rect x="46.3490%" y="1173" width="0.0507%" height="15" fill="rgb(231,180,14)" fg:x="28348" fg:w="31"/><text x="46.5990%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.04%)</title><rect x="46.3605%" y="1157" width="0.0392%" height="15" fill="rgb(232,88,2)" fg:x="28355" fg:w="24"/><text x="46.6105%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`madvise (51 samples, 0.08%)</title><rect x="46.4014%" y="1141" width="0.0834%" height="15" fill="rgb(205,220,8)" fg:x="28380" fg:w="51"/><text x="46.6514%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (53 samples, 0.09%)</title><rect x="46.3997%" y="1173" width="0.0867%" height="15" fill="rgb(225,23,53)" fg:x="28379" fg:w="53"/><text x="46.6497%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (52 samples, 0.09%)</title><rect x="46.4014%" y="1157" width="0.0850%" height="15" fill="rgb(213,62,29)" fg:x="28380" fg:w="52"/><text x="46.6514%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (20 samples, 0.03%)</title><rect x="46.4880%" y="1173" width="0.0327%" height="15" fill="rgb(227,75,7)" fg:x="28433" fg:w="20"/><text x="46.7380%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.02%)</title><rect x="46.8036%" y="1157" width="0.0164%" height="15" fill="rgb(207,105,14)" fg:x="28626" fg:w="10"/><text x="47.0536%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (271 samples, 0.44%)</title><rect x="46.5256%" y="1173" width="0.4431%" height="15" fill="rgb(245,62,29)" fg:x="28456" fg:w="271"/><text x="46.7756%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (84 samples, 0.14%)</title><rect x="46.8314%" y="1157" width="0.1373%" height="15" fill="rgb(236,202,4)" fg:x="28643" fg:w="84"/><text x="47.0814%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (8 samples, 0.01%)</title><rect x="46.9556%" y="1141" width="0.0131%" height="15" fill="rgb(250,67,1)" fg:x="28719" fg:w="8"/><text x="47.2056%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (27 samples, 0.04%)</title><rect x="47.0292%" y="1077" width="0.0441%" height="15" fill="rgb(253,115,44)" fg:x="28764" fg:w="27"/><text x="47.2792%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (64 samples, 0.10%)</title><rect x="47.0145%" y="1093" width="0.1046%" height="15" fill="rgb(251,139,18)" fg:x="28755" fg:w="64"/><text x="47.2645%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.04%)</title><rect x="47.0750%" y="1077" width="0.0441%" height="15" fill="rgb(218,22,32)" fg:x="28792" fg:w="27"/><text x="47.3250%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (73 samples, 0.12%)</title><rect x="47.0145%" y="1109" width="0.1194%" height="15" fill="rgb(243,53,5)" fg:x="28755" fg:w="73"/><text x="47.2645%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="47.1224%" y="1093" width="0.0114%" height="15" fill="rgb(227,56,16)" fg:x="28821" fg:w="7"/><text x="47.3724%" y="1103.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (79 samples, 0.13%)</title><rect x="47.0096%" y="1141" width="0.1292%" height="15" fill="rgb(245,53,0)" fg:x="28752" fg:w="79"/><text x="47.2596%" y="1151.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (77 samples, 0.13%)</title><rect x="47.0129%" y="1125" width="0.1259%" height="15" fill="rgb(216,170,35)" fg:x="28754" fg:w="77"/><text x="47.2629%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::space (14 samples, 0.02%)</title><rect x="47.1420%" y="1141" width="0.0229%" height="15" fill="rgb(211,200,8)" fg:x="28833" fg:w="14"/><text x="47.3920%" y="1151.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::take (7 samples, 0.01%)</title><rect x="47.1649%" y="1141" width="0.0114%" height="15" fill="rgb(228,204,44)" fg:x="28847" fg:w="7"/><text x="47.4149%" y="1151.50"></text></g><g><title>sk-gen`core::str::_&lt;impl str&gt;::trim_start_matches (200 samples, 0.33%)</title><rect x="48.0691%" y="1125" width="0.3270%" height="15" fill="rgb(214,121,17)" fg:x="29400" fg:w="200"/><text x="48.3191%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::ident1 (13 samples, 0.02%)</title><rect x="48.3977%" y="1125" width="0.0213%" height="15" fill="rgb(233,64,38)" fg:x="29601" fg:w="13"/><text x="48.6477%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::space (53 samples, 0.09%)</title><rect x="48.4190%" y="1125" width="0.0867%" height="15" fill="rgb(253,54,19)" fg:x="29614" fg:w="53"/><text x="48.6690%" y="1135.50"></text></g><g><title>sk-gen`core::slice::memchr::memchr_aligned (11 samples, 0.02%)</title><rect x="48.4876%" y="1109" width="0.0180%" height="15" fill="rgb(253,94,18)" fg:x="29656" fg:w="11"/><text x="48.7376%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::take (10 samples, 0.02%)</title><rect x="48.5056%" y="1125" width="0.0164%" height="15" fill="rgb(227,57,52)" fg:x="29667" fg:w="10"/><text x="48.7556%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.03%)</title><rect x="48.6070%" y="1109" width="0.0278%" height="15" fill="rgb(230,228,50)" fg:x="29729" fg:w="17"/><text x="48.8570%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (70 samples, 0.11%)</title><rect x="48.6740%" y="1093" width="0.1145%" height="15" fill="rgb(217,205,27)" fg:x="29770" fg:w="70"/><text x="48.9240%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (39 samples, 0.06%)</title><rect x="48.7247%" y="1077" width="0.0638%" height="15" fill="rgb(252,71,50)" fg:x="29801" fg:w="39"/><text x="48.9747%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (8 samples, 0.01%)</title><rect x="48.7754%" y="1061" width="0.0131%" height="15" fill="rgb(209,86,4)" fg:x="29832" fg:w="8"/><text x="49.0254%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.04%)</title><rect x="48.8195%" y="1013" width="0.0441%" height="15" fill="rgb(229,94,0)" fg:x="29859" fg:w="27"/><text x="49.0695%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.04%)</title><rect x="48.8277%" y="997" width="0.0360%" height="15" fill="rgb(252,223,21)" fg:x="29864" fg:w="22"/><text x="49.0777%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="48.8408%" y="981" width="0.0229%" height="15" fill="rgb(230,210,4)" fg:x="29872" fg:w="14"/><text x="49.0908%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (33 samples, 0.05%)</title><rect x="48.8130%" y="1029" width="0.0540%" height="15" fill="rgb(240,149,38)" fg:x="29855" fg:w="33"/><text x="49.0630%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (12 samples, 0.02%)</title><rect x="48.8669%" y="1029" width="0.0196%" height="15" fill="rgb(254,105,20)" fg:x="29888" fg:w="12"/><text x="49.1169%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (58 samples, 0.09%)</title><rect x="48.7983%" y="1061" width="0.0948%" height="15" fill="rgb(253,87,46)" fg:x="29846" fg:w="58"/><text x="49.0483%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (58 samples, 0.09%)</title><rect x="48.7983%" y="1045" width="0.0948%" height="15" fill="rgb(253,116,33)" fg:x="29846" fg:w="58"/><text x="49.0483%" y="1055.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (68 samples, 0.11%)</title><rect x="48.7885%" y="1093" width="0.1112%" height="15" fill="rgb(229,198,5)" fg:x="29840" fg:w="68"/><text x="49.0385%" y="1103.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (62 samples, 0.10%)</title><rect x="48.7983%" y="1077" width="0.1014%" height="15" fill="rgb(242,38,37)" fg:x="29846" fg:w="62"/><text x="49.0483%" y="1087.50"></text></g><g><title>sk-gen`core::str::_&lt;impl str&gt;::trim_start_matches (60 samples, 0.10%)</title><rect x="49.4065%" y="1077" width="0.0981%" height="15" fill="rgb(242,69,53)" fg:x="30218" fg:w="60"/><text x="49.6565%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::space (22 samples, 0.04%)</title><rect x="49.5128%" y="1077" width="0.0360%" height="15" fill="rgb(249,80,16)" fg:x="30283" fg:w="22"/><text x="49.7628%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="49.6158%" y="1045" width="0.0180%" height="15" fill="rgb(206,128,11)" fg:x="30346" fg:w="11"/><text x="49.8658%" y="1055.50"></text></g><g><title>sk-gen`core::str::_&lt;impl str&gt;::trim_start_matches (10 samples, 0.02%)</title><rect x="49.7024%" y="1029" width="0.0164%" height="15" fill="rgb(212,35,20)" fg:x="30399" fg:w="10"/><text x="49.9524%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (60 samples, 0.10%)</title><rect x="49.6436%" y="1045" width="0.0981%" height="15" fill="rgb(236,79,13)" fg:x="30363" fg:w="60"/><text x="49.8936%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (11 samples, 0.02%)</title><rect x="49.7237%" y="1029" width="0.0180%" height="15" fill="rgb(233,123,3)" fg:x="30412" fg:w="11"/><text x="49.9737%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (84 samples, 0.14%)</title><rect x="49.6060%" y="1061" width="0.1373%" height="15" fill="rgb(214,93,52)" fg:x="30340" fg:w="84"/><text x="49.8560%" y="1071.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (22 samples, 0.04%)</title><rect x="49.7433%" y="1061" width="0.0360%" height="15" fill="rgb(251,37,40)" fg:x="30424" fg:w="22"/><text x="49.9933%" y="1071.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (16 samples, 0.03%)</title><rect x="49.7531%" y="1045" width="0.0262%" height="15" fill="rgb(227,80,54)" fg:x="30430" fg:w="16"/><text x="50.0031%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (16 samples, 0.03%)</title><rect x="49.7531%" y="1029" width="0.0262%" height="15" fill="rgb(254,48,11)" fg:x="30430" fg:w="16"/><text x="50.0031%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.01%)</title><rect x="49.7678%" y="1013" width="0.0114%" height="15" fill="rgb(235,193,26)" fg:x="30439" fg:w="7"/><text x="50.0178%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (709 samples, 1.16%)</title><rect x="48.6348%" y="1109" width="1.1592%" height="15" fill="rgb(229,99,21)" fg:x="29746" fg:w="709"/><text x="48.8848%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (537 samples, 0.88%)</title><rect x="48.9160%" y="1093" width="0.8780%" height="15" fill="rgb(211,140,41)" fg:x="29918" fg:w="537"/><text x="49.1660%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (144 samples, 0.24%)</title><rect x="49.5585%" y="1077" width="0.2354%" height="15" fill="rgb(240,227,30)" fg:x="30311" fg:w="144"/><text x="49.8085%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (7 samples, 0.01%)</title><rect x="49.8332%" y="1045" width="0.0114%" height="15" fill="rgb(215,224,45)" fg:x="30479" fg:w="7"/><text x="50.0832%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.01%)</title><rect x="49.8447%" y="1045" width="0.0131%" height="15" fill="rgb(206,123,31)" fg:x="30486" fg:w="8"/><text x="50.0947%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (20 samples, 0.03%)</title><rect x="49.8267%" y="1061" width="0.0327%" height="15" fill="rgb(210,138,16)" fg:x="30475" fg:w="20"/><text x="50.0767%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (28 samples, 0.05%)</title><rect x="49.8201%" y="1077" width="0.0458%" height="15" fill="rgb(228,57,28)" fg:x="30471" fg:w="28"/><text x="50.0701%" y="1087.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (44 samples, 0.07%)</title><rect x="49.8087%" y="1109" width="0.0719%" height="15" fill="rgb(242,170,10)" fg:x="30464" fg:w="44"/><text x="50.0587%" y="1119.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (40 samples, 0.07%)</title><rect x="49.8152%" y="1093" width="0.0654%" height="15" fill="rgb(228,214,39)" fg:x="30468" fg:w="40"/><text x="50.0652%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="49.8659%" y="1077" width="0.0147%" height="15" fill="rgb(218,179,33)" fg:x="30499" fg:w="9"/><text x="50.1159%" y="1087.50"></text></g><g><title>sk-gen`core::str::_&lt;impl str&gt;::trim_start_matches (14 samples, 0.02%)</title><rect x="49.8855%" y="1109" width="0.0229%" height="15" fill="rgb(235,193,39)" fg:x="30511" fg:w="14"/><text x="50.1355%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::space (13 samples, 0.02%)</title><rect x="49.9084%" y="1109" width="0.0213%" height="15" fill="rgb(219,221,36)" fg:x="30525" fg:w="13"/><text x="50.1584%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (38 samples, 0.06%)</title><rect x="49.9297%" y="1109" width="0.0621%" height="15" fill="rgb(248,218,19)" fg:x="30538" fg:w="38"/><text x="50.1797%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (1,728 samples, 2.83%)</title><rect x="47.1764%" y="1141" width="2.8253%" height="15" fill="rgb(205,50,9)" fg:x="28854" fg:w="1728"/><text x="47.4264%" y="1151.50">sk..</text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (905 samples, 1.48%)</title><rect x="48.5220%" y="1125" width="1.4797%" height="15" fill="rgb(238,81,28)" fg:x="29677" fg:w="905"/><text x="48.7720%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,863 samples, 3.05%)</title><rect x="46.9687%" y="1157" width="3.0460%" height="15" fill="rgb(235,110,19)" fg:x="28727" fg:w="1863"/><text x="47.2187%" y="1167.50">sk-..</text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (8 samples, 0.01%)</title><rect x="50.0016%" y="1141" width="0.0131%" height="15" fill="rgb(214,7,14)" fg:x="30582" fg:w="8"/><text x="50.2516%" y="1151.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::lex (1,918 samples, 3.14%)</title><rect x="46.9687%" y="1173" width="3.1359%" height="15" fill="rgb(211,77,3)" fg:x="28727" fg:w="1918"/><text x="47.2187%" y="1183.50">sk-..</text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (55 samples, 0.09%)</title><rect x="50.0147%" y="1157" width="0.0899%" height="15" fill="rgb(229,5,9)" fg:x="30590" fg:w="55"/><text x="50.2647%" y="1167.50"></text></g><g><title>sk-gen`&lt;&amp;str as core::str::pattern::Pattern&gt;::is_contained_in (8 samples, 0.01%)</title><rect x="50.1651%" y="1125" width="0.0131%" height="15" fill="rgb(225,90,11)" fg:x="30682" fg:w="8"/><text x="50.4151%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="50.1995%" y="1045" width="0.0131%" height="15" fill="rgb(242,56,8)" fg:x="30703" fg:w="8"/><text x="50.4495%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (17 samples, 0.03%)</title><rect x="50.1913%" y="1061" width="0.0278%" height="15" fill="rgb(249,212,39)" fg:x="30698" fg:w="17"/><text x="50.4413%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (24 samples, 0.04%)</title><rect x="50.1897%" y="1077" width="0.0392%" height="15" fill="rgb(236,90,9)" fg:x="30697" fg:w="24"/><text x="50.4397%" y="1087.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (34 samples, 0.06%)</title><rect x="50.1864%" y="1125" width="0.0556%" height="15" fill="rgb(206,88,35)" fg:x="30695" fg:w="34"/><text x="50.4364%" y="1135.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (34 samples, 0.06%)</title><rect x="50.1864%" y="1109" width="0.0556%" height="15" fill="rgb(205,126,30)" fg:x="30695" fg:w="34"/><text x="50.4364%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (34 samples, 0.06%)</title><rect x="50.1864%" y="1093" width="0.0556%" height="15" fill="rgb(230,176,12)" fg:x="30695" fg:w="34"/><text x="50.4364%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="50.2305%" y="1077" width="0.0114%" height="15" fill="rgb(243,19,9)" fg:x="30722" fg:w="7"/><text x="50.4805%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="50.3728%" y="1109" width="0.0164%" height="15" fill="rgb(245,171,17)" fg:x="30809" fg:w="10"/><text x="50.6228%" y="1119.50"></text></g><g><title>sk-gen`&lt;&amp;str as core::str::pattern::Pattern&gt;::is_contained_in (101 samples, 0.17%)</title><rect x="50.3891%" y="1109" width="0.1651%" height="15" fill="rgb(227,52,21)" fg:x="30819" fg:w="101"/><text x="50.6391%" y="1119.50"></text></g><g><title>sk-gen`core::str::pattern::StrSearcher::new (39 samples, 0.06%)</title><rect x="50.4905%" y="1093" width="0.0638%" height="15" fill="rgb(238,69,14)" fg:x="30881" fg:w="39"/><text x="50.7405%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as core::convert::From&lt;[T (7 samples, 0.01%)</title><rect x="50.5543%" y="1109" width="0.0114%" height="15" fill="rgb(241,156,39)" fg:x="30920" fg:w="7"/><text x="50.8043%" y="1119.50"></text></g><g><title> N]&gt;&gt;::from (7 samples, 0.01%)</title><rect x="50.5543%" y="1093" width="0.0114%" height="15" fill="rgb(212,227,28)" fg:x="30920" fg:w="7"/><text x="50.8043%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (25 samples, 0.04%)</title><rect x="50.5755%" y="1077" width="0.0409%" height="15" fill="rgb(209,118,27)" fg:x="30933" fg:w="25"/><text x="50.8255%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (22 samples, 0.04%)</title><rect x="50.5804%" y="1061" width="0.0360%" height="15" fill="rgb(226,102,5)" fg:x="30936" fg:w="22"/><text x="50.8304%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (17 samples, 0.03%)</title><rect x="50.5886%" y="1045" width="0.0278%" height="15" fill="rgb(223,34,3)" fg:x="30941" fg:w="17"/><text x="50.8386%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.02%)</title><rect x="50.5968%" y="1029" width="0.0196%" height="15" fill="rgb(221,81,38)" fg:x="30946" fg:w="12"/><text x="50.8468%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (10 samples, 0.02%)</title><rect x="50.6000%" y="1013" width="0.0164%" height="15" fill="rgb(236,219,28)" fg:x="30948" fg:w="10"/><text x="50.8500%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (9 samples, 0.01%)</title><rect x="50.6017%" y="997" width="0.0147%" height="15" fill="rgb(213,200,14)" fg:x="30949" fg:w="9"/><text x="50.8517%" y="1007.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (33 samples, 0.05%)</title><rect x="50.5723%" y="1109" width="0.0540%" height="15" fill="rgb(240,33,19)" fg:x="30931" fg:w="33"/><text x="50.8223%" y="1119.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (31 samples, 0.05%)</title><rect x="50.5755%" y="1093" width="0.0507%" height="15" fill="rgb(233,113,27)" fg:x="30933" fg:w="31"/><text x="50.8255%" y="1103.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (7 samples, 0.01%)</title><rect x="50.8240%" y="965" width="0.0114%" height="15" fill="rgb(220,221,18)" fg:x="31085" fg:w="7"/><text x="51.0740%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="50.8240%" y="949" width="0.0114%" height="15" fill="rgb(238,92,8)" fg:x="31085" fg:w="7"/><text x="51.0740%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (18 samples, 0.03%)</title><rect x="50.8208%" y="1013" width="0.0294%" height="15" fill="rgb(222,164,16)" fg:x="31083" fg:w="18"/><text x="51.0708%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (17 samples, 0.03%)</title><rect x="50.8224%" y="997" width="0.0278%" height="15" fill="rgb(241,119,3)" fg:x="31084" fg:w="17"/><text x="51.0724%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (17 samples, 0.03%)</title><rect x="50.8224%" y="981" width="0.0278%" height="15" fill="rgb(241,44,8)" fg:x="31084" fg:w="17"/><text x="51.0724%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb (7 samples, 0.01%)</title><rect x="50.8388%" y="965" width="0.0114%" height="15" fill="rgb(230,36,40)" fg:x="31094" fg:w="7"/><text x="51.0888%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="50.8518%" y="1013" width="0.0114%" height="15" fill="rgb(243,16,36)" fg:x="31102" fg:w="7"/><text x="51.1018%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (32 samples, 0.05%)</title><rect x="50.8126%" y="1045" width="0.0523%" height="15" fill="rgb(231,4,26)" fg:x="31078" fg:w="32"/><text x="51.0626%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (32 samples, 0.05%)</title><rect x="50.8126%" y="1029" width="0.0523%" height="15" fill="rgb(240,9,31)" fg:x="31078" fg:w="32"/><text x="51.0626%" y="1039.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.01%)</title><rect x="50.8682%" y="1029" width="0.0114%" height="15" fill="rgb(207,173,15)" fg:x="31112" fg:w="7"/><text x="51.1182%" y="1039.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="50.8682%" y="1013" width="0.0114%" height="15" fill="rgb(224,192,53)" fg:x="31112" fg:w="7"/><text x="51.1182%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.01%)</title><rect x="50.8682%" y="997" width="0.0114%" height="15" fill="rgb(223,67,28)" fg:x="31112" fg:w="7"/><text x="51.1182%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7 samples, 0.01%)</title><rect x="50.8682%" y="981" width="0.0114%" height="15" fill="rgb(211,20,47)" fg:x="31112" fg:w="7"/><text x="51.1182%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (7 samples, 0.01%)</title><rect x="50.8927%" y="1013" width="0.0114%" height="15" fill="rgb(240,228,2)" fg:x="31127" fg:w="7"/><text x="51.1427%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (25 samples, 0.04%)</title><rect x="50.8649%" y="1045" width="0.0409%" height="15" fill="rgb(248,151,12)" fg:x="31110" fg:w="25"/><text x="51.1149%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (15 samples, 0.02%)</title><rect x="50.8813%" y="1029" width="0.0245%" height="15" fill="rgb(244,8,39)" fg:x="31120" fg:w="15"/><text x="51.1313%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (79 samples, 0.13%)</title><rect x="50.7881%" y="1061" width="0.1292%" height="15" fill="rgb(222,26,8)" fg:x="31063" fg:w="79"/><text x="51.0381%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (102 samples, 0.17%)</title><rect x="50.7521%" y="1077" width="0.1668%" height="15" fill="rgb(213,106,44)" fg:x="31041" fg:w="102"/><text x="51.0021%" y="1087.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (154 samples, 0.25%)</title><rect x="50.7325%" y="1093" width="0.2518%" height="15" fill="rgb(214,129,20)" fg:x="31029" fg:w="154"/><text x="50.9825%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::op (37 samples, 0.06%)</title><rect x="50.9238%" y="1077" width="0.0605%" height="15" fill="rgb(212,32,13)" fg:x="31146" fg:w="37"/><text x="51.1738%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (75 samples, 0.12%)</title><rect x="50.9892%" y="1093" width="0.1226%" height="15" fill="rgb(208,168,33)" fg:x="31186" fg:w="75"/><text x="51.2392%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.02%)</title><rect x="51.1134%" y="1077" width="0.0229%" height="15" fill="rgb(231,207,8)" fg:x="31262" fg:w="14"/><text x="51.3634%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.03%)</title><rect x="51.1396%" y="1077" width="0.0294%" height="15" fill="rgb(235,219,23)" fg:x="31278" fg:w="18"/><text x="51.3896%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (10 samples, 0.02%)</title><rect x="51.1919%" y="1013" width="0.0164%" height="15" fill="rgb(226,216,26)" fg:x="31310" fg:w="10"/><text x="51.4419%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="51.1968%" y="997" width="0.0114%" height="15" fill="rgb(239,137,16)" fg:x="31313" fg:w="7"/><text x="51.4468%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (16 samples, 0.03%)</title><rect x="51.1886%" y="1029" width="0.0262%" height="15" fill="rgb(207,12,36)" fg:x="31308" fg:w="16"/><text x="51.4386%" y="1039.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (20 samples, 0.03%)</title><rect x="51.1837%" y="1077" width="0.0327%" height="15" fill="rgb(210,214,24)" fg:x="31305" fg:w="20"/><text x="51.4337%" y="1087.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (18 samples, 0.03%)</title><rect x="51.1870%" y="1061" width="0.0294%" height="15" fill="rgb(206,56,30)" fg:x="31307" fg:w="18"/><text x="51.4370%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (18 samples, 0.03%)</title><rect x="51.1870%" y="1045" width="0.0294%" height="15" fill="rgb(228,143,26)" fg:x="31307" fg:w="18"/><text x="51.4370%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="51.2769%" y="1013" width="0.0131%" height="15" fill="rgb(216,218,46)" fg:x="31362" fg:w="8"/><text x="51.5269%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (24 samples, 0.04%)</title><rect x="51.2900%" y="1013" width="0.0392%" height="15" fill="rgb(206,6,19)" fg:x="31370" fg:w="24"/><text x="51.5400%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.06%)</title><rect x="51.2671%" y="1029" width="0.0638%" height="15" fill="rgb(239,177,51)" fg:x="31356" fg:w="39"/><text x="51.5171%" y="1039.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (57 samples, 0.09%)</title><rect x="51.2622%" y="1045" width="0.0932%" height="15" fill="rgb(216,55,25)" fg:x="31353" fg:w="57"/><text x="51.5122%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::op (15 samples, 0.02%)</title><rect x="51.3309%" y="1029" width="0.0245%" height="15" fill="rgb(231,163,29)" fg:x="31395" fg:w="15"/><text x="51.5809%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (10 samples, 0.02%)</title><rect x="51.4192%" y="949" width="0.0164%" height="15" fill="rgb(232,149,50)" fg:x="31449" fg:w="10"/><text x="51.6692%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (13 samples, 0.02%)</title><rect x="51.4175%" y="981" width="0.0213%" height="15" fill="rgb(223,142,48)" fg:x="31448" fg:w="13"/><text x="51.6675%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (12 samples, 0.02%)</title><rect x="51.4192%" y="965" width="0.0196%" height="15" fill="rgb(245,83,23)" fg:x="31449" fg:w="12"/><text x="51.6692%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (24 samples, 0.04%)</title><rect x="51.4143%" y="997" width="0.0392%" height="15" fill="rgb(224,63,2)" fg:x="31446" fg:w="24"/><text x="51.6643%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (8 samples, 0.01%)</title><rect x="51.4404%" y="981" width="0.0131%" height="15" fill="rgb(218,65,53)" fg:x="31462" fg:w="8"/><text x="51.6904%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (31 samples, 0.05%)</title><rect x="51.4061%" y="1029" width="0.0507%" height="15" fill="rgb(221,84,29)" fg:x="31441" fg:w="31"/><text x="51.6561%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (26 samples, 0.04%)</title><rect x="51.4143%" y="1013" width="0.0425%" height="15" fill="rgb(234,0,32)" fg:x="31446" fg:w="26"/><text x="51.6643%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (74 samples, 0.12%)</title><rect x="51.3571%" y="1045" width="0.1210%" height="15" fill="rgb(206,20,16)" fg:x="31411" fg:w="74"/><text x="51.6071%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path (13 samples, 0.02%)</title><rect x="51.4568%" y="1029" width="0.0213%" height="15" fill="rgb(244,172,18)" fg:x="31472" fg:w="13"/><text x="51.7068%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="51.4911%" y="1029" width="0.0164%" height="15" fill="rgb(254,133,1)" fg:x="31493" fg:w="10"/><text x="51.7411%" y="1039.50"></text></g><g><title>sk-gen`&lt;jaq_core::load::parse::BinaryOp as jaq_core::load::prec_climb::Op&gt;::precedence (7 samples, 0.01%)</title><rect x="51.5271%" y="1013" width="0.0114%" height="15" fill="rgb(222,206,41)" fg:x="31515" fg:w="7"/><text x="51.7771%" y="1023.50"></text></g><g><title>sk-gen`&lt;jaq_core::load::parse::Term&lt;S&gt; as jaq_core::load::prec_climb::Expr&lt;jaq_core::load::parse::BinaryOp&gt;&gt;::from_op (9 samples, 0.01%)</title><rect x="51.5385%" y="1013" width="0.0147%" height="15" fill="rgb(212,3,42)" fg:x="31522" fg:w="9"/><text x="51.7885%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (202 samples, 0.33%)</title><rect x="51.2279%" y="1061" width="0.3303%" height="15" fill="rgb(241,11,4)" fg:x="31332" fg:w="202"/><text x="51.4779%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb (43 samples, 0.07%)</title><rect x="51.4879%" y="1045" width="0.0703%" height="15" fill="rgb(205,19,26)" fg:x="31491" fg:w="43"/><text x="51.7379%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb1 (27 samples, 0.04%)</title><rect x="51.5140%" y="1029" width="0.0441%" height="15" fill="rgb(210,179,32)" fg:x="31507" fg:w="27"/><text x="51.7640%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (207 samples, 0.34%)</title><rect x="51.2213%" y="1077" width="0.3384%" height="15" fill="rgb(227,116,49)" fg:x="31328" fg:w="207"/><text x="51.4713%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (7 samples, 0.01%)</title><rect x="51.5614%" y="1061" width="0.0114%" height="15" fill="rgb(211,146,6)" fg:x="31536" fg:w="7"/><text x="51.8114%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (10 samples, 0.02%)</title><rect x="51.5598%" y="1077" width="0.0164%" height="15" fill="rgb(219,44,39)" fg:x="31535" fg:w="10"/><text x="51.8098%" y="1087.50"></text></g><g><title>sk-gen`&lt;&amp;str as core::str::pattern::Pattern&gt;::is_contained_in (10 samples, 0.02%)</title><rect x="51.5794%" y="1061" width="0.0164%" height="15" fill="rgb(234,128,11)" fg:x="31547" fg:w="10"/><text x="51.8294%" y="1071.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (10 samples, 0.02%)</title><rect x="51.6007%" y="1045" width="0.0164%" height="15" fill="rgb(220,183,53)" fg:x="31560" fg:w="10"/><text x="51.8507%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="51.6448%" y="981" width="0.0114%" height="15" fill="rgb(213,219,32)" fg:x="31587" fg:w="7"/><text x="51.8948%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (7 samples, 0.01%)</title><rect x="51.6448%" y="965" width="0.0114%" height="15" fill="rgb(232,156,16)" fg:x="31587" fg:w="7"/><text x="51.8948%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (7 samples, 0.01%)</title><rect x="51.6448%" y="949" width="0.0114%" height="15" fill="rgb(246,135,34)" fg:x="31587" fg:w="7"/><text x="51.8948%" y="959.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="51.6448%" y="933" width="0.0114%" height="15" fill="rgb(241,99,0)" fg:x="31587" fg:w="7"/><text x="51.8948%" y="943.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (12 samples, 0.02%)</title><rect x="51.6432%" y="997" width="0.0196%" height="15" fill="rgb(222,103,45)" fg:x="31586" fg:w="12"/><text x="51.8932%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (7 samples, 0.01%)</title><rect x="51.6628%" y="997" width="0.0114%" height="15" fill="rgb(212,57,4)" fg:x="31598" fg:w="7"/><text x="51.9128%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (37 samples, 0.06%)</title><rect x="51.6350%" y="1029" width="0.0605%" height="15" fill="rgb(215,68,47)" fg:x="31581" fg:w="37"/><text x="51.8850%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (33 samples, 0.05%)</title><rect x="51.6415%" y="1013" width="0.0540%" height="15" fill="rgb(230,84,2)" fg:x="31585" fg:w="33"/><text x="51.8915%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb (9 samples, 0.01%)</title><rect x="51.6808%" y="997" width="0.0147%" height="15" fill="rgb(220,102,14)" fg:x="31609" fg:w="9"/><text x="51.9308%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (7 samples, 0.01%)</title><rect x="51.6955%" y="1029" width="0.0114%" height="15" fill="rgb(240,10,32)" fg:x="31618" fg:w="7"/><text x="51.9455%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="51.6955%" y="1013" width="0.0114%" height="15" fill="rgb(215,47,27)" fg:x="31618" fg:w="7"/><text x="51.9455%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (73 samples, 0.12%)</title><rect x="51.6170%" y="1045" width="0.1194%" height="15" fill="rgb(233,188,43)" fg:x="31570" fg:w="73"/><text x="51.8670%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (15 samples, 0.02%)</title><rect x="51.7118%" y="1029" width="0.0245%" height="15" fill="rgb(253,190,1)" fg:x="31628" fg:w="15"/><text x="51.9618%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::def_tail (105 samples, 0.17%)</title><rect x="51.5761%" y="1077" width="0.1717%" height="15" fill="rgb(206,114,52)" fg:x="31545" fg:w="105"/><text x="51.8261%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (93 samples, 0.15%)</title><rect x="51.5958%" y="1061" width="0.1521%" height="15" fill="rgb(233,120,37)" fg:x="31557" fg:w="93"/><text x="51.8458%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (11 samples, 0.02%)</title><rect x="51.7740%" y="1029" width="0.0180%" height="15" fill="rgb(214,52,39)" fg:x="31666" fg:w="11"/><text x="52.0240%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (10 samples, 0.02%)</title><rect x="51.7756%" y="1013" width="0.0164%" height="15" fill="rgb(223,80,29)" fg:x="31667" fg:w="10"/><text x="52.0256%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (9 samples, 0.01%)</title><rect x="51.7920%" y="1029" width="0.0147%" height="15" fill="rgb(230,101,40)" fg:x="31677" fg:w="9"/><text x="52.0420%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (9 samples, 0.01%)</title><rect x="51.7920%" y="1013" width="0.0147%" height="15" fill="rgb(219,211,8)" fg:x="31677" fg:w="9"/><text x="52.0420%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (13 samples, 0.02%)</title><rect x="51.8067%" y="1029" width="0.0213%" height="15" fill="rgb(252,126,28)" fg:x="31686" fg:w="13"/><text x="52.0567%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (13 samples, 0.02%)</title><rect x="51.8067%" y="1013" width="0.0213%" height="15" fill="rgb(215,56,38)" fg:x="31686" fg:w="13"/><text x="52.0567%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (45 samples, 0.07%)</title><rect x="51.7642%" y="1045" width="0.0736%" height="15" fill="rgb(249,55,44)" fg:x="31660" fg:w="45"/><text x="52.0142%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (13 samples, 0.02%)</title><rect x="51.8525%" y="1013" width="0.0213%" height="15" fill="rgb(220,221,32)" fg:x="31714" fg:w="13"/><text x="52.1025%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (11 samples, 0.02%)</title><rect x="51.8557%" y="997" width="0.0180%" height="15" fill="rgb(212,216,41)" fg:x="31716" fg:w="11"/><text x="52.1057%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (8 samples, 0.01%)</title><rect x="51.8606%" y="981" width="0.0131%" height="15" fill="rgb(228,213,43)" fg:x="31719" fg:w="8"/><text x="52.1106%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (29 samples, 0.05%)</title><rect x="51.8377%" y="1045" width="0.0474%" height="15" fill="rgb(211,31,26)" fg:x="31705" fg:w="29"/><text x="52.0877%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (23 samples, 0.04%)</title><rect x="51.8476%" y="1029" width="0.0376%" height="15" fill="rgb(229,202,19)" fg:x="31711" fg:w="23"/><text x="52.0976%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path (7 samples, 0.01%)</title><rect x="51.8737%" y="1013" width="0.0114%" height="15" fill="rgb(229,105,46)" fg:x="31727" fg:w="7"/><text x="52.1237%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (88 samples, 0.14%)</title><rect x="51.7478%" y="1077" width="0.1439%" height="15" fill="rgb(235,108,1)" fg:x="31650" fg:w="88"/><text x="51.9978%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (84 samples, 0.14%)</title><rect x="51.7544%" y="1061" width="0.1373%" height="15" fill="rgb(245,111,35)" fg:x="31654" fg:w="84"/><text x="52.0044%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (15 samples, 0.02%)</title><rect x="51.9358%" y="1061" width="0.0245%" height="15" fill="rgb(219,185,31)" fg:x="31765" fg:w="15"/><text x="52.1858%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.01%)</title><rect x="51.9800%" y="997" width="0.0114%" height="15" fill="rgb(214,4,43)" fg:x="31792" fg:w="7"/><text x="52.2300%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.01%)</title><rect x="52.0160%" y="949" width="0.0114%" height="15" fill="rgb(235,227,40)" fg:x="31814" fg:w="7"/><text x="52.2660%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.06%)</title><rect x="51.9980%" y="981" width="0.0556%" height="15" fill="rgb(230,88,30)" fg:x="31803" fg:w="34"/><text x="52.2480%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.05%)</title><rect x="52.0061%" y="965" width="0.0474%" height="15" fill="rgb(216,217,1)" fg:x="31808" fg:w="29"/><text x="52.2561%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.03%)</title><rect x="52.0274%" y="949" width="0.0262%" height="15" fill="rgb(248,139,50)" fg:x="31821" fg:w="16"/><text x="52.2774%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (40 samples, 0.07%)</title><rect x="51.9914%" y="997" width="0.0654%" height="15" fill="rgb(233,1,21)" fg:x="31799" fg:w="40"/><text x="52.2414%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (56 samples, 0.09%)</title><rect x="51.9685%" y="1029" width="0.0916%" height="15" fill="rgb(215,183,12)" fg:x="31785" fg:w="56"/><text x="52.2185%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (52 samples, 0.09%)</title><rect x="51.9751%" y="1013" width="0.0850%" height="15" fill="rgb(229,104,42)" fg:x="31789" fg:w="52"/><text x="52.2251%" y="1023.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (65 samples, 0.11%)</title><rect x="51.9604%" y="1061" width="0.1063%" height="15" fill="rgb(243,34,48)" fg:x="31780" fg:w="65"/><text x="52.2104%" y="1071.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (60 samples, 0.10%)</title><rect x="51.9685%" y="1045" width="0.0981%" height="15" fill="rgb(239,11,44)" fg:x="31785" fg:w="60"/><text x="52.2185%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.04%)</title><rect x="52.1582%" y="1029" width="0.0376%" height="15" fill="rgb(231,98,35)" fg:x="31901" fg:w="23"/><text x="52.4082%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (12 samples, 0.02%)</title><rect x="52.1762%" y="1013" width="0.0196%" height="15" fill="rgb(233,28,25)" fg:x="31912" fg:w="12"/><text x="52.4262%" y="1023.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (46 samples, 0.08%)</title><rect x="52.1451%" y="1045" width="0.0752%" height="15" fill="rgb(234,123,11)" fg:x="31893" fg:w="46"/><text x="52.3951%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::op (13 samples, 0.02%)</title><rect x="52.1991%" y="1029" width="0.0213%" height="15" fill="rgb(220,69,3)" fg:x="31926" fg:w="13"/><text x="52.4491%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="52.2923%" y="1029" width="0.0164%" height="15" fill="rgb(214,64,36)" fg:x="31983" fg:w="10"/><text x="52.5423%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (8 samples, 0.01%)</title><rect x="52.3103%" y="1029" width="0.0131%" height="15" fill="rgb(211,138,32)" fg:x="31994" fg:w="8"/><text x="52.5603%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (8 samples, 0.01%)</title><rect x="52.3103%" y="1013" width="0.0131%" height="15" fill="rgb(213,118,47)" fg:x="31994" fg:w="8"/><text x="52.5603%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (22 samples, 0.04%)</title><rect x="52.3282%" y="1029" width="0.0360%" height="15" fill="rgb(243,124,49)" fg:x="32005" fg:w="22"/><text x="52.5782%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (16 samples, 0.03%)</title><rect x="52.3381%" y="1013" width="0.0262%" height="15" fill="rgb(221,30,28)" fg:x="32011" fg:w="16"/><text x="52.5881%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="52.3757%" y="997" width="0.0180%" height="15" fill="rgb(246,37,13)" fg:x="32034" fg:w="11"/><text x="52.6257%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="52.3789%" y="981" width="0.0147%" height="15" fill="rgb(249,66,14)" fg:x="32036" fg:w="9"/><text x="52.6289%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.04%)</title><rect x="52.3724%" y="1013" width="0.0392%" height="15" fill="rgb(213,166,5)" fg:x="32032" fg:w="24"/><text x="52.6224%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path_part_opt (10 samples, 0.02%)</title><rect x="52.3953%" y="997" width="0.0164%" height="15" fill="rgb(221,66,24)" fg:x="32046" fg:w="10"/><text x="52.6453%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path (33 samples, 0.05%)</title><rect x="52.3642%" y="1029" width="0.0540%" height="15" fill="rgb(210,132,17)" fg:x="32027" fg:w="33"/><text x="52.6142%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (122 samples, 0.20%)</title><rect x="52.2203%" y="1045" width="0.1995%" height="15" fill="rgb(243,202,5)" fg:x="31939" fg:w="122"/><text x="52.4703%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path (8 samples, 0.01%)</title><rect x="52.4231%" y="1045" width="0.0131%" height="15" fill="rgb(233,70,48)" fg:x="32063" fg:w="8"/><text x="52.6731%" y="1055.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (8 samples, 0.01%)</title><rect x="52.4394%" y="1029" width="0.0131%" height="15" fill="rgb(238,41,26)" fg:x="32073" fg:w="8"/><text x="52.6894%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (7 samples, 0.01%)</title><rect x="52.4574%" y="981" width="0.0114%" height="15" fill="rgb(241,19,31)" fg:x="32084" fg:w="7"/><text x="52.7074%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="52.4574%" y="965" width="0.0114%" height="15" fill="rgb(214,76,10)" fg:x="32084" fg:w="7"/><text x="52.7074%" y="975.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (13 samples, 0.02%)</title><rect x="52.4558%" y="1013" width="0.0213%" height="15" fill="rgb(254,202,22)" fg:x="32083" fg:w="13"/><text x="52.7058%" y="1023.50"></text></g><g><title>sk-gen`core::ops::function::Fn::call (12 samples, 0.02%)</title><rect x="52.4574%" y="997" width="0.0196%" height="15" fill="rgb(214,72,24)" fg:x="32084" fg:w="12"/><text x="52.7074%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (19 samples, 0.03%)</title><rect x="52.4525%" y="1029" width="0.0311%" height="15" fill="rgb(221,92,46)" fg:x="32081" fg:w="19"/><text x="52.7025%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (37 samples, 0.06%)</title><rect x="52.4362%" y="1045" width="0.0605%" height="15" fill="rgb(246,13,50)" fg:x="32071" fg:w="37"/><text x="52.6862%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb (8 samples, 0.01%)</title><rect x="52.4836%" y="1029" width="0.0131%" height="15" fill="rgb(240,165,38)" fg:x="32100" fg:w="8"/><text x="52.7336%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb1 (7 samples, 0.01%)</title><rect x="52.4852%" y="1013" width="0.0114%" height="15" fill="rgb(241,24,51)" fg:x="32101" fg:w="7"/><text x="52.7352%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb (11 samples, 0.02%)</title><rect x="52.4966%" y="1045" width="0.0180%" height="15" fill="rgb(227,51,44)" fg:x="32108" fg:w="11"/><text x="52.7466%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb1 (9 samples, 0.01%)</title><rect x="52.5146%" y="1045" width="0.0147%" height="15" fill="rgb(231,121,3)" fg:x="32119" fg:w="9"/><text x="52.7646%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="52.5293%" y="1029" width="0.0114%" height="15" fill="rgb(245,3,41)" fg:x="32128" fg:w="7"/><text x="52.7793%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (325 samples, 0.53%)</title><rect x="52.0765%" y="1061" width="0.5314%" height="15" fill="rgb(214,13,26)" fg:x="31851" fg:w="325"/><text x="52.3265%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb (48 samples, 0.08%)</title><rect x="52.5293%" y="1045" width="0.0785%" height="15" fill="rgb(252,75,11)" fg:x="32128" fg:w="48"/><text x="52.7793%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb1 (37 samples, 0.06%)</title><rect x="52.5473%" y="1029" width="0.0605%" height="15" fill="rgb(218,226,17)" fg:x="32139" fg:w="37"/><text x="52.7973%" y="1039.50"></text></g><g><title>sk-gen`&lt;jaq_core::load::parse::Term&lt;S&gt; as jaq_core::load::prec_climb::Expr&lt;jaq_core::load::parse::BinaryOp&gt;&gt;::from_op (17 samples, 0.03%)</title><rect x="52.5800%" y="1013" width="0.0278%" height="15" fill="rgb(248,89,38)" fg:x="32159" fg:w="17"/><text x="52.8300%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (16 samples, 0.03%)</title><rect x="52.5817%" y="997" width="0.0262%" height="15" fill="rgb(237,73,46)" fg:x="32160" fg:w="16"/><text x="52.8317%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (12 samples, 0.02%)</title><rect x="52.5882%" y="981" width="0.0196%" height="15" fill="rgb(242,78,33)" fg:x="32164" fg:w="12"/><text x="52.8382%" y="991.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (442 samples, 0.72%)</title><rect x="51.8917%" y="1077" width="0.7227%" height="15" fill="rgb(235,60,3)" fg:x="31738" fg:w="442"/><text x="52.1417%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.03%)</title><rect x="52.6487%" y="1045" width="0.0343%" height="15" fill="rgb(216,172,19)" fg:x="32201" fg:w="21"/><text x="52.8987%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.03%)</title><rect x="52.6520%" y="1029" width="0.0311%" height="15" fill="rgb(227,6,42)" fg:x="32203" fg:w="19"/><text x="52.9020%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="52.6651%" y="1013" width="0.0180%" height="15" fill="rgb(223,207,42)" fg:x="32211" fg:w="11"/><text x="52.9151%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 0.08%)</title><rect x="52.6389%" y="1061" width="0.0834%" height="15" fill="rgb(246,138,30)" fg:x="32195" fg:w="51"/><text x="52.8889%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path_part_opt (23 samples, 0.04%)</title><rect x="52.6847%" y="1045" width="0.0376%" height="15" fill="rgb(251,199,47)" fg:x="32223" fg:w="23"/><text x="52.9347%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="52.7108%" y="1029" width="0.0114%" height="15" fill="rgb(228,218,44)" fg:x="32239" fg:w="7"/><text x="52.9608%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path (75 samples, 0.12%)</title><rect x="52.6144%" y="1077" width="0.1226%" height="15" fill="rgb(220,68,6)" fg:x="32180" fg:w="75"/><text x="52.8644%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path_part_opt (8 samples, 0.01%)</title><rect x="52.7239%" y="1061" width="0.0131%" height="15" fill="rgb(240,60,26)" fg:x="32247" fg:w="8"/><text x="52.9739%" y="1071.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (9 samples, 0.01%)</title><rect x="52.7599%" y="1061" width="0.0147%" height="15" fill="rgb(211,200,19)" fg:x="32269" fg:w="9"/><text x="53.0099%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::op (8 samples, 0.01%)</title><rect x="52.7615%" y="1045" width="0.0131%" height="15" fill="rgb(242,145,30)" fg:x="32270" fg:w="8"/><text x="53.0115%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (7 samples, 0.01%)</title><rect x="52.8008%" y="1029" width="0.0114%" height="15" fill="rgb(225,64,13)" fg:x="32294" fg:w="7"/><text x="53.0508%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (9 samples, 0.01%)</title><rect x="52.7991%" y="1045" width="0.0147%" height="15" fill="rgb(218,103,35)" fg:x="32293" fg:w="9"/><text x="53.0491%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="52.8286%" y="997" width="0.0131%" height="15" fill="rgb(216,93,46)" fg:x="32311" fg:w="8"/><text x="53.0786%" y="1007.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (9 samples, 0.01%)</title><rect x="52.8286%" y="1013" width="0.0147%" height="15" fill="rgb(225,159,27)" fg:x="32311" fg:w="9"/><text x="53.0786%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (7 samples, 0.01%)</title><rect x="52.8433%" y="1013" width="0.0114%" height="15" fill="rgb(225,204,11)" fg:x="32320" fg:w="7"/><text x="53.0933%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (11 samples, 0.02%)</title><rect x="52.8563%" y="1013" width="0.0180%" height="15" fill="rgb(205,56,4)" fg:x="32328" fg:w="11"/><text x="53.1063%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (41 samples, 0.07%)</title><rect x="52.8138%" y="1045" width="0.0670%" height="15" fill="rgb(206,6,35)" fg:x="32302" fg:w="41"/><text x="53.0638%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (36 samples, 0.06%)</title><rect x="52.8220%" y="1029" width="0.0589%" height="15" fill="rgb(247,73,52)" fg:x="32307" fg:w="36"/><text x="53.0720%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (72 samples, 0.12%)</title><rect x="52.7746%" y="1061" width="0.1177%" height="15" fill="rgb(246,97,4)" fg:x="32278" fg:w="72"/><text x="53.0246%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (1,100 samples, 1.80%)</title><rect x="51.1134%" y="1093" width="1.7985%" height="15" fill="rgb(212,37,15)" fg:x="31262" fg:w="1100"/><text x="51.3634%" y="1103.50">s..</text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (107 samples, 0.17%)</title><rect x="52.7370%" y="1077" width="0.1749%" height="15" fill="rgb(208,130,40)" fg:x="32255" fg:w="107"/><text x="52.9870%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="52.9267%" y="1061" width="0.0213%" height="15" fill="rgb(236,55,29)" fg:x="32371" fg:w="13"/><text x="53.1767%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (10 samples, 0.02%)</title><rect x="52.9316%" y="1045" width="0.0164%" height="15" fill="rgb(209,156,45)" fg:x="32374" fg:w="10"/><text x="53.1816%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (9 samples, 0.01%)</title><rect x="52.9332%" y="1029" width="0.0147%" height="15" fill="rgb(249,107,4)" fg:x="32375" fg:w="9"/><text x="53.1832%" y="1039.50"></text></g><g><title>sk-gen`core::ops::function::Fn::call (8 samples, 0.01%)</title><rect x="52.9348%" y="1013" width="0.0131%" height="15" fill="rgb(227,7,13)" fg:x="32376" fg:w="8"/><text x="53.1848%" y="1023.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (17 samples, 0.03%)</title><rect x="52.9250%" y="1077" width="0.0278%" height="15" fill="rgb(250,129,14)" fg:x="32370" fg:w="17"/><text x="53.1750%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (9 samples, 0.01%)</title><rect x="52.9790%" y="1029" width="0.0147%" height="15" fill="rgb(229,92,13)" fg:x="32403" fg:w="9"/><text x="53.2290%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (7 samples, 0.01%)</title><rect x="52.9822%" y="1013" width="0.0114%" height="15" fill="rgb(245,98,39)" fg:x="32405" fg:w="7"/><text x="53.2322%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (16 samples, 0.03%)</title><rect x="52.9708%" y="1061" width="0.0262%" height="15" fill="rgb(234,135,48)" fg:x="32398" fg:w="16"/><text x="53.2208%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (16 samples, 0.03%)</title><rect x="52.9708%" y="1045" width="0.0262%" height="15" fill="rgb(230,98,28)" fg:x="32398" fg:w="16"/><text x="53.2208%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (10 samples, 0.02%)</title><rect x="52.9970%" y="1061" width="0.0164%" height="15" fill="rgb(223,121,0)" fg:x="32414" fg:w="10"/><text x="53.2470%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (7 samples, 0.01%)</title><rect x="53.0019%" y="1045" width="0.0114%" height="15" fill="rgb(234,173,33)" fg:x="32417" fg:w="7"/><text x="53.2519%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (7 samples, 0.01%)</title><rect x="53.0019%" y="1029" width="0.0114%" height="15" fill="rgb(245,47,8)" fg:x="32417" fg:w="7"/><text x="53.2519%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="53.0182%" y="1045" width="0.0180%" height="15" fill="rgb(205,17,20)" fg:x="32427" fg:w="11"/><text x="53.2682%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path_part_opt (8 samples, 0.01%)</title><rect x="53.0231%" y="1029" width="0.0131%" height="15" fill="rgb(232,151,16)" fg:x="32430" fg:w="8"/><text x="53.2731%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (53 samples, 0.09%)</title><rect x="52.9528%" y="1077" width="0.0867%" height="15" fill="rgb(208,30,32)" fg:x="32387" fg:w="53"/><text x="53.2028%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::path (16 samples, 0.03%)</title><rect x="53.0133%" y="1061" width="0.0262%" height="15" fill="rgb(254,26,3)" fg:x="32424" fg:w="16"/><text x="53.2633%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (86 samples, 0.14%)</title><rect x="52.9152%" y="1093" width="0.1406%" height="15" fill="rgb(240,177,30)" fg:x="32364" fg:w="86"/><text x="53.1652%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb (9 samples, 0.01%)</title><rect x="53.0411%" y="1077" width="0.0147%" height="15" fill="rgb(248,76,44)" fg:x="32441" fg:w="9"/><text x="53.2911%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb (13 samples, 0.02%)</title><rect x="53.0558%" y="1093" width="0.0213%" height="15" fill="rgb(241,186,54)" fg:x="32450" fg:w="13"/><text x="53.3058%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb1 (10 samples, 0.02%)</title><rect x="53.0771%" y="1093" width="0.0164%" height="15" fill="rgb(249,171,29)" fg:x="32463" fg:w="10"/><text x="53.3271%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="53.0967%" y="1077" width="0.0229%" height="15" fill="rgb(237,151,44)" fg:x="32475" fg:w="14"/><text x="53.3467%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="53.1065%" y="1061" width="0.0131%" height="15" fill="rgb(228,174,30)" fg:x="32481" fg:w="8"/><text x="53.3565%" y="1071.50"></text></g><g><title>sk-gen`&lt;jaq_core::load::parse::BinaryOp as jaq_core::load::prec_climb::Op&gt;::precedence (13 samples, 0.02%)</title><rect x="53.1817%" y="1061" width="0.0213%" height="15" fill="rgb(252,14,37)" fg:x="32527" fg:w="13"/><text x="53.4317%" y="1071.50"></text></g><g><title>sk-gen`&lt;jaq_core::load::parse::Term&lt;S&gt; as jaq_core::load::prec_climb::Expr&lt;jaq_core::load::parse::BinaryOp&gt;&gt;::from_op (14 samples, 0.02%)</title><rect x="53.2030%" y="1061" width="0.0229%" height="15" fill="rgb(207,111,40)" fg:x="32540" fg:w="14"/><text x="53.4530%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="53.2111%" y="1045" width="0.0147%" height="15" fill="rgb(248,171,54)" fg:x="32545" fg:w="9"/><text x="53.4611%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (1,593 samples, 2.60%)</title><rect x="50.6344%" y="1109" width="2.6046%" height="15" fill="rgb(211,127,2)" fg:x="30969" fg:w="1593"/><text x="50.8844%" y="1119.50">sk..</text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb (89 samples, 0.15%)</title><rect x="53.0934%" y="1093" width="0.1455%" height="15" fill="rgb(236,87,47)" fg:x="32473" fg:w="89"/><text x="53.3434%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb1 (66 samples, 0.11%)</title><rect x="53.1310%" y="1077" width="0.1079%" height="15" fill="rgb(223,190,45)" fg:x="32496" fg:w="66"/><text x="53.3810%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::prec_climb::climb1 (8 samples, 0.01%)</title><rect x="53.2259%" y="1061" width="0.0131%" height="15" fill="rgb(215,5,16)" fg:x="32554" fg:w="8"/><text x="53.4759%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::def_tail (1,834 samples, 3.00%)</title><rect x="50.2420%" y="1125" width="2.9986%" height="15" fill="rgb(252,82,33)" fg:x="30729" fg:w="1834"/><text x="50.4920%" y="1135.50">sk-..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,922 samples, 3.14%)</title><rect x="50.1079%" y="1141" width="3.1425%" height="15" fill="rgb(247,213,44)" fg:x="30647" fg:w="1922"/><text x="50.3579%" y="1151.50">sk-..</text></g><g><title>sk-gen`jaq_std::defs (4,280 samples, 7.00%)</title><rect x="46.2575%" y="1189" width="6.9978%" height="15" fill="rgb(205,196,44)" fg:x="28292" fg:w="4280"/><text x="46.5075%" y="1199.50">sk-gen`ja..</text></g><g><title>sk-gen`jaq_core::load::parse::Parser::defs (1,925 samples, 3.15%)</title><rect x="50.1079%" y="1173" width="3.1474%" height="15" fill="rgb(237,96,54)" fg:x="30647" fg:w="1925"/><text x="50.3579%" y="1183.50">sk-..</text></g><g><title>sk-gen`core::iter::adapters::try_process (1,925 samples, 3.15%)</title><rect x="50.1079%" y="1157" width="3.1474%" height="15" fill="rgb(230,113,34)" fg:x="30647" fg:w="1925"/><text x="50.3579%" y="1167.50">sk-..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="53.2618%" y="1173" width="0.0114%" height="15" fill="rgb(221,224,12)" fg:x="32576" fg:w="7"/><text x="53.5118%" y="1183.50"></text></g><g><title>sk-gen`jaq_std::funs (25 samples, 0.04%)</title><rect x="53.2553%" y="1189" width="0.0409%" height="15" fill="rgb(219,112,44)" fg:x="32572" fg:w="25"/><text x="53.5053%" y="1199.50"></text></g><g><title>sk-gen`jaq_std::v (7 samples, 0.01%)</title><rect x="53.2847%" y="1173" width="0.0114%" height="15" fill="rgb(210,31,13)" fg:x="32590" fg:w="7"/><text x="53.5347%" y="1183.50"></text></g><g><title>sk-gen`jaq_std::v (9 samples, 0.01%)</title><rect x="53.2962%" y="1189" width="0.0147%" height="15" fill="rgb(230,25,16)" fg:x="32597" fg:w="9"/><text x="53.5462%" y="1199.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.01%)</title><rect x="53.3763%" y="1077" width="0.0114%" height="15" fill="rgb(246,108,53)" fg:x="32646" fg:w="7"/><text x="53.6263%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::__private_visit_untagged_option (9 samples, 0.01%)</title><rect x="53.3763%" y="1093" width="0.0147%" height="15" fill="rgb(241,172,50)" fg:x="32646" fg:w="9"/><text x="53.6263%" y="1103.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 0.03%)</title><rect x="53.4858%" y="949" width="0.0294%" height="15" fill="rgb(235,141,10)" fg:x="32713" fg:w="18"/><text x="53.7358%" y="959.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 0.02%)</title><rect x="53.4907%" y="933" width="0.0245%" height="15" fill="rgb(220,174,43)" fg:x="32716" fg:w="15"/><text x="53.7407%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (28 samples, 0.05%)</title><rect x="53.4744%" y="965" width="0.0458%" height="15" fill="rgb(215,181,40)" fg:x="32706" fg:w="28"/><text x="53.7244%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="53.5316%" y="933" width="0.0262%" height="15" fill="rgb(230,97,2)" fg:x="32741" fg:w="16"/><text x="53.7816%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.02%)</title><rect x="53.5365%" y="917" width="0.0213%" height="15" fill="rgb(211,25,27)" fg:x="32744" fg:w="13"/><text x="53.7865%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="53.5398%" y="901" width="0.0180%" height="15" fill="rgb(230,87,26)" fg:x="32746" fg:w="11"/><text x="53.7898%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (72 samples, 0.12%)</title><rect x="53.4433%" y="997" width="0.1177%" height="15" fill="rgb(227,160,17)" fg:x="32687" fg:w="72"/><text x="53.6933%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (66 samples, 0.11%)</title><rect x="53.4531%" y="981" width="0.1079%" height="15" fill="rgb(244,85,34)" fg:x="32693" fg:w="66"/><text x="53.7031%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (22 samples, 0.04%)</title><rect x="53.5251%" y="965" width="0.0360%" height="15" fill="rgb(207,70,0)" fg:x="32737" fg:w="22"/><text x="53.7751%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (20 samples, 0.03%)</title><rect x="53.5283%" y="949" width="0.0327%" height="15" fill="rgb(223,129,7)" fg:x="32739" fg:w="20"/><text x="53.7783%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.02%)</title><rect x="53.5839%" y="901" width="0.0164%" height="15" fill="rgb(246,105,7)" fg:x="32773" fg:w="10"/><text x="53.8339%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.01%)</title><rect x="53.6003%" y="901" width="0.0147%" height="15" fill="rgb(215,154,42)" fg:x="32783" fg:w="9"/><text x="53.8503%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="53.6166%" y="885" width="0.0164%" height="15" fill="rgb(220,215,30)" fg:x="32793" fg:w="10"/><text x="53.8666%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.03%)</title><rect x="53.6330%" y="885" width="0.0343%" height="15" fill="rgb(228,81,51)" fg:x="32803" fg:w="21"/><text x="53.8830%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.02%)</title><rect x="53.7131%" y="821" width="0.0213%" height="15" fill="rgb(247,71,54)" fg:x="32852" fg:w="13"/><text x="53.9631%" y="831.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.02%)</title><rect x="53.7343%" y="821" width="0.0213%" height="15" fill="rgb(234,176,34)" fg:x="32865" fg:w="13"/><text x="53.9843%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="53.7376%" y="805" width="0.0180%" height="15" fill="rgb(241,103,54)" fg:x="32867" fg:w="11"/><text x="53.9876%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (8 samples, 0.01%)</title><rect x="53.7425%" y="789" width="0.0131%" height="15" fill="rgb(228,22,34)" fg:x="32870" fg:w="8"/><text x="53.9925%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (8 samples, 0.01%)</title><rect x="53.7425%" y="773" width="0.0131%" height="15" fill="rgb(241,179,48)" fg:x="32870" fg:w="8"/><text x="53.9925%" y="783.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (33 samples, 0.05%)</title><rect x="53.7098%" y="837" width="0.0540%" height="15" fill="rgb(235,167,37)" fg:x="32850" fg:w="33"/><text x="53.9598%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="53.7801%" y="805" width="0.0147%" height="15" fill="rgb(213,109,30)" fg:x="32893" fg:w="9"/><text x="54.0301%" y="815.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (10 samples, 0.02%)</title><rect x="53.7801%" y="821" width="0.0164%" height="15" fill="rgb(222,172,16)" fg:x="32893" fg:w="10"/><text x="54.0301%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (21 samples, 0.03%)</title><rect x="53.7638%" y="837" width="0.0343%" height="15" fill="rgb(233,192,5)" fg:x="32883" fg:w="21"/><text x="54.0138%" y="847.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (71 samples, 0.12%)</title><rect x="53.6837%" y="853" width="0.1161%" height="15" fill="rgb(247,189,41)" fg:x="32834" fg:w="71"/><text x="53.9337%" y="863.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (75 samples, 0.12%)</title><rect x="53.6788%" y="869" width="0.1226%" height="15" fill="rgb(218,134,47)" fg:x="32831" fg:w="75"/><text x="53.9288%" y="879.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (8 samples, 0.01%)</title><rect x="53.8161%" y="821" width="0.0131%" height="15" fill="rgb(216,29,3)" fg:x="32915" fg:w="8"/><text x="54.0661%" y="831.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 0.03%)</title><rect x="53.8063%" y="853" width="0.0327%" height="15" fill="rgb(246,140,12)" fg:x="32909" fg:w="20"/><text x="54.0563%" y="863.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 0.03%)</title><rect x="53.8063%" y="837" width="0.0327%" height="15" fill="rgb(230,136,11)" fg:x="32909" fg:w="20"/><text x="54.0563%" y="847.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (30 samples, 0.05%)</title><rect x="53.8046%" y="869" width="0.0491%" height="15" fill="rgb(247,22,47)" fg:x="32908" fg:w="30"/><text x="54.0546%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="53.8423%" y="853" width="0.0114%" height="15" fill="rgb(218,84,22)" fg:x="32931" fg:w="7"/><text x="54.0923%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (7 samples, 0.01%)</title><rect x="53.8423%" y="837" width="0.0114%" height="15" fill="rgb(216,87,39)" fg:x="32931" fg:w="7"/><text x="54.0923%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="53.8423%" y="821" width="0.0114%" height="15" fill="rgb(221,178,8)" fg:x="32931" fg:w="7"/><text x="54.0923%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="53.8423%" y="805" width="0.0114%" height="15" fill="rgb(230,42,11)" fg:x="32931" fg:w="7"/><text x="54.0923%" y="815.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (123 samples, 0.20%)</title><rect x="53.6673%" y="885" width="0.2011%" height="15" fill="rgb(237,229,4)" fg:x="32824" fg:w="123"/><text x="53.9173%" y="895.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.01%)</title><rect x="53.8537%" y="869" width="0.0147%" height="15" fill="rgb(222,31,33)" fg:x="32938" fg:w="9"/><text x="54.1037%" y="879.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="53.8553%" y="853" width="0.0131%" height="15" fill="rgb(210,17,39)" fg:x="32939" fg:w="8"/><text x="54.1053%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="53.8553%" y="837" width="0.0131%" height="15" fill="rgb(244,93,20)" fg:x="32939" fg:w="8"/><text x="54.1053%" y="847.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (158 samples, 0.26%)</title><rect x="53.6150%" y="901" width="0.2583%" height="15" fill="rgb(210,40,47)" fg:x="32792" fg:w="158"/><text x="53.8650%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (18 samples, 0.03%)</title><rect x="53.8750%" y="901" width="0.0294%" height="15" fill="rgb(239,211,47)" fg:x="32951" fg:w="18"/><text x="54.1250%" y="911.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (198 samples, 0.32%)</title><rect x="53.5823%" y="917" width="0.3237%" height="15" fill="rgb(251,223,49)" fg:x="32772" fg:w="198"/><text x="53.8323%" y="927.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (201 samples, 0.33%)</title><rect x="53.5790%" y="933" width="0.3286%" height="15" fill="rgb(221,149,5)" fg:x="32770" fg:w="201"/><text x="53.8290%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (206 samples, 0.34%)</title><rect x="53.5774%" y="949" width="0.3368%" height="15" fill="rgb(219,224,51)" fg:x="32769" fg:w="206"/><text x="53.8274%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.01%)</title><rect x="53.9175%" y="933" width="0.0131%" height="15" fill="rgb(223,7,8)" fg:x="32977" fg:w="8"/><text x="54.1675%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.03%)</title><rect x="53.9305%" y="933" width="0.0311%" height="15" fill="rgb(241,217,22)" fg:x="32985" fg:w="19"/><text x="54.1805%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.02%)</title><rect x="53.9812%" y="885" width="0.0180%" height="15" fill="rgb(248,209,0)" fg:x="33016" fg:w="11"/><text x="54.2312%" y="895.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.02%)</title><rect x="53.9829%" y="869" width="0.0164%" height="15" fill="rgb(217,205,4)" fg:x="33017" fg:w="10"/><text x="54.2329%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="53.9878%" y="853" width="0.0114%" height="15" fill="rgb(228,124,39)" fg:x="33020" fg:w="7"/><text x="54.2378%" y="863.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 0.03%)</title><rect x="53.9796%" y="901" width="0.0327%" height="15" fill="rgb(250,116,42)" fg:x="33015" fg:w="20"/><text x="54.2296%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 0.04%)</title><rect x="53.9780%" y="917" width="0.0360%" height="15" fill="rgb(223,202,9)" fg:x="33014" fg:w="22"/><text x="54.2280%" y="927.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 0.06%)</title><rect x="53.9616%" y="933" width="0.0589%" height="15" fill="rgb(242,222,40)" fg:x="33004" fg:w="36"/><text x="54.2116%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (71 samples, 0.12%)</title><rect x="53.9158%" y="949" width="0.1161%" height="15" fill="rgb(229,99,46)" fg:x="32976" fg:w="71"/><text x="54.1658%" y="959.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (303 samples, 0.50%)</title><rect x="53.5659%" y="965" width="0.4954%" height="15" fill="rgb(225,56,46)" fg:x="32762" fg:w="303"/><text x="53.8159%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (18 samples, 0.03%)</title><rect x="54.0319%" y="949" width="0.0294%" height="15" fill="rgb(227,94,5)" fg:x="33047" fg:w="18"/><text x="54.2819%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (10 samples, 0.02%)</title><rect x="54.0450%" y="933" width="0.0164%" height="15" fill="rgb(205,112,38)" fg:x="33055" fg:w="10"/><text x="54.2950%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (305 samples, 0.50%)</title><rect x="53.5643%" y="981" width="0.4987%" height="15" fill="rgb(231,133,46)" fg:x="32761" fg:w="305"/><text x="53.8143%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (306 samples, 0.50%)</title><rect x="53.5643%" y="997" width="0.5003%" height="15" fill="rgb(217,16,9)" fg:x="32761" fg:w="306"/><text x="53.8143%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="54.0728%" y="965" width="0.0180%" height="15" fill="rgb(249,173,9)" fg:x="33072" fg:w="11"/><text x="54.3228%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="54.0793%" y="949" width="0.0114%" height="15" fill="rgb(205,163,53)" fg:x="33076" fg:w="7"/><text x="54.3293%" y="959.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (403 samples, 0.66%)</title><rect x="53.4335%" y="1013" width="0.6589%" height="15" fill="rgb(217,54,41)" fg:x="32681" fg:w="403"/><text x="53.6835%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (16 samples, 0.03%)</title><rect x="54.0663%" y="997" width="0.0262%" height="15" fill="rgb(228,216,12)" fg:x="33068" fg:w="16"/><text x="54.3163%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (13 samples, 0.02%)</title><rect x="54.0712%" y="981" width="0.0213%" height="15" fill="rgb(244,228,15)" fg:x="33071" fg:w="13"/><text x="54.3212%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (406 samples, 0.66%)</title><rect x="53.4302%" y="1029" width="0.6638%" height="15" fill="rgb(221,176,53)" fg:x="32679" fg:w="406"/><text x="53.6802%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (423 samples, 0.69%)</title><rect x="53.4172%" y="1045" width="0.6916%" height="15" fill="rgb(205,94,34)" fg:x="32671" fg:w="423"/><text x="53.6672%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.02%)</title><rect x="54.1120%" y="1045" width="0.0180%" height="15" fill="rgb(213,110,48)" fg:x="33096" fg:w="11"/><text x="54.3620%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (7 samples, 0.01%)</title><rect x="54.1186%" y="1029" width="0.0114%" height="15" fill="rgb(236,142,28)" fg:x="33100" fg:w="7"/><text x="54.3686%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (448 samples, 0.73%)</title><rect x="53.3992%" y="1061" width="0.7325%" height="15" fill="rgb(225,135,29)" fg:x="32660" fg:w="448"/><text x="53.6492%" y="1071.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (449 samples, 0.73%)</title><rect x="53.3992%" y="1077" width="0.7341%" height="15" fill="rgb(252,45,31)" fg:x="32660" fg:w="449"/><text x="53.6492%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (467 samples, 0.76%)</title><rect x="53.3910%" y="1093" width="0.7635%" height="15" fill="rgb(211,187,50)" fg:x="32655" fg:w="467"/><text x="53.6410%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (10 samples, 0.02%)</title><rect x="54.1382%" y="1077" width="0.0164%" height="15" fill="rgb(229,109,7)" fg:x="33112" fg:w="10"/><text x="54.3882%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (10 samples, 0.02%)</title><rect x="54.1382%" y="1061" width="0.0164%" height="15" fill="rgb(251,131,51)" fg:x="33112" fg:w="10"/><text x="54.3882%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="54.1398%" y="1045" width="0.0147%" height="15" fill="rgb(251,180,35)" fg:x="33113" fg:w="9"/><text x="54.3898%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="54.1415%" y="1029" width="0.0131%" height="15" fill="rgb(211,46,32)" fg:x="33114" fg:w="8"/><text x="54.3915%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (14 samples, 0.02%)</title><rect x="54.1545%" y="1093" width="0.0229%" height="15" fill="rgb(248,123,17)" fg:x="33122" fg:w="14"/><text x="54.4045%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="54.1660%" y="1077" width="0.0114%" height="15" fill="rgb(227,141,18)" fg:x="33129" fg:w="7"/><text x="54.4160%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="54.2036%" y="1045" width="0.0114%" height="15" fill="rgb(216,102,9)" fg:x="33152" fg:w="7"/><text x="54.4536%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="54.2510%" y="965" width="0.0180%" height="15" fill="rgb(253,47,13)" fg:x="33181" fg:w="11"/><text x="54.5010%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="54.2526%" y="949" width="0.0164%" height="15" fill="rgb(226,93,23)" fg:x="33182" fg:w="10"/><text x="54.5026%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="54.2559%" y="933" width="0.0131%" height="15" fill="rgb(247,104,17)" fg:x="33184" fg:w="8"/><text x="54.5059%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (20 samples, 0.03%)</title><rect x="54.2379%" y="997" width="0.0327%" height="15" fill="rgb(233,203,26)" fg:x="33173" fg:w="20"/><text x="54.4879%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (18 samples, 0.03%)</title><rect x="54.2412%" y="981" width="0.0294%" height="15" fill="rgb(244,98,49)" fg:x="33175" fg:w="18"/><text x="54.4912%" y="991.50"></text></g><g><title>sk-gen`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (54 samples, 0.09%)</title><rect x="54.2150%" y="1045" width="0.0883%" height="15" fill="rgb(235,134,22)" fg:x="33159" fg:w="54"/><text x="54.4650%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (54 samples, 0.09%)</title><rect x="54.2150%" y="1029" width="0.0883%" height="15" fill="rgb(221,70,32)" fg:x="33159" fg:w="54"/><text x="54.4650%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (53 samples, 0.09%)</title><rect x="54.2167%" y="1013" width="0.0867%" height="15" fill="rgb(238,15,50)" fg:x="33160" fg:w="53"/><text x="54.4667%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (20 samples, 0.03%)</title><rect x="54.2706%" y="997" width="0.0327%" height="15" fill="rgb(215,221,48)" fg:x="33193" fg:w="20"/><text x="54.5206%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.03%)</title><rect x="54.2772%" y="981" width="0.0262%" height="15" fill="rgb(236,73,3)" fg:x="33197" fg:w="16"/><text x="54.5272%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="54.2821%" y="965" width="0.0213%" height="15" fill="rgb(250,107,11)" fg:x="33200" fg:w="13"/><text x="54.5321%" y="975.50"></text></g><g><title>sk-gen`&lt;&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta as serde::de::Deserialize&gt;::deserialize::Visitor as serde::de::Visitor&gt;::visit_map (77 samples, 0.13%)</title><rect x="54.1807%" y="1061" width="0.1259%" height="15" fill="rgb(242,39,14)" fg:x="33138" fg:w="77"/><text x="54.4307%" y="1071.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (86 samples, 0.14%)</title><rect x="54.1774%" y="1093" width="0.1406%" height="15" fill="rgb(248,164,37)" fg:x="33136" fg:w="86"/><text x="54.4274%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (86 samples, 0.14%)</title><rect x="54.1774%" y="1077" width="0.1406%" height="15" fill="rgb(217,60,12)" fg:x="33136" fg:w="86"/><text x="54.4274%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="54.3606%" y="1061" width="0.0131%" height="15" fill="rgb(240,125,29)" fg:x="33248" fg:w="8"/><text x="54.6106%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.02%)</title><rect x="54.3736%" y="1061" width="0.0180%" height="15" fill="rgb(208,207,28)" fg:x="33256" fg:w="11"/><text x="54.6236%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.01%)</title><rect x="54.3998%" y="1061" width="0.0114%" height="15" fill="rgb(209,159,27)" fg:x="33272" fg:w="7"/><text x="54.6498%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.03%)</title><rect x="54.4276%" y="1045" width="0.0327%" height="15" fill="rgb(251,176,53)" fg:x="33289" fg:w="20"/><text x="54.6776%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.01%)</title><rect x="54.5175%" y="1013" width="0.0114%" height="15" fill="rgb(211,85,7)" fg:x="33344" fg:w="7"/><text x="54.7675%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (28 samples, 0.05%)</title><rect x="54.5290%" y="1013" width="0.0458%" height="15" fill="rgb(216,64,54)" fg:x="33351" fg:w="28"/><text x="54.7790%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="54.5976%" y="997" width="0.0147%" height="15" fill="rgb(217,54,24)" fg:x="33393" fg:w="9"/><text x="54.8476%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="54.6385%" y="981" width="0.0213%" height="15" fill="rgb(208,206,53)" fg:x="33418" fg:w="13"/><text x="54.8885%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (207 samples, 0.34%)</title><rect x="54.3279%" y="1093" width="0.3384%" height="15" fill="rgb(251,74,39)" fg:x="33228" fg:w="207"/><text x="54.5779%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (191 samples, 0.31%)</title><rect x="54.3540%" y="1077" width="0.3123%" height="15" fill="rgb(226,47,5)" fg:x="33244" fg:w="191"/><text x="54.6040%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (153 samples, 0.25%)</title><rect x="54.4161%" y="1061" width="0.2502%" height="15" fill="rgb(234,111,33)" fg:x="33282" fg:w="153"/><text x="54.6661%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (117 samples, 0.19%)</title><rect x="54.4750%" y="1045" width="0.1913%" height="15" fill="rgb(251,14,10)" fg:x="33318" fg:w="117"/><text x="54.7250%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (95 samples, 0.16%)</title><rect x="54.5110%" y="1029" width="0.1553%" height="15" fill="rgb(232,43,0)" fg:x="33340" fg:w="95"/><text x="54.7610%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (54 samples, 0.09%)</title><rect x="54.5780%" y="1013" width="0.0883%" height="15" fill="rgb(222,68,43)" fg:x="33381" fg:w="54"/><text x="54.8280%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (29 samples, 0.05%)</title><rect x="54.6189%" y="997" width="0.0474%" height="15" fill="rgb(217,24,23)" fg:x="33406" fg:w="29"/><text x="54.8689%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="54.6974%" y="1061" width="0.0131%" height="15" fill="rgb(229,209,14)" fg:x="33454" fg:w="8"/><text x="54.9474%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="54.7415%" y="1013" width="0.0180%" height="15" fill="rgb(250,149,48)" fg:x="33481" fg:w="11"/><text x="54.9915%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.01%)</title><rect x="54.7448%" y="997" width="0.0147%" height="15" fill="rgb(210,120,37)" fg:x="33483" fg:w="9"/><text x="54.9948%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.03%)</title><rect x="54.7350%" y="1029" width="0.0278%" height="15" fill="rgb(210,21,8)" fg:x="33477" fg:w="17"/><text x="54.9850%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="54.7938%" y="997" width="0.0114%" height="15" fill="rgb(243,145,7)" fg:x="33513" fg:w="7"/><text x="55.0438%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.03%)</title><rect x="54.8200%" y="981" width="0.0278%" height="15" fill="rgb(238,178,32)" fg:x="33529" fg:w="17"/><text x="55.0700%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="54.8265%" y="965" width="0.0213%" height="15" fill="rgb(222,4,10)" fg:x="33533" fg:w="13"/><text x="55.0765%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (25 samples, 0.04%)</title><rect x="54.8118%" y="997" width="0.0409%" height="15" fill="rgb(239,7,37)" fg:x="33524" fg:w="25"/><text x="55.0618%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="54.9279%" y="933" width="0.0131%" height="15" fill="rgb(215,31,37)" fg:x="33595" fg:w="8"/><text x="55.1779%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="54.9295%" y="917" width="0.0114%" height="15" fill="rgb(224,83,33)" fg:x="33596" fg:w="7"/><text x="55.1795%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="54.9442%" y="933" width="0.0147%" height="15" fill="rgb(239,55,3)" fg:x="33605" fg:w="9"/><text x="55.1942%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.02%)</title><rect x="55.0456%" y="853" width="0.0213%" height="15" fill="rgb(247,92,11)" fg:x="33667" fg:w="13"/><text x="55.2956%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="55.0554%" y="837" width="0.0114%" height="15" fill="rgb(239,200,7)" fg:x="33673" fg:w="7"/><text x="55.3054%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (22 samples, 0.04%)</title><rect x="55.0342%" y="869" width="0.0360%" height="15" fill="rgb(227,115,8)" fg:x="33660" fg:w="22"/><text x="55.2842%" y="879.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (41 samples, 0.07%)</title><rect x="55.0064%" y="885" width="0.0670%" height="15" fill="rgb(215,189,27)" fg:x="33643" fg:w="41"/><text x="55.2564%" y="895.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (73 samples, 0.12%)</title><rect x="54.9590%" y="933" width="0.1194%" height="15" fill="rgb(251,216,39)" fg:x="33614" fg:w="73"/><text x="55.2090%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (56 samples, 0.09%)</title><rect x="54.9868%" y="917" width="0.0916%" height="15" fill="rgb(207,29,47)" fg:x="33631" fg:w="56"/><text x="55.2368%" y="927.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (46 samples, 0.08%)</title><rect x="55.0031%" y="901" width="0.0752%" height="15" fill="rgb(210,71,34)" fg:x="33641" fg:w="46"/><text x="55.2531%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.01%)</title><rect x="55.1176%" y="885" width="0.0131%" height="15" fill="rgb(253,217,51)" fg:x="33711" fg:w="8"/><text x="55.3676%" y="895.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (146 samples, 0.24%)</title><rect x="54.8936%" y="949" width="0.2387%" height="15" fill="rgb(222,117,46)" fg:x="33574" fg:w="146"/><text x="55.1436%" y="959.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (31 samples, 0.05%)</title><rect x="55.0816%" y="933" width="0.0507%" height="15" fill="rgb(226,132,6)" fg:x="33689" fg:w="31"/><text x="55.3316%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 0.05%)</title><rect x="55.0849%" y="917" width="0.0474%" height="15" fill="rgb(254,145,51)" fg:x="33691" fg:w="29"/><text x="55.3349%" y="927.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (9 samples, 0.01%)</title><rect x="55.1176%" y="901" width="0.0147%" height="15" fill="rgb(231,199,27)" fg:x="33711" fg:w="9"/><text x="55.3676%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (158 samples, 0.26%)</title><rect x="54.8805%" y="981" width="0.2583%" height="15" fill="rgb(245,158,14)" fg:x="33566" fg:w="158"/><text x="55.1305%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (153 samples, 0.25%)</title><rect x="54.8887%" y="965" width="0.2502%" height="15" fill="rgb(240,113,14)" fg:x="33571" fg:w="153"/><text x="55.1387%" y="975.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (177 samples, 0.29%)</title><rect x="54.8527%" y="997" width="0.2894%" height="15" fill="rgb(210,20,13)" fg:x="33549" fg:w="177"/><text x="55.1027%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.01%)</title><rect x="55.1437%" y="981" width="0.0114%" height="15" fill="rgb(241,144,13)" fg:x="33727" fg:w="7"/><text x="55.3937%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (237 samples, 0.39%)</title><rect x="54.7709%" y="1013" width="0.3875%" height="15" fill="rgb(235,43,34)" fg:x="33499" fg:w="237"/><text x="55.0209%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (10 samples, 0.02%)</title><rect x="55.1421%" y="997" width="0.0164%" height="15" fill="rgb(208,36,20)" fg:x="33726" fg:w="10"/><text x="55.3921%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (305 samples, 0.50%)</title><rect x="54.6663%" y="1077" width="0.4987%" height="15" fill="rgb(239,204,10)" fg:x="33435" fg:w="305"/><text x="54.9163%" y="1087.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (275 samples, 0.45%)</title><rect x="54.7153%" y="1061" width="0.4496%" height="15" fill="rgb(217,84,43)" fg:x="33465" fg:w="275"/><text x="54.9653%" y="1071.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (270 samples, 0.44%)</title><rect x="54.7235%" y="1045" width="0.4415%" height="15" fill="rgb(241,170,50)" fg:x="33470" fg:w="270"/><text x="54.9735%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (244 samples, 0.40%)</title><rect x="54.7660%" y="1029" width="0.3989%" height="15" fill="rgb(226,205,29)" fg:x="33496" fg:w="244"/><text x="55.0160%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,130 samples, 1.85%)</title><rect x="53.3240%" y="1141" width="1.8476%" height="15" fill="rgb(233,113,1)" fg:x="32614" fg:w="1130"/><text x="53.5740%" y="1151.50">s..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1,126 samples, 1.84%)</title><rect x="53.3305%" y="1125" width="1.8410%" height="15" fill="rgb(253,98,13)" fg:x="32618" fg:w="1126"/><text x="53.5805%" y="1135.50">s..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (1,123 samples, 1.84%)</title><rect x="53.3354%" y="1109" width="1.8361%" height="15" fill="rgb(211,115,12)" fg:x="32621" fg:w="1123"/><text x="53.5854%" y="1119.50">s..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (309 samples, 0.51%)</title><rect x="54.6663%" y="1093" width="0.5052%" height="15" fill="rgb(208,12,16)" fg:x="33435" fg:w="309"/><text x="54.9163%" y="1103.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22,500 samples, 36.79%)</title><rect x="18.3872%" y="1205" width="36.7875%" height="15" fill="rgb(237,193,54)" fg:x="11246" fg:w="22500"/><text x="18.6372%" y="1215.50">sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as cor..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1,140 samples, 1.86%)</title><rect x="53.3109%" y="1189" width="1.8639%" height="15" fill="rgb(243,22,42)" fg:x="32606" fg:w="1140"/><text x="53.5609%" y="1199.50">s..</text></g><g><title>sk-gen`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,139 samples, 1.86%)</title><rect x="53.3125%" y="1173" width="1.8623%" height="15" fill="rgb(233,151,36)" fg:x="32607" fg:w="1139"/><text x="53.5625%" y="1183.50">s..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1,134 samples, 1.85%)</title><rect x="53.3207%" y="1157" width="1.8541%" height="15" fill="rgb(237,57,45)" fg:x="32612" fg:w="1134"/><text x="53.5707%" y="1167.50">s..</text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (14 samples, 0.02%)</title><rect x="55.2009%" y="1125" width="0.0229%" height="15" fill="rgb(221,88,17)" fg:x="33762" fg:w="14"/><text x="55.4509%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 0.02%)</title><rect x="55.2009%" y="1109" width="0.0229%" height="15" fill="rgb(230,79,15)" fg:x="33762" fg:w="14"/><text x="55.4509%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (25 samples, 0.04%)</title><rect x="55.1895%" y="1141" width="0.0409%" height="15" fill="rgb(213,57,13)" fg:x="33755" fg:w="25"/><text x="55.4395%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (30 samples, 0.05%)</title><rect x="55.1830%" y="1173" width="0.0491%" height="15" fill="rgb(222,116,39)" fg:x="33751" fg:w="30"/><text x="55.4330%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (28 samples, 0.05%)</title><rect x="55.1862%" y="1157" width="0.0458%" height="15" fill="rgb(245,107,2)" fg:x="33753" fg:w="28"/><text x="55.4362%" y="1167.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (35 samples, 0.06%)</title><rect x="55.1764%" y="1205" width="0.0572%" height="15" fill="rgb(238,1,10)" fg:x="33747" fg:w="35"/><text x="55.4264%" y="1215.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (34 samples, 0.06%)</title><rect x="55.1781%" y="1189" width="0.0556%" height="15" fill="rgb(249,4,48)" fg:x="33748" fg:w="34"/><text x="55.4281%" y="1199.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22,548 samples, 36.87%)</title><rect x="18.3791%" y="1221" width="36.8660%" height="15" fill="rgb(223,151,18)" fg:x="11241" fg:w="22548"/><text x="18.6291%" y="1231.50">sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::Sp..</text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="55.2451%" y="1221" width="0.0114%" height="15" fill="rgb(227,65,43)" fg:x="33789" fg:w="7"/><text x="55.4951%" y="1231.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (9 samples, 0.01%)</title><rect x="55.2582%" y="1221" width="0.0147%" height="15" fill="rgb(218,40,45)" fg:x="33797" fg:w="9"/><text x="55.5082%" y="1231.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="55.3072%" y="1173" width="0.0114%" height="15" fill="rgb(252,121,31)" fg:x="33827" fg:w="7"/><text x="55.5572%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="55.3203%" y="1173" width="0.0131%" height="15" fill="rgb(219,158,43)" fg:x="33835" fg:w="8"/><text x="55.5703%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="55.3432%" y="1157" width="0.0131%" height="15" fill="rgb(231,162,42)" fg:x="33849" fg:w="8"/><text x="55.5932%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="55.3563%" y="1157" width="0.0245%" height="15" fill="rgb(217,179,25)" fg:x="33857" fg:w="15"/><text x="55.6063%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="55.3971%" y="1141" width="0.0229%" height="15" fill="rgb(206,212,31)" fg:x="33882" fg:w="14"/><text x="55.6471%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="55.4004%" y="1125" width="0.0196%" height="15" fill="rgb(235,144,12)" fg:x="33884" fg:w="12"/><text x="55.6504%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (22 samples, 0.04%)</title><rect x="55.3873%" y="1157" width="0.0360%" height="15" fill="rgb(213,51,10)" fg:x="33876" fg:w="22"/><text x="55.6373%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="55.4298%" y="1141" width="0.0131%" height="15" fill="rgb(231,145,14)" fg:x="33902" fg:w="8"/><text x="55.6798%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.02%)</title><rect x="55.4691%" y="1125" width="0.0245%" height="15" fill="rgb(235,15,28)" fg:x="33926" fg:w="15"/><text x="55.7191%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="55.4756%" y="1109" width="0.0180%" height="15" fill="rgb(237,206,10)" fg:x="33930" fg:w="11"/><text x="55.7256%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (26 samples, 0.04%)</title><rect x="55.4560%" y="1141" width="0.0425%" height="15" fill="rgb(236,227,27)" fg:x="33918" fg:w="26"/><text x="55.7060%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="55.5067%" y="1125" width="0.0245%" height="15" fill="rgb(246,83,35)" fg:x="33949" fg:w="15"/><text x="55.7567%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.03%)</title><rect x="55.5508%" y="1109" width="0.0311%" height="15" fill="rgb(220,136,24)" fg:x="33976" fg:w="19"/><text x="55.8008%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.02%)</title><rect x="55.5574%" y="1093" width="0.0245%" height="15" fill="rgb(217,3,25)" fg:x="33980" fg:w="15"/><text x="55.8074%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (32 samples, 0.05%)</title><rect x="55.5378%" y="1125" width="0.0523%" height="15" fill="rgb(239,24,14)" fg:x="33968" fg:w="32"/><text x="55.7878%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18 samples, 0.03%)</title><rect x="55.6277%" y="1077" width="0.0294%" height="15" fill="rgb(244,16,53)" fg:x="34023" fg:w="18"/><text x="55.8777%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="55.6718%" y="1061" width="0.0164%" height="15" fill="rgb(208,175,44)" fg:x="34050" fg:w="10"/><text x="55.9218%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="55.6767%" y="1045" width="0.0114%" height="15" fill="rgb(252,18,48)" fg:x="34053" fg:w="7"/><text x="55.9267%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="55.6604%" y="1077" width="0.0311%" height="15" fill="rgb(234,199,32)" fg:x="34043" fg:w="19"/><text x="55.9104%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="55.7062%" y="1045" width="0.0147%" height="15" fill="rgb(225,77,54)" fg:x="34071" fg:w="9"/><text x="55.9562%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (16 samples, 0.03%)</title><rect x="55.6996%" y="1061" width="0.0262%" height="15" fill="rgb(225,42,25)" fg:x="34067" fg:w="16"/><text x="55.9496%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.02%)</title><rect x="55.7421%" y="1029" width="0.0196%" height="15" fill="rgb(242,227,46)" fg:x="34093" fg:w="12"/><text x="55.9921%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="55.7797%" y="1013" width="0.0229%" height="15" fill="rgb(246,197,35)" fg:x="34116" fg:w="14"/><text x="56.0297%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="55.7895%" y="997" width="0.0131%" height="15" fill="rgb(215,159,26)" fg:x="34122" fg:w="8"/><text x="56.0395%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (21 samples, 0.03%)</title><rect x="55.7732%" y="1029" width="0.0343%" height="15" fill="rgb(212,194,50)" fg:x="34112" fg:w="21"/><text x="56.0232%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (52 samples, 0.09%)</title><rect x="55.7258%" y="1061" width="0.0850%" height="15" fill="rgb(246,132,1)" fg:x="34083" fg:w="52"/><text x="55.9758%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (43 samples, 0.07%)</title><rect x="55.7405%" y="1045" width="0.0703%" height="15" fill="rgb(217,71,7)" fg:x="34092" fg:w="43"/><text x="55.9905%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (132 samples, 0.22%)</title><rect x="55.6097%" y="1109" width="0.2158%" height="15" fill="rgb(252,59,32)" fg:x="34012" fg:w="132"/><text x="55.8597%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (124 samples, 0.20%)</title><rect x="55.6228%" y="1093" width="0.2027%" height="15" fill="rgb(253,204,25)" fg:x="34020" fg:w="124"/><text x="55.8728%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (82 samples, 0.13%)</title><rect x="55.6914%" y="1077" width="0.1341%" height="15" fill="rgb(232,21,16)" fg:x="34062" fg:w="82"/><text x="55.9414%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.01%)</title><rect x="55.8108%" y="1061" width="0.0147%" height="15" fill="rgb(248,90,29)" fg:x="34135" fg:w="9"/><text x="56.0608%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="55.8124%" y="1045" width="0.0131%" height="15" fill="rgb(249,223,7)" fg:x="34136" fg:w="8"/><text x="56.0624%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="55.8141%" y="1029" width="0.0114%" height="15" fill="rgb(231,119,42)" fg:x="34137" fg:w="7"/><text x="56.0641%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (322 samples, 0.53%)</title><rect x="55.3023%" y="1189" width="0.5265%" height="15" fill="rgb(215,41,35)" fg:x="33824" fg:w="322"/><text x="55.5523%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (303 samples, 0.50%)</title><rect x="55.3334%" y="1173" width="0.4954%" height="15" fill="rgb(220,44,45)" fg:x="33843" fg:w="303"/><text x="55.5834%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (248 samples, 0.41%)</title><rect x="55.4233%" y="1157" width="0.4055%" height="15" fill="rgb(253,197,36)" fg:x="33898" fg:w="248"/><text x="55.6733%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (202 samples, 0.33%)</title><rect x="55.4985%" y="1141" width="0.3303%" height="15" fill="rgb(245,225,54)" fg:x="33944" fg:w="202"/><text x="55.7485%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (146 samples, 0.24%)</title><rect x="55.5901%" y="1125" width="0.2387%" height="15" fill="rgb(239,94,37)" fg:x="34000" fg:w="146"/><text x="55.8401%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="55.8533%" y="1173" width="0.0114%" height="15" fill="rgb(242,217,10)" fg:x="34161" fg:w="7"/><text x="56.1033%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (8 samples, 0.01%)</title><rect x="55.8876%" y="1141" width="0.0131%" height="15" fill="rgb(250,193,7)" fg:x="34182" fg:w="8"/><text x="56.1376%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.02%)</title><rect x="55.8844%" y="1157" width="0.0180%" height="15" fill="rgb(230,104,19)" fg:x="34180" fg:w="11"/><text x="56.1344%" y="1167.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 0.04%)</title><rect x="55.8664%" y="1173" width="0.0376%" height="15" fill="rgb(230,181,4)" fg:x="34169" fg:w="23"/><text x="56.1164%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.01%)</title><rect x="55.9334%" y="1157" width="0.0147%" height="15" fill="rgb(216,219,49)" fg:x="34210" fg:w="9"/><text x="56.1834%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.02%)</title><rect x="55.9939%" y="1125" width="0.0213%" height="15" fill="rgb(254,144,0)" fg:x="34247" fg:w="13"/><text x="56.2439%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (9 samples, 0.01%)</title><rect x="56.0005%" y="1109" width="0.0147%" height="15" fill="rgb(205,209,38)" fg:x="34251" fg:w="9"/><text x="56.2505%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.02%)</title><rect x="56.0430%" y="1093" width="0.0180%" height="15" fill="rgb(240,21,42)" fg:x="34277" fg:w="11"/><text x="56.2930%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (9 samples, 0.01%)</title><rect x="56.0462%" y="1077" width="0.0147%" height="15" fill="rgb(241,132,3)" fg:x="34279" fg:w="9"/><text x="56.2962%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="56.0479%" y="1061" width="0.0131%" height="15" fill="rgb(225,14,2)" fg:x="34280" fg:w="8"/><text x="56.2979%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="56.0479%" y="1045" width="0.0131%" height="15" fill="rgb(210,141,35)" fg:x="34280" fg:w="8"/><text x="56.2979%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="56.0757%" y="1077" width="0.0114%" height="15" fill="rgb(251,14,44)" fg:x="34297" fg:w="7"/><text x="56.3257%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="56.0937%" y="1077" width="0.0114%" height="15" fill="rgb(247,48,18)" fg:x="34308" fg:w="7"/><text x="56.3437%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="56.1100%" y="1061" width="0.0114%" height="15" fill="rgb(225,0,40)" fg:x="34318" fg:w="7"/><text x="56.3600%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="56.1214%" y="1061" width="0.0147%" height="15" fill="rgb(221,31,33)" fg:x="34325" fg:w="9"/><text x="56.3714%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="56.1787%" y="1029" width="0.0229%" height="15" fill="rgb(237,42,40)" fg:x="34360" fg:w="14"/><text x="56.4287%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="56.1852%" y="1013" width="0.0164%" height="15" fill="rgb(233,51,29)" fg:x="34364" fg:w="10"/><text x="56.4352%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (23 samples, 0.04%)</title><rect x="56.1705%" y="1045" width="0.0376%" height="15" fill="rgb(226,58,20)" fg:x="34355" fg:w="23"/><text x="56.4205%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (39 samples, 0.06%)</title><rect x="56.1509%" y="1061" width="0.0638%" height="15" fill="rgb(208,98,7)" fg:x="34343" fg:w="39"/><text x="56.4009%" y="1071.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (12 samples, 0.02%)</title><rect x="56.2457%" y="1045" width="0.0196%" height="15" fill="rgb(228,143,44)" fg:x="34401" fg:w="12"/><text x="56.4957%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="56.3046%" y="1013" width="0.0114%" height="15" fill="rgb(246,55,38)" fg:x="34437" fg:w="7"/><text x="56.5546%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="56.3356%" y="981" width="0.0131%" height="15" fill="rgb(247,87,16)" fg:x="34456" fg:w="8"/><text x="56.5856%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (22 samples, 0.04%)</title><rect x="56.3193%" y="1013" width="0.0360%" height="15" fill="rgb(234,129,42)" fg:x="34446" fg:w="22"/><text x="56.5693%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (14 samples, 0.02%)</title><rect x="56.3324%" y="997" width="0.0229%" height="15" fill="rgb(220,82,16)" fg:x="34454" fg:w="14"/><text x="56.5824%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="56.4092%" y="949" width="0.0114%" height="15" fill="rgb(211,88,4)" fg:x="34501" fg:w="7"/><text x="56.6592%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="56.4092%" y="933" width="0.0114%" height="15" fill="rgb(248,151,21)" fg:x="34501" fg:w="7"/><text x="56.6592%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.02%)</title><rect x="56.4043%" y="981" width="0.0180%" height="15" fill="rgb(238,163,6)" fg:x="34498" fg:w="11"/><text x="56.6543%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (9 samples, 0.01%)</title><rect x="56.4076%" y="965" width="0.0147%" height="15" fill="rgb(209,183,11)" fg:x="34500" fg:w="9"/><text x="56.6576%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (39 samples, 0.06%)</title><rect x="56.3863%" y="997" width="0.0638%" height="15" fill="rgb(219,37,20)" fg:x="34487" fg:w="39"/><text x="56.6363%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 0.03%)</title><rect x="56.4223%" y="981" width="0.0278%" height="15" fill="rgb(210,158,4)" fg:x="34509" fg:w="17"/><text x="56.6723%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (12 samples, 0.02%)</title><rect x="56.4305%" y="965" width="0.0196%" height="15" fill="rgb(221,167,53)" fg:x="34514" fg:w="12"/><text x="56.6805%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="56.4386%" y="949" width="0.0114%" height="15" fill="rgb(237,151,45)" fg:x="34519" fg:w="7"/><text x="56.6886%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="56.4844%" y="965" width="0.0114%" height="15" fill="rgb(231,39,3)" fg:x="34547" fg:w="7"/><text x="56.7344%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="56.4975%" y="933" width="0.0213%" height="15" fill="rgb(212,167,28)" fg:x="34555" fg:w="13"/><text x="56.7475%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.02%)</title><rect x="56.4991%" y="917" width="0.0196%" height="15" fill="rgb(232,178,8)" fg:x="34556" fg:w="12"/><text x="56.7491%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="56.5024%" y="901" width="0.0164%" height="15" fill="rgb(225,151,20)" fg:x="34558" fg:w="10"/><text x="56.7524%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (15 samples, 0.02%)</title><rect x="56.4975%" y="965" width="0.0245%" height="15" fill="rgb(238,3,37)" fg:x="34555" fg:w="15"/><text x="56.7475%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (15 samples, 0.02%)</title><rect x="56.4975%" y="949" width="0.0245%" height="15" fill="rgb(251,147,42)" fg:x="34555" fg:w="15"/><text x="56.7475%" y="959.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (35 samples, 0.06%)</title><rect x="56.4730%" y="981" width="0.0572%" height="15" fill="rgb(208,173,10)" fg:x="34540" fg:w="35"/><text x="56.7230%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (153 samples, 0.25%)</title><rect x="56.2817%" y="1029" width="0.2502%" height="15" fill="rgb(246,225,4)" fg:x="34423" fg:w="153"/><text x="56.5317%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (106 samples, 0.17%)</title><rect x="56.3585%" y="1013" width="0.1733%" height="15" fill="rgb(248,102,6)" fg:x="34470" fg:w="106"/><text x="56.6085%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (50 samples, 0.08%)</title><rect x="56.4501%" y="997" width="0.0818%" height="15" fill="rgb(232,6,21)" fg:x="34526" fg:w="50"/><text x="56.7001%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (263 samples, 0.43%)</title><rect x="56.1051%" y="1077" width="0.4300%" height="15" fill="rgb(221,179,22)" fg:x="34315" fg:w="263"/><text x="56.3551%" y="1087.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (191 samples, 0.31%)</title><rect x="56.2228%" y="1061" width="0.3123%" height="15" fill="rgb(252,50,20)" fg:x="34387" fg:w="191"/><text x="56.4728%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (165 samples, 0.27%)</title><rect x="56.2653%" y="1045" width="0.2698%" height="15" fill="rgb(222,56,38)" fg:x="34413" fg:w="165"/><text x="56.5153%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (309 samples, 0.51%)</title><rect x="56.0315%" y="1109" width="0.5052%" height="15" fill="rgb(206,193,29)" fg:x="34270" fg:w="309"/><text x="56.2815%" y="1119.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (290 samples, 0.47%)</title><rect x="56.0626%" y="1093" width="0.4742%" height="15" fill="rgb(239,192,45)" fg:x="34289" fg:w="290"/><text x="56.3126%" y="1103.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (429 samples, 0.70%)</title><rect x="55.8370%" y="1189" width="0.7014%" height="15" fill="rgb(254,18,36)" fg:x="34151" fg:w="429"/><text x="56.0870%" y="1199.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (381 samples, 0.62%)</title><rect x="55.9154%" y="1173" width="0.6229%" height="15" fill="rgb(221,127,11)" fg:x="34199" fg:w="381"/><text x="56.1654%" y="1183.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (360 samples, 0.59%)</title><rect x="55.9498%" y="1157" width="0.5886%" height="15" fill="rgb(234,146,35)" fg:x="34220" fg:w="360"/><text x="56.1998%" y="1167.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (343 samples, 0.56%)</title><rect x="55.9776%" y="1141" width="0.5608%" height="15" fill="rgb(254,201,37)" fg:x="34237" fg:w="343"/><text x="56.2276%" y="1151.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (319 samples, 0.52%)</title><rect x="56.0168%" y="1125" width="0.5216%" height="15" fill="rgb(211,202,23)" fg:x="34261" fg:w="319"/><text x="56.2668%" y="1135.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="56.5743%" y="1125" width="0.0114%" height="15" fill="rgb(237,91,2)" fg:x="34602" fg:w="7"/><text x="56.8243%" y="1135.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="56.6103%" y="1093" width="0.0213%" height="15" fill="rgb(226,228,36)" fg:x="34624" fg:w="13"/><text x="56.8603%" y="1103.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="56.6904%" y="1045" width="0.0147%" height="15" fill="rgb(213,63,50)" fg:x="34673" fg:w="9"/><text x="56.9404%" y="1055.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.03%)</title><rect x="56.7199%" y="1029" width="0.0294%" height="15" fill="rgb(235,194,19)" fg:x="34691" fg:w="18"/><text x="56.9699%" y="1039.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.03%)</title><rect x="56.7869%" y="997" width="0.0311%" height="15" fill="rgb(207,204,18)" fg:x="34732" fg:w="19"/><text x="57.0369%" y="1007.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.03%)</title><rect x="56.8327%" y="981" width="0.0262%" height="15" fill="rgb(248,8,7)" fg:x="34760" fg:w="16"/><text x="57.0827%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="56.8899%" y="965" width="0.0147%" height="15" fill="rgb(223,145,47)" fg:x="34795" fg:w="9"/><text x="57.1399%" y="975.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="56.8899%" y="949" width="0.0147%" height="15" fill="rgb(228,84,11)" fg:x="34795" fg:w="9"/><text x="57.1399%" y="959.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="56.9242%" y="917" width="0.0229%" height="15" fill="rgb(218,76,45)" fg:x="34816" fg:w="14"/><text x="57.1742%" y="927.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.03%)</title><rect x="56.9651%" y="901" width="0.0278%" height="15" fill="rgb(223,80,15)" fg:x="34841" fg:w="17"/><text x="57.2151%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.04%)</title><rect x="57.0109%" y="885" width="0.0409%" height="15" fill="rgb(219,218,33)" fg:x="34869" fg:w="25"/><text x="57.2609%" y="895.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="57.0223%" y="869" width="0.0294%" height="15" fill="rgb(208,51,11)" fg:x="34876" fg:w="18"/><text x="57.2723%" y="879.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="57.0370%" y="853" width="0.0147%" height="15" fill="rgb(229,165,39)" fg:x="34885" fg:w="9"/><text x="57.2870%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="57.0403%" y="837" width="0.0114%" height="15" fill="rgb(241,100,24)" fg:x="34887" fg:w="7"/><text x="57.2903%" y="847.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="57.0616%" y="869" width="0.0131%" height="15" fill="rgb(228,14,23)" fg:x="34900" fg:w="8"/><text x="57.3116%" y="879.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="57.0959%" y="837" width="0.0114%" height="15" fill="rgb(247,116,52)" fg:x="34921" fg:w="7"/><text x="57.3459%" y="847.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="57.1188%" y="821" width="0.0245%" height="15" fill="rgb(216,149,33)" fg:x="34935" fg:w="15"/><text x="57.3688%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.05%)</title><rect x="57.0926%" y="853" width="0.0523%" height="15" fill="rgb(238,142,29)" fg:x="34919" fg:w="32"/><text x="57.3426%" y="863.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.04%)</title><rect x="57.1074%" y="837" width="0.0376%" height="15" fill="rgb(224,83,40)" fg:x="34928" fg:w="23"/><text x="57.3574%" y="847.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="57.1450%" y="853" width="0.0131%" height="15" fill="rgb(234,165,11)" fg:x="34951" fg:w="8"/><text x="57.3950%" y="863.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (52 samples, 0.09%)</title><rect x="57.0747%" y="869" width="0.0850%" height="15" fill="rgb(215,96,23)" fg:x="34908" fg:w="52"/><text x="57.3247%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 0.11%)</title><rect x="57.0518%" y="885" width="0.1095%" height="15" fill="rgb(233,179,26)" fg:x="34894" fg:w="67"/><text x="57.3018%" y="895.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (106 samples, 0.17%)</title><rect x="56.9929%" y="901" width="0.1733%" height="15" fill="rgb(225,129,33)" fg:x="34858" fg:w="106"/><text x="57.2429%" y="911.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 0.22%)</title><rect x="56.9471%" y="917" width="0.2207%" height="15" fill="rgb(237,49,13)" fg:x="34830" fg:w="135"/><text x="57.1971%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (155 samples, 0.25%)</title><rect x="56.9210%" y="933" width="0.2534%" height="15" fill="rgb(211,3,31)" fg:x="34814" fg:w="155"/><text x="57.1710%" y="943.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (196 samples, 0.32%)</title><rect x="56.8588%" y="981" width="0.3205%" height="15" fill="rgb(216,152,19)" fg:x="34776" fg:w="196"/><text x="57.1088%" y="991.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (168 samples, 0.27%)</title><rect x="56.9046%" y="965" width="0.2747%" height="15" fill="rgb(251,121,35)" fg:x="34804" fg:w="168"/><text x="57.1546%" y="975.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (165 samples, 0.27%)</title><rect x="56.9095%" y="949" width="0.2698%" height="15" fill="rgb(210,217,47)" fg:x="34807" fg:w="165"/><text x="57.1595%" y="959.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (222 samples, 0.36%)</title><rect x="56.8180%" y="997" width="0.3630%" height="15" fill="rgb(244,116,22)" fg:x="34751" fg:w="222"/><text x="57.0680%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (306 samples, 0.50%)</title><rect x="56.6823%" y="1061" width="0.5003%" height="15" fill="rgb(228,17,21)" fg:x="34668" fg:w="306"/><text x="56.9323%" y="1071.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (292 samples, 0.48%)</title><rect x="56.7051%" y="1045" width="0.4774%" height="15" fill="rgb(240,149,34)" fg:x="34682" fg:w="292"/><text x="56.9551%" y="1055.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (265 samples, 0.43%)</title><rect x="56.7493%" y="1029" width="0.4333%" height="15" fill="rgb(208,125,47)" fg:x="34709" fg:w="265"/><text x="56.9993%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (245 samples, 0.40%)</title><rect x="56.7820%" y="1013" width="0.4006%" height="15" fill="rgb(249,186,39)" fg:x="34729" fg:w="245"/><text x="57.0320%" y="1023.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (326 samples, 0.53%)</title><rect x="56.6528%" y="1077" width="0.5330%" height="15" fill="rgb(240,220,33)" fg:x="34650" fg:w="326"/><text x="56.9028%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (358 samples, 0.59%)</title><rect x="56.6054%" y="1109" width="0.5853%" height="15" fill="rgb(243,110,23)" fg:x="34621" fg:w="358"/><text x="56.8554%" y="1119.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (342 samples, 0.56%)</title><rect x="56.6316%" y="1093" width="0.5592%" height="15" fill="rgb(219,163,46)" fg:x="34637" fg:w="342"/><text x="56.8816%" y="1103.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (373 samples, 0.61%)</title><rect x="56.5858%" y="1125" width="0.6099%" height="15" fill="rgb(216,126,30)" fg:x="34609" fg:w="373"/><text x="56.8358%" y="1135.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (388 samples, 0.63%)</title><rect x="56.5629%" y="1141" width="0.6344%" height="15" fill="rgb(208,139,11)" fg:x="34595" fg:w="388"/><text x="56.8129%" y="1151.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (1,167 samples, 1.91%)</title><rect x="55.2925%" y="1221" width="1.9080%" height="15" fill="rgb(213,118,36)" fg:x="33818" fg:w="1167"/><text x="55.5425%" y="1231.50">s..</text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::hash::Hash&gt;::hash (1,166 samples, 1.91%)</title><rect x="55.2941%" y="1205" width="1.9064%" height="15" fill="rgb(226,43,17)" fg:x="33819" fg:w="1166"/><text x="55.5441%" y="1215.50">s..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (405 samples, 0.66%)</title><rect x="56.5384%" y="1189" width="0.6622%" height="15" fill="rgb(254,217,4)" fg:x="34580" fg:w="405"/><text x="56.7884%" y="1199.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (402 samples, 0.66%)</title><rect x="56.5433%" y="1173" width="0.6573%" height="15" fill="rgb(210,134,47)" fg:x="34583" fg:w="402"/><text x="56.7933%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (392 samples, 0.64%)</title><rect x="56.5596%" y="1157" width="0.6409%" height="15" fill="rgb(237,24,49)" fg:x="34593" fg:w="392"/><text x="56.8096%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (12 samples, 0.02%)</title><rect x="57.2709%" y="1077" width="0.0196%" height="15" fill="rgb(251,39,46)" fg:x="35028" fg:w="12"/><text x="57.5209%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.02%)</title><rect x="57.2741%" y="1061" width="0.0164%" height="15" fill="rgb(251,220,3)" fg:x="35030" fg:w="10"/><text x="57.5241%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (57 samples, 0.09%)</title><rect x="57.2005%" y="1221" width="0.0932%" height="15" fill="rgb(228,105,12)" fg:x="34985" fg:w="57"/><text x="57.4505%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (56 samples, 0.09%)</title><rect x="57.2022%" y="1205" width="0.0916%" height="15" fill="rgb(215,196,1)" fg:x="34986" fg:w="56"/><text x="57.4522%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (51 samples, 0.08%)</title><rect x="57.2104%" y="1189" width="0.0834%" height="15" fill="rgb(214,33,39)" fg:x="34991" fg:w="51"/><text x="57.4604%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (46 samples, 0.08%)</title><rect x="57.2185%" y="1173" width="0.0752%" height="15" fill="rgb(220,19,52)" fg:x="34996" fg:w="46"/><text x="57.4685%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (39 samples, 0.06%)</title><rect x="57.2300%" y="1157" width="0.0638%" height="15" fill="rgb(221,78,38)" fg:x="35003" fg:w="39"/><text x="57.4800%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (32 samples, 0.05%)</title><rect x="57.2414%" y="1141" width="0.0523%" height="15" fill="rgb(253,30,16)" fg:x="35010" fg:w="32"/><text x="57.4914%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (29 samples, 0.05%)</title><rect x="57.2463%" y="1125" width="0.0474%" height="15" fill="rgb(242,65,0)" fg:x="35013" fg:w="29"/><text x="57.4963%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (29 samples, 0.05%)</title><rect x="57.2463%" y="1109" width="0.0474%" height="15" fill="rgb(235,201,12)" fg:x="35013" fg:w="29"/><text x="57.4963%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 0.03%)</title><rect x="57.2643%" y="1093" width="0.0294%" height="15" fill="rgb(233,161,9)" fg:x="35024" fg:w="18"/><text x="57.5143%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.03%)</title><rect x="57.2970%" y="1205" width="0.0311%" height="15" fill="rgb(241,207,41)" fg:x="35044" fg:w="19"/><text x="57.5470%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="57.3444%" y="1189" width="0.0196%" height="15" fill="rgb(212,69,46)" fg:x="35073" fg:w="12"/><text x="57.5944%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="57.3477%" y="1173" width="0.0164%" height="15" fill="rgb(239,69,45)" fg:x="35075" fg:w="10"/><text x="57.5977%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (45 samples, 0.07%)</title><rect x="57.2937%" y="1221" width="0.0736%" height="15" fill="rgb(242,117,48)" fg:x="35042" fg:w="45"/><text x="57.5437%" y="1231.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (20 samples, 0.03%)</title><rect x="57.3346%" y="1205" width="0.0327%" height="15" fill="rgb(228,41,36)" fg:x="35067" fg:w="20"/><text x="57.5846%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.02%)</title><rect x="57.3722%" y="1205" width="0.0164%" height="15" fill="rgb(212,3,32)" fg:x="35090" fg:w="10"/><text x="57.6222%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="57.3951%" y="1189" width="0.0147%" height="15" fill="rgb(233,41,49)" fg:x="35104" fg:w="9"/><text x="57.6451%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="57.3984%" y="1173" width="0.0114%" height="15" fill="rgb(252,170,49)" fg:x="35106" fg:w="7"/><text x="57.6484%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="57.3918%" y="1205" width="0.0196%" height="15" fill="rgb(229,53,26)" fg:x="35102" fg:w="12"/><text x="57.6418%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.02%)</title><rect x="57.4229%" y="1189" width="0.0180%" height="15" fill="rgb(217,157,12)" fg:x="35121" fg:w="11"/><text x="57.6729%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="57.4556%" y="1173" width="0.0131%" height="15" fill="rgb(227,17,9)" fg:x="35141" fg:w="8"/><text x="57.7056%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (16 samples, 0.03%)</title><rect x="57.4442%" y="1189" width="0.0262%" height="15" fill="rgb(218,84,12)" fg:x="35134" fg:w="16"/><text x="57.6942%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_free (14 samples, 0.02%)</title><rect x="57.4720%" y="1173" width="0.0229%" height="15" fill="rgb(212,79,24)" fg:x="35151" fg:w="14"/><text x="57.7220%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.02%)</title><rect x="57.4948%" y="1173" width="0.0164%" height="15" fill="rgb(217,222,37)" fg:x="35165" fg:w="10"/><text x="57.7448%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.05%)</title><rect x="57.5357%" y="1157" width="0.0540%" height="15" fill="rgb(246,208,8)" fg:x="35190" fg:w="33"/><text x="57.7857%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.04%)</title><rect x="57.5455%" y="1141" width="0.0441%" height="15" fill="rgb(244,133,10)" fg:x="35196" fg:w="27"/><text x="57.7955%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (43 samples, 0.07%)</title><rect x="57.5210%" y="1173" width="0.0703%" height="15" fill="rgb(209,219,41)" fg:x="35181" fg:w="43"/><text x="57.7710%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36 samples, 0.06%)</title><rect x="57.6093%" y="1157" width="0.0589%" height="15" fill="rgb(253,175,45)" fg:x="35235" fg:w="36"/><text x="57.8593%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.05%)</title><rect x="57.7074%" y="1141" width="0.0474%" height="15" fill="rgb(235,100,37)" fg:x="35295" fg:w="29"/><text x="57.9574%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.04%)</title><rect x="57.7156%" y="1125" width="0.0392%" height="15" fill="rgb(225,87,19)" fg:x="35300" fg:w="24"/><text x="57.9656%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (54 samples, 0.09%)</title><rect x="57.6845%" y="1157" width="0.0883%" height="15" fill="rgb(217,152,17)" fg:x="35281" fg:w="54"/><text x="57.9345%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (10 samples, 0.02%)</title><rect x="57.7565%" y="1141" width="0.0164%" height="15" fill="rgb(235,72,13)" fg:x="35325" fg:w="10"/><text x="58.0065%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="57.7990%" y="1141" width="0.0147%" height="15" fill="rgb(233,140,18)" fg:x="35351" fg:w="9"/><text x="58.0490%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="57.8137%" y="1125" width="0.0131%" height="15" fill="rgb(207,212,28)" fg:x="35360" fg:w="8"/><text x="58.0637%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26 samples, 0.04%)</title><rect x="57.8480%" y="1109" width="0.0425%" height="15" fill="rgb(220,130,25)" fg:x="35381" fg:w="26"/><text x="58.0980%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.02%)</title><rect x="57.9036%" y="1093" width="0.0245%" height="15" fill="rgb(205,55,34)" fg:x="35415" fg:w="15"/><text x="58.1536%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="57.9118%" y="1077" width="0.0164%" height="15" fill="rgb(237,54,35)" fg:x="35420" fg:w="10"/><text x="58.1618%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (22 samples, 0.04%)</title><rect x="57.8987%" y="1109" width="0.0360%" height="15" fill="rgb(208,67,23)" fg:x="35412" fg:w="22"/><text x="58.1487%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="57.9804%" y="1077" width="0.0131%" height="15" fill="rgb(206,207,50)" fg:x="35462" fg:w="8"/><text x="58.2304%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="57.9821%" y="1061" width="0.0114%" height="15" fill="rgb(213,211,42)" fg:x="35463" fg:w="7"/><text x="58.2321%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (23 samples, 0.04%)</title><rect x="57.9641%" y="1093" width="0.0376%" height="15" fill="rgb(252,197,50)" fg:x="35452" fg:w="23"/><text x="58.2141%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="58.0099%" y="1077" width="0.0131%" height="15" fill="rgb(251,211,41)" fg:x="35480" fg:w="8"/><text x="58.2599%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="58.0230%" y="1077" width="0.0114%" height="15" fill="rgb(229,211,5)" fg:x="35488" fg:w="7"/><text x="58.2730%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26 samples, 0.04%)</title><rect x="58.0475%" y="1061" width="0.0425%" height="15" fill="rgb(239,36,31)" fg:x="35503" fg:w="26"/><text x="58.2975%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.03%)</title><rect x="58.1112%" y="1045" width="0.0278%" height="15" fill="rgb(248,67,31)" fg:x="35542" fg:w="17"/><text x="58.3612%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.02%)</title><rect x="58.1162%" y="1029" width="0.0229%" height="15" fill="rgb(249,55,44)" fg:x="35545" fg:w="14"/><text x="58.3662%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (28 samples, 0.05%)</title><rect x="58.1014%" y="1061" width="0.0458%" height="15" fill="rgb(216,82,12)" fg:x="35536" fg:w="28"/><text x="58.3514%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (90 samples, 0.15%)</title><rect x="58.0017%" y="1093" width="0.1472%" height="15" fill="rgb(242,174,1)" fg:x="35475" fg:w="90"/><text x="58.2517%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (64 samples, 0.10%)</title><rect x="58.0442%" y="1077" width="0.1046%" height="15" fill="rgb(208,120,29)" fg:x="35501" fg:w="64"/><text x="58.2942%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="58.1717%" y="1061" width="0.0114%" height="15" fill="rgb(221,105,43)" fg:x="35579" fg:w="7"/><text x="58.4217%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (500 samples, 0.82%)</title><rect x="57.3673%" y="1221" width="0.8175%" height="15" fill="rgb(234,124,22)" fg:x="35087" fg:w="500"/><text x="57.6173%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (473 samples, 0.77%)</title><rect x="57.4115%" y="1205" width="0.7734%" height="15" fill="rgb(212,23,30)" fg:x="35114" fg:w="473"/><text x="57.6615%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (437 samples, 0.71%)</title><rect x="57.4703%" y="1189" width="0.7145%" height="15" fill="rgb(219,122,53)" fg:x="35150" fg:w="437"/><text x="57.7203%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (363 samples, 0.59%)</title><rect x="57.5913%" y="1173" width="0.5935%" height="15" fill="rgb(248,84,24)" fg:x="35224" fg:w="363"/><text x="57.8413%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (252 samples, 0.41%)</title><rect x="57.7728%" y="1157" width="0.4120%" height="15" fill="rgb(245,115,18)" fg:x="35335" fg:w="252"/><text x="58.0228%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (227 samples, 0.37%)</title><rect x="57.8137%" y="1141" width="0.3711%" height="15" fill="rgb(227,176,51)" fg:x="35360" fg:w="227"/><text x="58.0637%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (212 samples, 0.35%)</title><rect x="57.8382%" y="1125" width="0.3466%" height="15" fill="rgb(229,63,42)" fg:x="35375" fg:w="212"/><text x="58.0882%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (152 samples, 0.25%)</title><rect x="57.9363%" y="1109" width="0.2485%" height="15" fill="rgb(247,202,24)" fg:x="35435" fg:w="152"/><text x="58.1863%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 0.03%)</title><rect x="58.1505%" y="1093" width="0.0343%" height="15" fill="rgb(244,173,20)" fg:x="35566" fg:w="21"/><text x="58.4005%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="58.1668%" y="1077" width="0.0180%" height="15" fill="rgb(242,81,47)" fg:x="35576" fg:w="11"/><text x="58.4168%" y="1087.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="58.1848%" y="1205" width="0.0114%" height="15" fill="rgb(231,185,54)" fg:x="35587" fg:w="7"/><text x="58.4348%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="58.2715%" y="1109" width="0.0114%" height="15" fill="rgb(243,55,32)" fg:x="35640" fg:w="7"/><text x="58.5215%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="58.2649%" y="1125" width="0.0213%" height="15" fill="rgb(208,167,19)" fg:x="35636" fg:w="13"/><text x="58.5149%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="58.2960%" y="1109" width="0.0196%" height="15" fill="rgb(231,72,35)" fg:x="35655" fg:w="12"/><text x="58.5460%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="58.3009%" y="1093" width="0.0147%" height="15" fill="rgb(250,173,51)" fg:x="35658" fg:w="9"/><text x="58.5509%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="58.3336%" y="1061" width="0.0114%" height="15" fill="rgb(209,5,22)" fg:x="35678" fg:w="7"/><text x="58.5836%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.19%)</title><rect x="58.2028%" y="1173" width="0.1897%" height="15" fill="rgb(250,174,19)" fg:x="35598" fg:w="116"/><text x="58.4528%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (106 samples, 0.17%)</title><rect x="58.2192%" y="1157" width="0.1733%" height="15" fill="rgb(217,3,49)" fg:x="35608" fg:w="106"/><text x="58.4692%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (92 samples, 0.15%)</title><rect x="58.2420%" y="1141" width="0.1504%" height="15" fill="rgb(218,225,5)" fg:x="35622" fg:w="92"/><text x="58.4920%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (65 samples, 0.11%)</title><rect x="58.2862%" y="1125" width="0.1063%" height="15" fill="rgb(236,89,11)" fg:x="35649" fg:w="65"/><text x="58.5362%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (47 samples, 0.08%)</title><rect x="58.3156%" y="1109" width="0.0768%" height="15" fill="rgb(206,33,28)" fg:x="35667" fg:w="47"/><text x="58.5656%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (42 samples, 0.07%)</title><rect x="58.3238%" y="1093" width="0.0687%" height="15" fill="rgb(241,56,42)" fg:x="35672" fg:w="42"/><text x="58.5738%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (39 samples, 0.06%)</title><rect x="58.3287%" y="1077" width="0.0638%" height="15" fill="rgb(222,44,11)" fg:x="35675" fg:w="39"/><text x="58.5787%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 0.04%)</title><rect x="58.3549%" y="1061" width="0.0376%" height="15" fill="rgb(234,111,20)" fg:x="35691" fg:w="23"/><text x="58.6049%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (14 samples, 0.02%)</title><rect x="58.3696%" y="1045" width="0.0229%" height="15" fill="rgb(237,77,6)" fg:x="35700" fg:w="14"/><text x="58.6196%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.02%)</title><rect x="58.3761%" y="1029" width="0.0164%" height="15" fill="rgb(235,111,23)" fg:x="35704" fg:w="10"/><text x="58.6261%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.02%)</title><rect x="58.4350%" y="1077" width="0.0180%" height="15" fill="rgb(251,135,29)" fg:x="35740" fg:w="11"/><text x="58.6850%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (37 samples, 0.06%)</title><rect x="58.4055%" y="1157" width="0.0605%" height="15" fill="rgb(217,57,1)" fg:x="35722" fg:w="37"/><text x="58.6555%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (26 samples, 0.04%)</title><rect x="58.4235%" y="1141" width="0.0425%" height="15" fill="rgb(249,119,31)" fg:x="35733" fg:w="26"/><text x="58.6735%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (24 samples, 0.04%)</title><rect x="58.4268%" y="1125" width="0.0392%" height="15" fill="rgb(233,164,33)" fg:x="35735" fg:w="24"/><text x="58.6768%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.04%)</title><rect x="58.4284%" y="1109" width="0.0376%" height="15" fill="rgb(250,217,43)" fg:x="35736" fg:w="23"/><text x="58.6784%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.03%)</title><rect x="58.4317%" y="1093" width="0.0343%" height="15" fill="rgb(232,154,50)" fg:x="35738" fg:w="21"/><text x="58.6817%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="58.4530%" y="1077" width="0.0131%" height="15" fill="rgb(227,190,8)" fg:x="35751" fg:w="8"/><text x="58.7030%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="58.4857%" y="1141" width="0.0131%" height="15" fill="rgb(209,217,32)" fg:x="35771" fg:w="8"/><text x="58.7357%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="58.5838%" y="1013" width="0.0147%" height="15" fill="rgb(243,203,50)" fg:x="35831" fg:w="9"/><text x="58.8338%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="58.5838%" y="997" width="0.0147%" height="15" fill="rgb(232,152,27)" fg:x="35831" fg:w="9"/><text x="58.8338%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (14 samples, 0.02%)</title><rect x="58.5789%" y="1029" width="0.0229%" height="15" fill="rgb(240,34,29)" fg:x="35828" fg:w="14"/><text x="58.8289%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (20 samples, 0.03%)</title><rect x="58.5740%" y="1045" width="0.0327%" height="15" fill="rgb(215,185,52)" fg:x="35825" fg:w="20"/><text x="58.8240%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14 samples, 0.02%)</title><rect x="58.6116%" y="1029" width="0.0229%" height="15" fill="rgb(240,89,49)" fg:x="35848" fg:w="14"/><text x="58.8616%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="58.6459%" y="1013" width="0.0114%" height="15" fill="rgb(225,12,52)" fg:x="35869" fg:w="7"/><text x="58.8959%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (16 samples, 0.03%)</title><rect x="58.6377%" y="1029" width="0.0262%" height="15" fill="rgb(239,128,45)" fg:x="35864" fg:w="16"/><text x="58.8877%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="58.6900%" y="997" width="0.0180%" height="15" fill="rgb(211,78,47)" fg:x="35896" fg:w="11"/><text x="58.9400%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (17 samples, 0.03%)</title><rect x="58.7195%" y="997" width="0.0278%" height="15" fill="rgb(232,31,21)" fg:x="35914" fg:w="17"/><text x="58.9695%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (10 samples, 0.02%)</title><rect x="58.7309%" y="981" width="0.0164%" height="15" fill="rgb(222,168,14)" fg:x="35921" fg:w="10"/><text x="58.9809%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (10 samples, 0.02%)</title><rect x="58.7767%" y="965" width="0.0164%" height="15" fill="rgb(209,128,24)" fg:x="35949" fg:w="10"/><text x="59.0267%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (8 samples, 0.01%)</title><rect x="58.7800%" y="949" width="0.0131%" height="15" fill="rgb(249,35,13)" fg:x="35951" fg:w="8"/><text x="59.0300%" y="959.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (30 samples, 0.05%)</title><rect x="58.7751%" y="981" width="0.0491%" height="15" fill="rgb(218,7,2)" fg:x="35948" fg:w="30"/><text x="59.0251%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 0.03%)</title><rect x="58.7947%" y="965" width="0.0294%" height="15" fill="rgb(238,107,27)" fg:x="35960" fg:w="18"/><text x="59.0447%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (16 samples, 0.03%)</title><rect x="58.7979%" y="949" width="0.0262%" height="15" fill="rgb(217,88,38)" fg:x="35962" fg:w="16"/><text x="59.0479%" y="959.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.01%)</title><rect x="58.8127%" y="933" width="0.0114%" height="15" fill="rgb(230,207,0)" fg:x="35971" fg:w="7"/><text x="59.0627%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="58.8535%" y="917" width="0.0164%" height="15" fill="rgb(249,64,54)" fg:x="35996" fg:w="10"/><text x="59.1035%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="58.8552%" y="901" width="0.0147%" height="15" fill="rgb(231,7,11)" fg:x="35997" fg:w="9"/><text x="59.1052%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (14 samples, 0.02%)</title><rect x="58.8486%" y="949" width="0.0229%" height="15" fill="rgb(205,149,21)" fg:x="35993" fg:w="14"/><text x="59.0986%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (13 samples, 0.02%)</title><rect x="58.8503%" y="933" width="0.0213%" height="15" fill="rgb(215,126,34)" fg:x="35994" fg:w="13"/><text x="59.1003%" y="943.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (119 samples, 0.19%)</title><rect x="58.6851%" y="1013" width="0.1946%" height="15" fill="rgb(241,132,45)" fg:x="35893" fg:w="119"/><text x="58.9351%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (79 samples, 0.13%)</title><rect x="58.7505%" y="997" width="0.1292%" height="15" fill="rgb(252,69,32)" fg:x="35933" fg:w="79"/><text x="59.0005%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 0.06%)</title><rect x="58.8241%" y="981" width="0.0556%" height="15" fill="rgb(232,204,19)" fg:x="35978" fg:w="34"/><text x="59.0741%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (29 samples, 0.05%)</title><rect x="58.8323%" y="965" width="0.0474%" height="15" fill="rgb(249,15,47)" fg:x="35983" fg:w="29"/><text x="59.0823%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (200 samples, 0.33%)</title><rect x="58.5543%" y="1061" width="0.3270%" height="15" fill="rgb(209,227,23)" fg:x="35813" fg:w="200"/><text x="58.8043%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (168 samples, 0.27%)</title><rect x="58.6067%" y="1045" width="0.2747%" height="15" fill="rgb(248,92,24)" fg:x="35845" fg:w="168"/><text x="58.8567%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (133 samples, 0.22%)</title><rect x="58.6639%" y="1029" width="0.2175%" height="15" fill="rgb(247,59,2)" fg:x="35880" fg:w="133"/><text x="58.9139%" y="1039.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (216 samples, 0.35%)</title><rect x="58.5331%" y="1093" width="0.3532%" height="15" fill="rgb(221,30,5)" fg:x="35800" fg:w="216"/><text x="58.7831%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (210 samples, 0.34%)</title><rect x="58.5429%" y="1077" width="0.3434%" height="15" fill="rgb(208,108,53)" fg:x="35806" fg:w="210"/><text x="58.7929%" y="1087.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (236 samples, 0.39%)</title><rect x="58.5020%" y="1125" width="0.3859%" height="15" fill="rgb(211,183,26)" fg:x="35781" fg:w="236"/><text x="58.7520%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (219 samples, 0.36%)</title><rect x="58.5298%" y="1109" width="0.3581%" height="15" fill="rgb(232,132,4)" fg:x="35798" fg:w="219"/><text x="58.7798%" y="1119.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (304 samples, 0.50%)</title><rect x="58.3941%" y="1173" width="0.4970%" height="15" fill="rgb(253,128,37)" fg:x="35715" fg:w="304"/><text x="58.6441%" y="1183.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (257 samples, 0.42%)</title><rect x="58.4709%" y="1157" width="0.4202%" height="15" fill="rgb(221,58,24)" fg:x="35762" fg:w="257"/><text x="58.7209%" y="1167.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (240 samples, 0.39%)</title><rect x="58.4987%" y="1141" width="0.3924%" height="15" fill="rgb(230,54,45)" fg:x="35779" fg:w="240"/><text x="58.7487%" y="1151.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="58.9794%" y="981" width="0.0114%" height="15" fill="rgb(254,21,18)" fg:x="36073" fg:w="7"/><text x="59.2294%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="59.0448%" y="869" width="0.0196%" height="15" fill="rgb(221,108,0)" fg:x="36113" fg:w="12"/><text x="59.2948%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="59.0481%" y="853" width="0.0164%" height="15" fill="rgb(206,95,1)" fg:x="36115" fg:w="10"/><text x="59.2981%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 0.06%)</title><rect x="59.0203%" y="917" width="0.0572%" height="15" fill="rgb(237,52,5)" fg:x="36098" fg:w="35"/><text x="59.2703%" y="927.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.05%)</title><rect x="59.0252%" y="901" width="0.0523%" height="15" fill="rgb(218,150,34)" fg:x="36101" fg:w="32"/><text x="59.2752%" y="911.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (23 samples, 0.04%)</title><rect x="59.0399%" y="885" width="0.0376%" height="15" fill="rgb(235,194,28)" fg:x="36110" fg:w="23"/><text x="59.2899%" y="895.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.01%)</title><rect x="59.0645%" y="869" width="0.0131%" height="15" fill="rgb(245,92,18)" fg:x="36125" fg:w="8"/><text x="59.3145%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.06%)</title><rect x="59.0170%" y="949" width="0.0638%" height="15" fill="rgb(253,203,53)" fg:x="36096" fg:w="39"/><text x="59.2670%" y="959.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (38 samples, 0.06%)</title><rect x="59.0187%" y="933" width="0.0621%" height="15" fill="rgb(249,185,47)" fg:x="36097" fg:w="38"/><text x="59.2687%" y="943.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (48 samples, 0.08%)</title><rect x="59.0040%" y="965" width="0.0785%" height="15" fill="rgb(252,194,52)" fg:x="36088" fg:w="48"/><text x="59.2540%" y="975.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (73 samples, 0.12%)</title><rect x="58.9647%" y="1013" width="0.1194%" height="15" fill="rgb(210,53,36)" fg:x="36064" fg:w="73"/><text x="59.2147%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (66 samples, 0.11%)</title><rect x="58.9762%" y="997" width="0.1079%" height="15" fill="rgb(237,37,25)" fg:x="36071" fg:w="66"/><text x="59.2262%" y="1007.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.09%)</title><rect x="58.9909%" y="981" width="0.0932%" height="15" fill="rgb(242,116,27)" fg:x="36080" fg:w="57"/><text x="59.2409%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (99 samples, 0.16%)</title><rect x="58.9238%" y="1093" width="0.1619%" height="15" fill="rgb(213,185,26)" fg:x="36039" fg:w="99"/><text x="59.1738%" y="1103.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.16%)</title><rect x="58.9271%" y="1077" width="0.1586%" height="15" fill="rgb(225,204,8)" fg:x="36041" fg:w="97"/><text x="59.1771%" y="1087.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (92 samples, 0.15%)</title><rect x="58.9353%" y="1061" width="0.1504%" height="15" fill="rgb(254,111,37)" fg:x="36046" fg:w="92"/><text x="59.1853%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (87 samples, 0.14%)</title><rect x="58.9435%" y="1045" width="0.1422%" height="15" fill="rgb(242,35,9)" fg:x="36051" fg:w="87"/><text x="59.1935%" y="1055.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.14%)</title><rect x="58.9500%" y="1029" width="0.1357%" height="15" fill="rgb(232,138,49)" fg:x="36055" fg:w="83"/><text x="59.2000%" y="1039.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (105 samples, 0.17%)</title><rect x="58.9157%" y="1109" width="0.1717%" height="15" fill="rgb(247,56,4)" fg:x="36034" fg:w="105"/><text x="59.1657%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (115 samples, 0.19%)</title><rect x="58.9010%" y="1141" width="0.1880%" height="15" fill="rgb(226,179,17)" fg:x="36025" fg:w="115"/><text x="59.1510%" y="1151.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.18%)</title><rect x="58.9075%" y="1125" width="0.1815%" height="15" fill="rgb(216,163,45)" fg:x="36029" fg:w="111"/><text x="59.1575%" y="1135.50"></text></g><g><title>sk-gen`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (555 samples, 0.91%)</title><rect x="58.1848%" y="1221" width="0.9074%" height="15" fill="rgb(211,157,3)" fg:x="35587" fg:w="555"/><text x="58.4348%" y="1231.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (548 samples, 0.90%)</title><rect x="58.1963%" y="1205" width="0.8960%" height="15" fill="rgb(234,44,20)" fg:x="35594" fg:w="548"/><text x="58.4463%" y="1215.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::hash::Hash&gt;::hash (546 samples, 0.89%)</title><rect x="58.1995%" y="1189" width="0.8927%" height="15" fill="rgb(254,138,23)" fg:x="35596" fg:w="546"/><text x="58.4495%" y="1199.50"></text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (123 samples, 0.20%)</title><rect x="58.8911%" y="1173" width="0.2011%" height="15" fill="rgb(206,119,39)" fg:x="36019" fg:w="123"/><text x="59.1411%" y="1183.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (122 samples, 0.20%)</title><rect x="58.8928%" y="1157" width="0.1995%" height="15" fill="rgb(231,105,52)" fg:x="36020" fg:w="122"/><text x="59.1428%" y="1167.50"></text></g><g><title>sk-gen`console::unix_term::terminal_size (8 samples, 0.01%)</title><rect x="59.0939%" y="1173" width="0.0131%" height="15" fill="rgb(250,20,5)" fg:x="36143" fg:w="8"/><text x="59.3439%" y="1183.50"></text></g><g><title>sk-gen`indicatif::draw_target::Drawable::draw (7 samples, 0.01%)</title><rect x="59.1070%" y="1173" width="0.0114%" height="15" fill="rgb(215,198,30)" fg:x="36151" fg:w="7"/><text x="59.3570%" y="1183.50"></text></g><g><title>sk-gen`indicatif::state::BarState::update_estimate_and_draw (21 samples, 0.03%)</title><rect x="59.0939%" y="1205" width="0.0343%" height="15" fill="rgb(246,142,8)" fg:x="36143" fg:w="21"/><text x="59.3439%" y="1215.50"></text></g><g><title>sk-gen`indicatif::state::BarState::draw (21 samples, 0.03%)</title><rect x="59.0939%" y="1189" width="0.0343%" height="15" fill="rgb(243,26,38)" fg:x="36143" fg:w="21"/><text x="59.3439%" y="1199.50"></text></g><g><title>sk-gen`indicatif::progress_bar::ProgressBar::set_message (22 samples, 0.04%)</title><rect x="59.0939%" y="1221" width="0.0360%" height="15" fill="rgb(205,133,28)" fg:x="36143" fg:w="22"/><text x="59.3439%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (29 samples, 0.05%)</title><rect x="59.1462%" y="1205" width="0.0474%" height="15" fill="rgb(212,34,0)" fg:x="36175" fg:w="29"/><text x="59.3962%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (29 samples, 0.05%)</title><rect x="59.1462%" y="1189" width="0.0474%" height="15" fill="rgb(251,226,22)" fg:x="36175" fg:w="29"/><text x="59.3962%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (27 samples, 0.04%)</title><rect x="59.1495%" y="1173" width="0.0441%" height="15" fill="rgb(252,119,9)" fg:x="36177" fg:w="27"/><text x="59.3995%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (24 samples, 0.04%)</title><rect x="59.1544%" y="1157" width="0.0392%" height="15" fill="rgb(213,150,50)" fg:x="36180" fg:w="24"/><text x="59.4044%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 0.04%)</title><rect x="59.1560%" y="1141" width="0.0376%" height="15" fill="rgb(212,24,39)" fg:x="36181" fg:w="23"/><text x="59.4060%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 0.03%)</title><rect x="59.1675%" y="1125" width="0.0262%" height="15" fill="rgb(213,46,39)" fg:x="36188" fg:w="16"/><text x="59.4175%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (15 samples, 0.02%)</title><rect x="59.1691%" y="1109" width="0.0245%" height="15" fill="rgb(239,106,12)" fg:x="36189" fg:w="15"/><text x="59.4191%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 0.02%)</title><rect x="59.1691%" y="1093" width="0.0245%" height="15" fill="rgb(249,229,21)" fg:x="36189" fg:w="15"/><text x="59.4191%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.02%)</title><rect x="59.1756%" y="1077" width="0.0180%" height="15" fill="rgb(212,158,3)" fg:x="36193" fg:w="11"/><text x="59.4256%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (8 samples, 0.01%)</title><rect x="59.1805%" y="1061" width="0.0131%" height="15" fill="rgb(253,26,48)" fg:x="36196" fg:w="8"/><text x="59.4305%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.01%)</title><rect x="59.1805%" y="1045" width="0.0131%" height="15" fill="rgb(238,178,20)" fg:x="36196" fg:w="8"/><text x="59.4305%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="59.1822%" y="1029" width="0.0114%" height="15" fill="rgb(208,86,15)" fg:x="36197" fg:w="7"/><text x="59.4322%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="59.2296%" y="1077" width="0.0114%" height="15" fill="rgb(239,42,53)" fg:x="36226" fg:w="7"/><text x="59.4796%" y="1087.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (42 samples, 0.07%)</title><rect x="59.2263%" y="1093" width="0.0687%" height="15" fill="rgb(245,226,8)" fg:x="36224" fg:w="42"/><text x="59.4763%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 0.05%)</title><rect x="59.2410%" y="1077" width="0.0540%" height="15" fill="rgb(216,176,32)" fg:x="36233" fg:w="33"/><text x="59.4910%" y="1087.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 0.05%)</title><rect x="59.2459%" y="1061" width="0.0491%" height="15" fill="rgb(231,186,21)" fg:x="36236" fg:w="30"/><text x="59.4959%" y="1071.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (28 samples, 0.05%)</title><rect x="59.2492%" y="1045" width="0.0458%" height="15" fill="rgb(205,95,49)" fg:x="36238" fg:w="28"/><text x="59.4992%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 0.03%)</title><rect x="59.2639%" y="1029" width="0.0311%" height="15" fill="rgb(217,145,8)" fg:x="36247" fg:w="19"/><text x="59.5139%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.01%)</title><rect x="59.2803%" y="1013" width="0.0147%" height="15" fill="rgb(239,144,48)" fg:x="36257" fg:w="9"/><text x="59.5303%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (7 samples, 0.01%)</title><rect x="59.2835%" y="997" width="0.0114%" height="15" fill="rgb(214,189,23)" fg:x="36259" fg:w="7"/><text x="59.5335%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (48 samples, 0.08%)</title><rect x="59.2181%" y="1125" width="0.0785%" height="15" fill="rgb(229,157,17)" fg:x="36219" fg:w="48"/><text x="59.4681%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (46 samples, 0.08%)</title><rect x="59.2214%" y="1109" width="0.0752%" height="15" fill="rgb(230,5,48)" fg:x="36221" fg:w="46"/><text x="59.4714%" y="1119.50"></text></g><g><title>sk-gen`serde_json::value::to_value (98 samples, 0.16%)</title><rect x="59.1380%" y="1221" width="0.1602%" height="15" fill="rgb(224,156,48)" fg:x="36170" fg:w="98"/><text x="59.3880%" y="1231.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (64 samples, 0.10%)</title><rect x="59.1936%" y="1205" width="0.1046%" height="15" fill="rgb(223,14,29)" fg:x="36204" fg:w="64"/><text x="59.4436%" y="1215.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (59 samples, 0.10%)</title><rect x="59.2018%" y="1189" width="0.0965%" height="15" fill="rgb(229,96,36)" fg:x="36209" fg:w="59"/><text x="59.4518%" y="1199.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (58 samples, 0.09%)</title><rect x="59.2034%" y="1173" width="0.0948%" height="15" fill="rgb(231,102,53)" fg:x="36210" fg:w="58"/><text x="59.4534%" y="1183.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (56 samples, 0.09%)</title><rect x="59.2067%" y="1157" width="0.0916%" height="15" fill="rgb(210,77,38)" fg:x="36212" fg:w="56"/><text x="59.4567%" y="1167.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (51 samples, 0.08%)</title><rect x="59.2149%" y="1141" width="0.0834%" height="15" fill="rgb(235,131,6)" fg:x="36217" fg:w="51"/><text x="59.4649%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="59.3195%" y="1205" width="0.0147%" height="15" fill="rgb(252,55,38)" fg:x="36281" fg:w="9"/><text x="59.5695%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="59.4176%" y="1141" width="0.0164%" height="15" fill="rgb(246,38,14)" fg:x="36341" fg:w="10"/><text x="59.6676%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="59.4340%" y="1141" width="0.0114%" height="15" fill="rgb(242,27,5)" fg:x="36351" fg:w="7"/><text x="59.6840%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="59.4634%" y="1109" width="0.0147%" height="15" fill="rgb(228,65,35)" fg:x="36369" fg:w="9"/><text x="59.7134%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="59.5255%" y="1077" width="0.0147%" height="15" fill="rgb(245,93,11)" fg:x="36407" fg:w="9"/><text x="59.7755%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="59.5272%" y="1061" width="0.0131%" height="15" fill="rgb(213,1,31)" fg:x="36408" fg:w="8"/><text x="59.7772%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (26 samples, 0.04%)</title><rect x="59.5026%" y="1093" width="0.0425%" height="15" fill="rgb(237,205,14)" fg:x="36393" fg:w="26"/><text x="59.7526%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (33 samples, 0.05%)</title><rect x="59.4928%" y="1109" width="0.0540%" height="15" fill="rgb(232,118,45)" fg:x="36387" fg:w="33"/><text x="59.7428%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 0.02%)</title><rect x="59.5468%" y="1109" width="0.0213%" height="15" fill="rgb(218,5,6)" fg:x="36420" fg:w="13"/><text x="59.7968%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (73 samples, 0.12%)</title><rect x="59.4601%" y="1125" width="0.1194%" height="15" fill="rgb(251,87,51)" fg:x="36367" fg:w="73"/><text x="59.7101%" y="1135.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (77 samples, 0.13%)</title><rect x="59.4569%" y="1141" width="0.1259%" height="15" fill="rgb(207,225,20)" fg:x="36365" fg:w="77"/><text x="59.7069%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (122 samples, 0.20%)</title><rect x="59.4111%" y="1157" width="0.1995%" height="15" fill="rgb(222,78,54)" fg:x="36337" fg:w="122"/><text x="59.6611%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="59.5926%" y="1141" width="0.0180%" height="15" fill="rgb(232,85,16)" fg:x="36448" fg:w="11"/><text x="59.8426%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="59.5958%" y="1125" width="0.0147%" height="15" fill="rgb(244,25,33)" fg:x="36450" fg:w="9"/><text x="59.8458%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="59.6105%" y="1157" width="0.0131%" height="15" fill="rgb(233,24,36)" fg:x="36459" fg:w="8"/><text x="59.8605%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (152 samples, 0.25%)</title><rect x="59.3784%" y="1173" width="0.2485%" height="15" fill="rgb(253,49,54)" fg:x="36317" fg:w="152"/><text x="59.6284%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="59.6269%" y="1173" width="0.0147%" height="15" fill="rgb(245,12,22)" fg:x="36469" fg:w="9"/><text x="59.8769%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (179 samples, 0.29%)</title><rect x="59.3555%" y="1189" width="0.2927%" height="15" fill="rgb(253,141,28)" fg:x="36303" fg:w="179"/><text x="59.6055%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="59.6694%" y="1157" width="0.0229%" height="15" fill="rgb(225,207,27)" fg:x="36495" fg:w="14"/><text x="59.9194%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="59.6759%" y="1141" width="0.0164%" height="15" fill="rgb(220,84,2)" fg:x="36499" fg:w="10"/><text x="59.9259%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.01%)</title><rect x="59.6808%" y="1125" width="0.0114%" height="15" fill="rgb(224,37,37)" fg:x="36502" fg:w="7"/><text x="59.9308%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="59.6923%" y="1157" width="0.0114%" height="15" fill="rgb(220,143,18)" fg:x="36509" fg:w="7"/><text x="59.9423%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="59.7479%" y="1125" width="0.0147%" height="15" fill="rgb(210,88,33)" fg:x="36543" fg:w="9"/><text x="59.9979%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="59.7512%" y="1109" width="0.0114%" height="15" fill="rgb(219,87,51)" fg:x="36545" fg:w="7"/><text x="60.0012%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.01%)</title><rect x="59.7822%" y="1109" width="0.0131%" height="15" fill="rgb(211,7,35)" fg:x="36564" fg:w="8"/><text x="60.0322%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="59.7969%" y="1109" width="0.0180%" height="15" fill="rgb(232,77,2)" fg:x="36573" fg:w="11"/><text x="60.0469%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="59.7986%" y="1093" width="0.0164%" height="15" fill="rgb(249,94,25)" fg:x="36574" fg:w="10"/><text x="60.0486%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.01%)</title><rect x="59.8035%" y="1077" width="0.0114%" height="15" fill="rgb(215,112,2)" fg:x="36577" fg:w="7"/><text x="60.0535%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.02%)</title><rect x="59.8182%" y="1109" width="0.0245%" height="15" fill="rgb(226,115,48)" fg:x="36586" fg:w="15"/><text x="60.0682%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="59.8656%" y="1077" width="0.0114%" height="15" fill="rgb(249,196,10)" fg:x="36615" fg:w="7"/><text x="60.1156%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="59.8770%" y="1077" width="0.0180%" height="15" fill="rgb(237,109,14)" fg:x="36622" fg:w="11"/><text x="60.1270%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="59.9196%" y="1045" width="0.0147%" height="15" fill="rgb(217,103,53)" fg:x="36648" fg:w="9"/><text x="60.1696%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.02%)</title><rect x="59.9343%" y="1045" width="0.0245%" height="15" fill="rgb(244,137,9)" fg:x="36657" fg:w="15"/><text x="60.1843%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.02%)</title><rect x="59.9392%" y="1029" width="0.0196%" height="15" fill="rgb(227,201,3)" fg:x="36660" fg:w="12"/><text x="60.1892%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="59.9457%" y="1013" width="0.0131%" height="15" fill="rgb(243,94,6)" fg:x="36664" fg:w="8"/><text x="60.1957%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="59.9588%" y="1045" width="0.0180%" height="15" fill="rgb(235,118,5)" fg:x="36672" fg:w="11"/><text x="60.2088%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (49 samples, 0.08%)</title><rect x="59.9130%" y="1061" width="0.0801%" height="15" fill="rgb(247,10,30)" fg:x="36644" fg:w="49"/><text x="60.1630%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="59.9768%" y="1045" width="0.0164%" height="15" fill="rgb(205,26,28)" fg:x="36683" fg:w="10"/><text x="60.2268%" y="1055.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (64 samples, 0.10%)</title><rect x="59.8950%" y="1077" width="0.1046%" height="15" fill="rgb(206,99,35)" fg:x="36633" fg:w="64"/><text x="60.1450%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="60.0078%" y="1061" width="0.0147%" height="15" fill="rgb(238,130,40)" fg:x="36702" fg:w="9"/><text x="60.2578%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="60.0111%" y="1045" width="0.0114%" height="15" fill="rgb(224,126,31)" fg:x="36704" fg:w="7"/><text x="60.2611%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (16 samples, 0.03%)</title><rect x="60.0258%" y="1061" width="0.0262%" height="15" fill="rgb(254,105,17)" fg:x="36713" fg:w="16"/><text x="60.2758%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (37 samples, 0.06%)</title><rect x="59.9997%" y="1077" width="0.0605%" height="15" fill="rgb(216,87,36)" fg:x="36697" fg:w="37"/><text x="60.2497%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="60.0602%" y="1077" width="0.0245%" height="15" fill="rgb(240,21,12)" fg:x="36734" fg:w="15"/><text x="60.3102%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="60.0700%" y="1061" width="0.0147%" height="15" fill="rgb(245,192,34)" fg:x="36740" fg:w="9"/><text x="60.3200%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (148 samples, 0.24%)</title><rect x="59.8493%" y="1093" width="0.2420%" height="15" fill="rgb(226,100,49)" fg:x="36605" fg:w="148"/><text x="60.0993%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (156 samples, 0.26%)</title><rect x="59.8427%" y="1109" width="0.2551%" height="15" fill="rgb(245,188,27)" fg:x="36601" fg:w="156"/><text x="60.0927%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 0.02%)</title><rect x="60.0978%" y="1109" width="0.0213%" height="15" fill="rgb(212,170,8)" fg:x="36757" fg:w="13"/><text x="60.3478%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 0.03%)</title><rect x="60.1190%" y="1109" width="0.0294%" height="15" fill="rgb(217,113,29)" fg:x="36770" fg:w="18"/><text x="60.3690%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.02%)</title><rect x="60.1288%" y="1093" width="0.0196%" height="15" fill="rgb(237,30,3)" fg:x="36776" fg:w="12"/><text x="60.3788%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (239 samples, 0.39%)</title><rect x="59.7659%" y="1125" width="0.3908%" height="15" fill="rgb(227,19,28)" fg:x="36554" fg:w="239"/><text x="60.0159%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (261 samples, 0.43%)</title><rect x="59.7364%" y="1141" width="0.4267%" height="15" fill="rgb(239,172,45)" fg:x="36536" fg:w="261"/><text x="59.9864%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (284 samples, 0.46%)</title><rect x="59.7037%" y="1157" width="0.4643%" height="15" fill="rgb(254,55,39)" fg:x="36516" fg:w="284"/><text x="59.9537%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (317 samples, 0.52%)</title><rect x="59.6629%" y="1173" width="0.5183%" height="15" fill="rgb(249,208,12)" fg:x="36491" fg:w="317"/><text x="59.9129%" y="1183.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (328 samples, 0.54%)</title><rect x="59.6563%" y="1189" width="0.5363%" height="15" fill="rgb(240,52,13)" fg:x="36487" fg:w="328"/><text x="59.9063%" y="1199.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="60.1812%" y="1173" width="0.0114%" height="15" fill="rgb(252,149,13)" fg:x="36808" fg:w="7"/><text x="60.4312%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (530 samples, 0.87%)</title><rect x="59.3408%" y="1205" width="0.8666%" height="15" fill="rgb(232,81,48)" fg:x="36294" fg:w="530"/><text x="59.5908%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.02%)</title><rect x="60.2171%" y="1189" width="0.0196%" height="15" fill="rgb(222,144,2)" fg:x="36830" fg:w="12"/><text x="60.4671%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (16 samples, 0.03%)</title><rect x="60.2384%" y="1189" width="0.0262%" height="15" fill="rgb(216,81,32)" fg:x="36843" fg:w="16"/><text x="60.4884%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (25 samples, 0.04%)</title><rect x="60.2874%" y="1173" width="0.0409%" height="15" fill="rgb(244,78,51)" fg:x="36873" fg:w="25"/><text x="60.5374%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (33 samples, 0.05%)</title><rect x="60.3414%" y="1173" width="0.0540%" height="15" fill="rgb(217,66,21)" fg:x="36906" fg:w="33"/><text x="60.5914%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.03%)</title><rect x="60.3626%" y="1157" width="0.0327%" height="15" fill="rgb(247,101,42)" fg:x="36919" fg:w="20"/><text x="60.6126%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.02%)</title><rect x="60.3708%" y="1141" width="0.0245%" height="15" fill="rgb(227,81,39)" fg:x="36924" fg:w="15"/><text x="60.6208%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (13 samples, 0.02%)</title><rect x="60.4084%" y="1157" width="0.0213%" height="15" fill="rgb(220,223,44)" fg:x="36947" fg:w="13"/><text x="60.6584%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.03%)</title><rect x="60.4297%" y="1157" width="0.0311%" height="15" fill="rgb(205,218,2)" fg:x="36960" fg:w="19"/><text x="60.6797%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.03%)</title><rect x="60.4836%" y="1141" width="0.0343%" height="15" fill="rgb(212,207,28)" fg:x="36993" fg:w="21"/><text x="60.7336%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.02%)</title><rect x="60.4951%" y="1125" width="0.0229%" height="15" fill="rgb(224,12,41)" fg:x="37000" fg:w="14"/><text x="60.7451%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (36 samples, 0.06%)</title><rect x="60.4689%" y="1157" width="0.0589%" height="15" fill="rgb(216,118,12)" fg:x="36984" fg:w="36"/><text x="60.7189%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.04%)</title><rect x="60.5409%" y="1141" width="0.0360%" height="15" fill="rgb(252,97,46)" fg:x="37028" fg:w="22"/><text x="60.7909%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.03%)</title><rect x="60.5915%" y="1125" width="0.0327%" height="15" fill="rgb(244,206,19)" fg:x="37059" fg:w="20"/><text x="60.8415%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.02%)</title><rect x="60.5997%" y="1109" width="0.0245%" height="15" fill="rgb(231,84,31)" fg:x="37064" fg:w="15"/><text x="60.8497%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (30 samples, 0.05%)</title><rect x="60.5801%" y="1141" width="0.0491%" height="15" fill="rgb(244,133,0)" fg:x="37052" fg:w="30"/><text x="60.8301%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="60.6455%" y="1109" width="0.0131%" height="15" fill="rgb(223,15,50)" fg:x="37092" fg:w="8"/><text x="60.8955%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="60.6831%" y="1093" width="0.0164%" height="15" fill="rgb(250,118,49)" fg:x="37115" fg:w="10"/><text x="60.9331%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (14 samples, 0.02%)</title><rect x="60.6995%" y="1093" width="0.0229%" height="15" fill="rgb(248,25,38)" fg:x="37125" fg:w="14"/><text x="60.9495%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.01%)</title><rect x="60.7109%" y="1077" width="0.0114%" height="15" fill="rgb(215,70,14)" fg:x="37132" fg:w="7"/><text x="60.9609%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (59 samples, 0.10%)</title><rect x="60.6291%" y="1141" width="0.0965%" height="15" fill="rgb(215,28,15)" fg:x="37082" fg:w="59"/><text x="60.8791%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (52 samples, 0.09%)</title><rect x="60.6406%" y="1125" width="0.0850%" height="15" fill="rgb(243,6,28)" fg:x="37089" fg:w="52"/><text x="60.8906%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (33 samples, 0.05%)</title><rect x="60.6717%" y="1109" width="0.0540%" height="15" fill="rgb(222,130,1)" fg:x="37108" fg:w="33"/><text x="60.9217%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.02%)</title><rect x="60.7616%" y="1093" width="0.0164%" height="15" fill="rgb(236,166,44)" fg:x="37163" fg:w="10"/><text x="61.0116%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="60.7877%" y="1077" width="0.0180%" height="15" fill="rgb(221,108,14)" fg:x="37179" fg:w="11"/><text x="61.0377%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="60.7877%" y="1061" width="0.0180%" height="15" fill="rgb(252,3,45)" fg:x="37179" fg:w="11"/><text x="61.0377%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 samples, 0.02%)</title><rect x="60.7828%" y="1093" width="0.0245%" height="15" fill="rgb(237,68,30)" fg:x="37176" fg:w="15"/><text x="61.0328%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="60.8384%" y="1061" width="0.0114%" height="15" fill="rgb(211,79,22)" fg:x="37210" fg:w="7"/><text x="61.0884%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="60.8335%" y="1077" width="0.0213%" height="15" fill="rgb(252,185,21)" fg:x="37207" fg:w="13"/><text x="61.0835%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.01%)</title><rect x="60.8564%" y="1061" width="0.0114%" height="15" fill="rgb(225,189,26)" fg:x="37221" fg:w="7"/><text x="61.1064%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="60.8728%" y="1045" width="0.0131%" height="15" fill="rgb(241,30,40)" fg:x="37231" fg:w="8"/><text x="61.1228%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="60.9006%" y="1029" width="0.0147%" height="15" fill="rgb(235,215,44)" fg:x="37248" fg:w="9"/><text x="61.1506%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="60.9038%" y="1013" width="0.0114%" height="15" fill="rgb(205,8,29)" fg:x="37250" fg:w="7"/><text x="61.1538%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.03%)</title><rect x="60.8875%" y="1045" width="0.0311%" height="15" fill="rgb(241,137,42)" fg:x="37240" fg:w="19"/><text x="61.1375%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (41 samples, 0.07%)</title><rect x="60.8548%" y="1077" width="0.0670%" height="15" fill="rgb(237,155,2)" fg:x="37220" fg:w="41"/><text x="61.1048%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (31 samples, 0.05%)</title><rect x="60.8711%" y="1061" width="0.0507%" height="15" fill="rgb(245,29,42)" fg:x="37230" fg:w="31"/><text x="61.1211%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (439 samples, 0.72%)</title><rect x="60.2073%" y="1205" width="0.7178%" height="15" fill="rgb(234,101,35)" fg:x="36824" fg:w="439"/><text x="60.4573%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (404 samples, 0.66%)</title><rect x="60.2645%" y="1189" width="0.6605%" height="15" fill="rgb(228,64,37)" fg:x="36859" fg:w="404"/><text x="60.5145%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (324 samples, 0.53%)</title><rect x="60.3953%" y="1173" width="0.5297%" height="15" fill="rgb(217,214,36)" fg:x="36939" fg:w="324"/><text x="60.6453%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (243 samples, 0.40%)</title><rect x="60.5278%" y="1157" width="0.3973%" height="15" fill="rgb(243,70,3)" fg:x="37020" fg:w="243"/><text x="60.7778%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (122 samples, 0.20%)</title><rect x="60.7256%" y="1141" width="0.1995%" height="15" fill="rgb(253,158,52)" fg:x="37141" fg:w="122"/><text x="60.9756%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (113 samples, 0.18%)</title><rect x="60.7403%" y="1125" width="0.1848%" height="15" fill="rgb(234,111,54)" fg:x="37150" fg:w="113"/><text x="60.9903%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (102 samples, 0.17%)</title><rect x="60.7583%" y="1109" width="0.1668%" height="15" fill="rgb(217,70,32)" fg:x="37161" fg:w="102"/><text x="61.0083%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (72 samples, 0.12%)</title><rect x="60.8074%" y="1093" width="0.1177%" height="15" fill="rgb(234,18,33)" fg:x="37191" fg:w="72"/><text x="61.0574%" y="1103.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::convert::From&lt;&amp;kube_core::dynamic::DynamicObject&gt;&gt;::from (14 samples, 0.02%)</title><rect x="60.9284%" y="1189" width="0.0229%" height="15" fill="rgb(234,12,49)" fg:x="37265" fg:w="14"/><text x="61.1784%" y="1199.50"></text></g><g><title>sk-gen`sk_core::k8s::gvk::GVK::from_dynamic_obj (13 samples, 0.02%)</title><rect x="60.9300%" y="1173" width="0.0213%" height="15" fill="rgb(236,10,21)" fg:x="37266" fg:w="13"/><text x="61.1800%" y="1183.50"></text></g><g><title>sk-gen`&lt;kube_core::gvk::GroupVersionKind as core::convert::TryFrom&lt;&amp;kube_core::metadata::TypeMeta&gt;&gt;::try_from (11 samples, 0.02%)</title><rect x="60.9333%" y="1157" width="0.0180%" height="15" fill="rgb(248,182,45)" fg:x="37268" fg:w="11"/><text x="61.1833%" y="1167.50"></text></g><g><title>sk-gen`&lt;kube_core::gvk::GroupVersion as core::str::traits::FromStr&gt;::from_str (7 samples, 0.01%)</title><rect x="60.9398%" y="1141" width="0.0114%" height="15" fill="rgb(217,95,36)" fg:x="37272" fg:w="7"/><text x="61.1898%" y="1151.50"></text></g><g><title>sk-gen`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (26 samples, 0.04%)</title><rect x="60.9267%" y="1205" width="0.0425%" height="15" fill="rgb(212,110,31)" fg:x="37264" fg:w="26"/><text x="61.1767%" y="1215.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.01%)</title><rect x="60.9888%" y="1205" width="0.0147%" height="15" fill="rgb(206,32,53)" fg:x="37302" fg:w="9"/><text x="61.2388%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (14 samples, 0.02%)</title><rect x="61.0117%" y="1205" width="0.0229%" height="15" fill="rgb(246,141,37)" fg:x="37316" fg:w="14"/><text x="61.2617%" y="1215.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="61.0183%" y="1189" width="0.0164%" height="15" fill="rgb(219,16,7)" fg:x="37320" fg:w="10"/><text x="61.2683%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="61.0428%" y="1189" width="0.0180%" height="15" fill="rgb(230,205,45)" fg:x="37335" fg:w="11"/><text x="61.2928%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="61.1000%" y="1141" width="0.0213%" height="15" fill="rgb(231,43,49)" fg:x="37370" fg:w="13"/><text x="61.3500%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="61.1033%" y="1125" width="0.0180%" height="15" fill="rgb(212,106,34)" fg:x="37372" fg:w="11"/><text x="61.3533%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (19 samples, 0.03%)</title><rect x="61.0951%" y="1173" width="0.0311%" height="15" fill="rgb(206,83,17)" fg:x="37367" fg:w="19"/><text x="61.3451%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (16 samples, 0.03%)</title><rect x="61.1000%" y="1157" width="0.0262%" height="15" fill="rgb(244,154,49)" fg:x="37370" fg:w="16"/><text x="61.3500%" y="1167.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (35 samples, 0.06%)</title><rect x="61.0722%" y="1189" width="0.0572%" height="15" fill="rgb(244,149,49)" fg:x="37353" fg:w="35"/><text x="61.3222%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="61.1540%" y="1173" width="0.0114%" height="15" fill="rgb(227,134,18)" fg:x="37403" fg:w="7"/><text x="61.4040%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.02%)</title><rect x="61.1900%" y="1141" width="0.0180%" height="15" fill="rgb(237,116,36)" fg:x="37425" fg:w="11"/><text x="61.4400%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.02%)</title><rect x="61.2308%" y="1109" width="0.0213%" height="15" fill="rgb(205,129,40)" fg:x="37450" fg:w="13"/><text x="61.4808%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (12 samples, 0.02%)</title><rect x="61.2325%" y="1093" width="0.0196%" height="15" fill="rgb(236,178,4)" fg:x="37451" fg:w="12"/><text x="61.4825%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="61.2341%" y="1077" width="0.0180%" height="15" fill="rgb(251,76,53)" fg:x="37452" fg:w="11"/><text x="61.4841%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="61.2374%" y="1061" width="0.0147%" height="15" fill="rgb(242,92,40)" fg:x="37454" fg:w="9"/><text x="61.4874%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.01%)</title><rect x="61.2406%" y="1045" width="0.0114%" height="15" fill="rgb(209,45,30)" fg:x="37456" fg:w="7"/><text x="61.4906%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="61.2995%" y="1077" width="0.0164%" height="15" fill="rgb(218,157,36)" fg:x="37492" fg:w="10"/><text x="61.5495%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (27 samples, 0.04%)</title><rect x="61.3469%" y="1061" width="0.0441%" height="15" fill="rgb(222,186,16)" fg:x="37521" fg:w="27"/><text x="61.5969%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.03%)</title><rect x="61.3567%" y="1045" width="0.0343%" height="15" fill="rgb(254,72,35)" fg:x="37527" fg:w="21"/><text x="61.6067%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.03%)</title><rect x="61.3616%" y="1029" width="0.0294%" height="15" fill="rgb(224,25,35)" fg:x="37530" fg:w="18"/><text x="61.6116%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="61.3698%" y="1013" width="0.0213%" height="15" fill="rgb(206,135,52)" fg:x="37535" fg:w="13"/><text x="61.6198%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (38 samples, 0.06%)</title><rect x="61.3306%" y="1077" width="0.0621%" height="15" fill="rgb(229,174,47)" fg:x="37511" fg:w="38"/><text x="61.5806%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="61.4090%" y="1061" width="0.0114%" height="15" fill="rgb(242,184,21)" fg:x="37559" fg:w="7"/><text x="61.6590%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.01%)</title><rect x="61.4385%" y="1045" width="0.0147%" height="15" fill="rgb(213,22,45)" fg:x="37577" fg:w="9"/><text x="61.6885%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (16 samples, 0.03%)</title><rect x="61.4287%" y="1061" width="0.0262%" height="15" fill="rgb(237,81,54)" fg:x="37571" fg:w="16"/><text x="61.6787%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="61.4793%" y="1029" width="0.0131%" height="15" fill="rgb(248,177,18)" fg:x="37602" fg:w="8"/><text x="61.7293%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.02%)</title><rect x="61.4924%" y="1029" width="0.0164%" height="15" fill="rgb(254,31,16)" fg:x="37610" fg:w="10"/><text x="61.7424%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="61.5497%" y="997" width="0.0114%" height="15" fill="rgb(235,20,31)" fg:x="37645" fg:w="7"/><text x="61.7997%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="61.5497%" y="981" width="0.0114%" height="15" fill="rgb(240,56,43)" fg:x="37645" fg:w="7"/><text x="61.7997%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (15 samples, 0.02%)</title><rect x="61.5398%" y="1013" width="0.0245%" height="15" fill="rgb(237,197,51)" fg:x="37639" fg:w="15"/><text x="61.7898%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (33 samples, 0.05%)</title><rect x="61.5219%" y="1029" width="0.0540%" height="15" fill="rgb(241,162,44)" fg:x="37628" fg:w="33"/><text x="61.7719%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (7 samples, 0.01%)</title><rect x="61.5644%" y="1013" width="0.0114%" height="15" fill="rgb(224,23,20)" fg:x="37654" fg:w="7"/><text x="61.8144%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (10 samples, 0.02%)</title><rect x="61.6265%" y="997" width="0.0164%" height="15" fill="rgb(250,109,34)" fg:x="37692" fg:w="10"/><text x="61.8765%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (9 samples, 0.01%)</title><rect x="61.6281%" y="981" width="0.0147%" height="15" fill="rgb(214,175,50)" fg:x="37693" fg:w="9"/><text x="61.8781%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (28 samples, 0.05%)</title><rect x="61.6151%" y="1013" width="0.0458%" height="15" fill="rgb(213,182,5)" fg:x="37685" fg:w="28"/><text x="61.8651%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.02%)</title><rect x="61.6429%" y="997" width="0.0180%" height="15" fill="rgb(209,199,19)" fg:x="37702" fg:w="11"/><text x="61.8929%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (8 samples, 0.01%)</title><rect x="61.6478%" y="981" width="0.0131%" height="15" fill="rgb(236,224,42)" fg:x="37705" fg:w="8"/><text x="61.8978%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="61.7164%" y="949" width="0.0213%" height="15" fill="rgb(246,226,29)" fg:x="37747" fg:w="13"/><text x="61.9664%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="61.7197%" y="933" width="0.0180%" height="15" fill="rgb(227,223,11)" fg:x="37749" fg:w="11"/><text x="61.9697%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (15 samples, 0.02%)</title><rect x="61.7148%" y="965" width="0.0245%" height="15" fill="rgb(219,7,51)" fg:x="37746" fg:w="15"/><text x="61.9648%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (21 samples, 0.03%)</title><rect x="61.7083%" y="981" width="0.0343%" height="15" fill="rgb(245,167,10)" fg:x="37742" fg:w="21"/><text x="61.9583%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (41 samples, 0.07%)</title><rect x="61.6870%" y="997" width="0.0670%" height="15" fill="rgb(237,224,16)" fg:x="37729" fg:w="41"/><text x="61.9370%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (172 samples, 0.28%)</title><rect x="61.4744%" y="1045" width="0.2812%" height="15" fill="rgb(226,132,13)" fg:x="37599" fg:w="172"/><text x="61.7244%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (107 samples, 0.17%)</title><rect x="61.5807%" y="1029" width="0.1749%" height="15" fill="rgb(214,140,3)" fg:x="37664" fg:w="107"/><text x="61.8307%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (58 samples, 0.09%)</title><rect x="61.6608%" y="1013" width="0.0948%" height="15" fill="rgb(221,177,4)" fg:x="37713" fg:w="58"/><text x="61.9108%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (286 samples, 0.47%)</title><rect x="61.2897%" y="1093" width="0.4676%" height="15" fill="rgb(238,139,3)" fg:x="37486" fg:w="286"/><text x="61.5397%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (222 samples, 0.36%)</title><rect x="61.3943%" y="1077" width="0.3630%" height="15" fill="rgb(216,17,39)" fg:x="37550" fg:w="222"/><text x="61.6443%" y="1087.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (185 samples, 0.30%)</title><rect x="61.4548%" y="1061" width="0.3025%" height="15" fill="rgb(238,120,9)" fg:x="37587" fg:w="185"/><text x="61.7048%" y="1071.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (330 samples, 0.54%)</title><rect x="61.2194%" y="1125" width="0.5396%" height="15" fill="rgb(244,92,53)" fg:x="37443" fg:w="330"/><text x="61.4694%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (308 samples, 0.50%)</title><rect x="61.2554%" y="1109" width="0.5036%" height="15" fill="rgb(224,148,33)" fg:x="37465" fg:w="308"/><text x="61.5054%" y="1119.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (382 samples, 0.62%)</title><rect x="61.1360%" y="1189" width="0.6246%" height="15" fill="rgb(243,6,36)" fg:x="37392" fg:w="382"/><text x="61.3860%" y="1199.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (363 samples, 0.59%)</title><rect x="61.1671%" y="1173" width="0.5935%" height="15" fill="rgb(230,102,11)" fg:x="37411" fg:w="363"/><text x="61.4171%" y="1183.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (355 samples, 0.58%)</title><rect x="61.1801%" y="1157" width="0.5804%" height="15" fill="rgb(234,148,36)" fg:x="37419" fg:w="355"/><text x="61.4301%" y="1167.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (338 samples, 0.55%)</title><rect x="61.2079%" y="1141" width="0.5526%" height="15" fill="rgb(251,153,25)" fg:x="37436" fg:w="338"/><text x="61.4579%" y="1151.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (443 samples, 0.72%)</title><rect x="61.0379%" y="1205" width="0.7243%" height="15" fill="rgb(215,129,8)" fg:x="37332" fg:w="443"/><text x="61.2879%" y="1215.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.02%)</title><rect x="61.8423%" y="1029" width="0.0164%" height="15" fill="rgb(224,128,35)" fg:x="37824" fg:w="10"/><text x="62.0923%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.01%)</title><rect x="61.8440%" y="1013" width="0.0147%" height="15" fill="rgb(237,56,52)" fg:x="37825" fg:w="9"/><text x="62.0940%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (14 samples, 0.02%)</title><rect x="61.8374%" y="1045" width="0.0229%" height="15" fill="rgb(234,213,19)" fg:x="37821" fg:w="14"/><text x="62.0874%" y="1055.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (27 samples, 0.04%)</title><rect x="61.8260%" y="1077" width="0.0441%" height="15" fill="rgb(252,82,23)" fg:x="37814" fg:w="27"/><text x="62.0760%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (27 samples, 0.04%)</title><rect x="61.8260%" y="1061" width="0.0441%" height="15" fill="rgb(254,201,21)" fg:x="37814" fg:w="27"/><text x="62.0760%" y="1071.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (11 samples, 0.02%)</title><rect x="61.9322%" y="917" width="0.0180%" height="15" fill="rgb(250,186,11)" fg:x="37879" fg:w="11"/><text x="62.1822%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (7 samples, 0.01%)</title><rect x="61.9584%" y="901" width="0.0114%" height="15" fill="rgb(211,174,5)" fg:x="37895" fg:w="7"/><text x="62.2084%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (12 samples, 0.02%)</title><rect x="61.9519%" y="917" width="0.0196%" height="15" fill="rgb(214,121,10)" fg:x="37891" fg:w="12"/><text x="62.2019%" y="927.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (34 samples, 0.06%)</title><rect x="61.9175%" y="949" width="0.0556%" height="15" fill="rgb(241,66,2)" fg:x="37870" fg:w="34"/><text x="62.1675%" y="959.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (34 samples, 0.06%)</title><rect x="61.9175%" y="933" width="0.0556%" height="15" fill="rgb(220,167,19)" fg:x="37870" fg:w="34"/><text x="62.1675%" y="943.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.02%)</title><rect x="61.9748%" y="917" width="0.0164%" height="15" fill="rgb(231,54,50)" fg:x="37905" fg:w="10"/><text x="62.2248%" y="927.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.02%)</title><rect x="61.9731%" y="949" width="0.0196%" height="15" fill="rgb(239,217,53)" fg:x="37904" fg:w="12"/><text x="62.2231%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.02%)</title><rect x="61.9731%" y="933" width="0.0196%" height="15" fill="rgb(248,8,0)" fg:x="37904" fg:w="12"/><text x="62.2231%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (50 samples, 0.08%)</title><rect x="61.9159%" y="965" width="0.0818%" height="15" fill="rgb(229,118,37)" fg:x="37869" fg:w="50"/><text x="62.1659%" y="975.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (65 samples, 0.11%)</title><rect x="61.8979%" y="981" width="0.1063%" height="15" fill="rgb(253,223,43)" fg:x="37858" fg:w="65"/><text x="62.1479%" y="991.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (84 samples, 0.14%)</title><rect x="61.8816%" y="997" width="0.1373%" height="15" fill="rgb(211,77,36)" fg:x="37848" fg:w="84"/><text x="62.1316%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (87 samples, 0.14%)</title><rect x="61.8816%" y="1013" width="0.1422%" height="15" fill="rgb(219,3,53)" fg:x="37848" fg:w="87"/><text x="62.1316%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (90 samples, 0.15%)</title><rect x="61.8816%" y="1029" width="0.1472%" height="15" fill="rgb(244,45,42)" fg:x="37848" fg:w="90"/><text x="62.1316%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="62.0369%" y="1013" width="0.0131%" height="15" fill="rgb(225,95,27)" fg:x="37943" fg:w="8"/><text x="62.2869%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.02%)</title><rect x="62.0516%" y="949" width="0.0164%" height="15" fill="rgb(207,74,8)" fg:x="37952" fg:w="10"/><text x="62.3016%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.02%)</title><rect x="62.0516%" y="965" width="0.0180%" height="15" fill="rgb(243,63,36)" fg:x="37952" fg:w="11"/><text x="62.3016%" y="975.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 0.03%)</title><rect x="62.0516%" y="997" width="0.0278%" height="15" fill="rgb(211,180,12)" fg:x="37952" fg:w="17"/><text x="62.3016%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 0.03%)</title><rect x="62.0516%" y="981" width="0.0278%" height="15" fill="rgb(254,166,49)" fg:x="37952" fg:w="17"/><text x="62.3016%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 0.03%)</title><rect x="62.0500%" y="1013" width="0.0327%" height="15" fill="rgb(205,19,0)" fg:x="37951" fg:w="20"/><text x="62.3000%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (34 samples, 0.06%)</title><rect x="62.0320%" y="1029" width="0.0556%" height="15" fill="rgb(224,172,32)" fg:x="37940" fg:w="34"/><text x="62.2820%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (138 samples, 0.23%)</title><rect x="61.8734%" y="1061" width="0.2256%" height="15" fill="rgb(254,136,30)" fg:x="37843" fg:w="138"/><text x="62.1234%" y="1071.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (136 samples, 0.22%)</title><rect x="61.8767%" y="1045" width="0.2224%" height="15" fill="rgb(246,19,35)" fg:x="37845" fg:w="136"/><text x="62.1267%" y="1055.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (141 samples, 0.23%)</title><rect x="61.8718%" y="1077" width="0.2305%" height="15" fill="rgb(219,24,36)" fg:x="37842" fg:w="141"/><text x="62.1218%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (181 samples, 0.30%)</title><rect x="61.8243%" y="1093" width="0.2959%" height="15" fill="rgb(251,55,1)" fg:x="37813" fg:w="181"/><text x="62.0743%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.01%)</title><rect x="62.1056%" y="1077" width="0.0147%" height="15" fill="rgb(218,117,39)" fg:x="37985" fg:w="9"/><text x="62.3556%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (7 samples, 0.01%)</title><rect x="62.1088%" y="1061" width="0.0114%" height="15" fill="rgb(248,169,11)" fg:x="37987" fg:w="7"/><text x="62.3588%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="62.1088%" y="1045" width="0.0114%" height="15" fill="rgb(244,40,44)" fg:x="37987" fg:w="7"/><text x="62.3588%" y="1055.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (183 samples, 0.30%)</title><rect x="61.8227%" y="1109" width="0.2992%" height="15" fill="rgb(234,62,37)" fg:x="37812" fg:w="183"/><text x="62.0727%" y="1119.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (187 samples, 0.31%)</title><rect x="61.8178%" y="1125" width="0.3057%" height="15" fill="rgb(207,117,42)" fg:x="37809" fg:w="187"/><text x="62.0678%" y="1135.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="62.1252%" y="1125" width="0.0131%" height="15" fill="rgb(213,43,2)" fg:x="37997" fg:w="8"/><text x="62.3752%" y="1135.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (205 samples, 0.34%)</title><rect x="61.8047%" y="1157" width="0.3352%" height="15" fill="rgb(244,202,51)" fg:x="37801" fg:w="205"/><text x="62.0547%" y="1167.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (203 samples, 0.33%)</title><rect x="61.8080%" y="1141" width="0.3319%" height="15" fill="rgb(253,174,46)" fg:x="37803" fg:w="203"/><text x="62.0580%" y="1151.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (214 samples, 0.35%)</title><rect x="61.8014%" y="1173" width="0.3499%" height="15" fill="rgb(251,23,1)" fg:x="37799" fg:w="214"/><text x="62.0514%" y="1183.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (12 samples, 0.02%)</title><rect x="62.1513%" y="1173" width="0.0196%" height="15" fill="rgb(253,26,1)" fg:x="38013" fg:w="12"/><text x="62.4013%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.01%)</title><rect x="62.2004%" y="1077" width="0.0114%" height="15" fill="rgb(216,89,31)" fg:x="38043" fg:w="7"/><text x="62.4504%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (7 samples, 0.01%)</title><rect x="62.2004%" y="1061" width="0.0114%" height="15" fill="rgb(209,109,5)" fg:x="38043" fg:w="7"/><text x="62.4504%" y="1071.50"></text></g><g><title>sk-gen`&lt;&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta as serde::de::Deserialize&gt;::deserialize::Visitor as serde::de::Visitor&gt;::visit_map (25 samples, 0.04%)</title><rect x="62.1808%" y="1141" width="0.0409%" height="15" fill="rgb(229,63,13)" fg:x="38031" fg:w="25"/><text x="62.4308%" y="1151.50"></text></g><g><title>sk-gen`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (18 samples, 0.03%)</title><rect x="62.1922%" y="1125" width="0.0294%" height="15" fill="rgb(238,137,54)" fg:x="38038" fg:w="18"/><text x="62.4422%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (18 samples, 0.03%)</title><rect x="62.1922%" y="1109" width="0.0294%" height="15" fill="rgb(228,1,9)" fg:x="38038" fg:w="18"/><text x="62.4422%" y="1119.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (16 samples, 0.03%)</title><rect x="62.1955%" y="1093" width="0.0262%" height="15" fill="rgb(249,120,48)" fg:x="38040" fg:w="16"/><text x="62.4455%" y="1103.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (32 samples, 0.05%)</title><rect x="62.1710%" y="1173" width="0.0523%" height="15" fill="rgb(209,72,36)" fg:x="38025" fg:w="32"/><text x="62.4210%" y="1183.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (29 samples, 0.05%)</title><rect x="62.1759%" y="1157" width="0.0474%" height="15" fill="rgb(247,98,49)" fg:x="38028" fg:w="29"/><text x="62.4259%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.02%)</title><rect x="62.2772%" y="1125" width="0.0196%" height="15" fill="rgb(233,75,36)" fg:x="38090" fg:w="12"/><text x="62.5272%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.02%)</title><rect x="62.3296%" y="1093" width="0.0180%" height="15" fill="rgb(225,14,24)" fg:x="38122" fg:w="11"/><text x="62.5796%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.01%)</title><rect x="62.3819%" y="1061" width="0.0131%" height="15" fill="rgb(237,193,20)" fg:x="38154" fg:w="8"/><text x="62.6319%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (101 samples, 0.17%)</title><rect x="62.2331%" y="1173" width="0.1651%" height="15" fill="rgb(239,122,19)" fg:x="38063" fg:w="101"/><text x="62.4831%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (96 samples, 0.16%)</title><rect x="62.2413%" y="1157" width="0.1570%" height="15" fill="rgb(231,220,10)" fg:x="38068" fg:w="96"/><text x="62.4913%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (76 samples, 0.12%)</title><rect x="62.2740%" y="1141" width="0.1243%" height="15" fill="rgb(220,66,15)" fg:x="38088" fg:w="76"/><text x="62.5240%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (60 samples, 0.10%)</title><rect x="62.3001%" y="1125" width="0.0981%" height="15" fill="rgb(215,171,52)" fg:x="38104" fg:w="60"/><text x="62.5501%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (45 samples, 0.07%)</title><rect x="62.3246%" y="1109" width="0.0736%" height="15" fill="rgb(241,169,50)" fg:x="38119" fg:w="45"/><text x="62.5746%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (28 samples, 0.05%)</title><rect x="62.3524%" y="1093" width="0.0458%" height="15" fill="rgb(236,189,0)" fg:x="38136" fg:w="28"/><text x="62.6024%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (13 samples, 0.02%)</title><rect x="62.3770%" y="1077" width="0.0213%" height="15" fill="rgb(217,147,20)" fg:x="38151" fg:w="13"/><text x="62.6270%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.01%)</title><rect x="62.4080%" y="1141" width="0.0114%" height="15" fill="rgb(206,188,39)" fg:x="38170" fg:w="7"/><text x="62.6580%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="62.4391%" y="1109" width="0.0164%" height="15" fill="rgb(227,118,25)" fg:x="38189" fg:w="10"/><text x="62.6891%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="62.4391%" y="1093" width="0.0164%" height="15" fill="rgb(248,171,40)" fg:x="38189" fg:w="10"/><text x="62.6891%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="62.4800%" y="1061" width="0.0164%" height="15" fill="rgb(251,90,54)" fg:x="38214" fg:w="10"/><text x="62.7300%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (21 samples, 0.03%)</title><rect x="62.4734%" y="1077" width="0.0343%" height="15" fill="rgb(234,11,46)" fg:x="38210" fg:w="21"/><text x="62.7234%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="62.5421%" y="1013" width="0.0131%" height="15" fill="rgb(229,134,13)" fg:x="38252" fg:w="8"/><text x="62.7921%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="62.5944%" y="949" width="0.0131%" height="15" fill="rgb(223,129,3)" fg:x="38284" fg:w="8"/><text x="62.8444%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 0.04%)</title><rect x="62.5748%" y="965" width="0.0376%" height="15" fill="rgb(221,124,13)" fg:x="38272" fg:w="23"/><text x="62.8248%" y="975.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (36 samples, 0.06%)</title><rect x="62.5552%" y="1013" width="0.0589%" height="15" fill="rgb(234,3,18)" fg:x="38260" fg:w="36"/><text x="62.8052%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (25 samples, 0.04%)</title><rect x="62.5732%" y="997" width="0.0409%" height="15" fill="rgb(249,199,20)" fg:x="38271" fg:w="25"/><text x="62.8232%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (24 samples, 0.04%)</title><rect x="62.5748%" y="981" width="0.0392%" height="15" fill="rgb(224,134,6)" fg:x="38272" fg:w="24"/><text x="62.8248%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (70 samples, 0.11%)</title><rect x="62.5225%" y="1029" width="0.1145%" height="15" fill="rgb(254,83,26)" fg:x="38240" fg:w="70"/><text x="62.7725%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (14 samples, 0.02%)</title><rect x="62.6140%" y="1013" width="0.0229%" height="15" fill="rgb(217,88,9)" fg:x="38296" fg:w="14"/><text x="62.8640%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.02%)</title><rect x="62.6157%" y="997" width="0.0213%" height="15" fill="rgb(225,73,2)" fg:x="38297" fg:w="13"/><text x="62.8657%" y="1007.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (81 samples, 0.13%)</title><rect x="62.5078%" y="1077" width="0.1324%" height="15" fill="rgb(226,44,39)" fg:x="38231" fg:w="81"/><text x="62.7578%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (74 samples, 0.12%)</title><rect x="62.5192%" y="1061" width="0.1210%" height="15" fill="rgb(228,53,17)" fg:x="38238" fg:w="74"/><text x="62.7692%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (72 samples, 0.12%)</title><rect x="62.5225%" y="1045" width="0.1177%" height="15" fill="rgb(212,27,27)" fg:x="38240" fg:w="72"/><text x="62.7725%" y="1055.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (121 samples, 0.20%)</title><rect x="62.4554%" y="1093" width="0.1978%" height="15" fill="rgb(241,50,6)" fg:x="38199" fg:w="121"/><text x="62.7054%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (8 samples, 0.01%)</title><rect x="62.6402%" y="1077" width="0.0131%" height="15" fill="rgb(225,28,51)" fg:x="38312" fg:w="8"/><text x="62.8902%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (142 samples, 0.23%)</title><rect x="62.4244%" y="1125" width="0.2322%" height="15" fill="rgb(215,33,16)" fg:x="38180" fg:w="142"/><text x="62.6744%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (123 samples, 0.20%)</title><rect x="62.4554%" y="1109" width="0.2011%" height="15" fill="rgb(243,40,39)" fg:x="38199" fg:w="123"/><text x="62.7054%" y="1119.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (159 samples, 0.26%)</title><rect x="62.3982%" y="1157" width="0.2600%" height="15" fill="rgb(225,11,42)" fg:x="38164" fg:w="159"/><text x="62.6482%" y="1167.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (145 samples, 0.24%)</title><rect x="62.4211%" y="1141" width="0.2371%" height="15" fill="rgb(241,220,38)" fg:x="38178" fg:w="145"/><text x="62.6711%" y="1151.50"></text></g><g><title>sk-gen`sk_gen::Simulation::expand_graph (30,851 samples, 50.44%)</title><rect x="12.2184%" y="1237" width="50.4415%" height="15" fill="rgb(244,52,35)" fg:x="7473" fg:w="30851"/><text x="12.4684%" y="1247.50">sk-gen`sk_gen::Simulation::expand_graph</text></g><g><title>sk-gen`sk_gen::Node::apply_patch (2,056 samples, 3.36%)</title><rect x="59.2983%" y="1221" width="3.3616%" height="15" fill="rgb(246,42,46)" fg:x="36268" fg:w="2056"/><text x="59.5483%" y="1231.50">sk-..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (549 samples, 0.90%)</title><rect x="61.7622%" y="1205" width="0.8976%" height="15" fill="rgb(205,184,13)" fg:x="37775" fg:w="549"/><text x="62.0122%" y="1215.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (544 samples, 0.89%)</title><rect x="61.7704%" y="1189" width="0.8894%" height="15" fill="rgb(209,48,36)" fg:x="37780" fg:w="544"/><text x="62.0204%" y="1199.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (160 samples, 0.26%)</title><rect x="62.3982%" y="1173" width="0.2616%" height="15" fill="rgb(244,34,51)" fg:x="38164" fg:w="160"/><text x="62.6482%" y="1183.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (33 samples, 0.05%)</title><rect x="62.7170%" y="1109" width="0.0540%" height="15" fill="rgb(221,107,33)" fg:x="38359" fg:w="33"/><text x="62.9670%" y="1119.50"></text></g><g><title>sk-gen`std::io::Write::write_all (33 samples, 0.05%)</title><rect x="62.7170%" y="1093" width="0.0540%" height="15" fill="rgb(224,203,12)" fg:x="38359" fg:w="33"/><text x="62.9670%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`write (33 samples, 0.05%)</title><rect x="62.7170%" y="1077" width="0.0540%" height="15" fill="rgb(230,215,18)" fg:x="38359" fg:w="33"/><text x="62.9670%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (105 samples, 0.17%)</title><rect x="62.7170%" y="1125" width="0.1717%" height="15" fill="rgb(206,185,35)" fg:x="38359" fg:w="105"/><text x="62.9670%" y="1135.50"></text></g><g><title>sk-gen`std::io::Write::write_all (72 samples, 0.12%)</title><rect x="62.7710%" y="1109" width="0.1177%" height="15" fill="rgb(228,140,34)" fg:x="38392" fg:w="72"/><text x="63.0210%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`write (72 samples, 0.12%)</title><rect x="62.7710%" y="1093" width="0.1177%" height="15" fill="rgb(208,93,13)" fg:x="38392" fg:w="72"/><text x="63.0210%" y="1103.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (40 samples, 0.07%)</title><rect x="62.8887%" y="1109" width="0.0654%" height="15" fill="rgb(221,193,39)" fg:x="38464" fg:w="40"/><text x="63.1387%" y="1119.50"></text></g><g><title>sk-gen`std::io::Write::write_all (39 samples, 0.06%)</title><rect x="62.8904%" y="1093" width="0.0638%" height="15" fill="rgb(241,132,34)" fg:x="38465" fg:w="39"/><text x="63.1404%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`write (39 samples, 0.06%)</title><rect x="62.8904%" y="1077" width="0.0638%" height="15" fill="rgb(221,141,10)" fg:x="38465" fg:w="39"/><text x="63.1404%" y="1087.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (17 samples, 0.03%)</title><rect x="62.9541%" y="1077" width="0.0278%" height="15" fill="rgb(226,90,31)" fg:x="38504" fg:w="17"/><text x="63.2041%" y="1087.50"></text></g><g><title>sk-gen`std::io::Write::write_all (17 samples, 0.03%)</title><rect x="62.9541%" y="1061" width="0.0278%" height="15" fill="rgb(243,75,5)" fg:x="38504" fg:w="17"/><text x="63.2041%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`write (17 samples, 0.03%)</title><rect x="62.9541%" y="1045" width="0.0278%" height="15" fill="rgb(227,156,21)" fg:x="38504" fg:w="17"/><text x="63.2041%" y="1055.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (20 samples, 0.03%)</title><rect x="62.9819%" y="1045" width="0.0327%" height="15" fill="rgb(250,195,8)" fg:x="38521" fg:w="20"/><text x="63.2319%" y="1055.50"></text></g><g><title>sk-gen`std::io::Write::write_all (20 samples, 0.03%)</title><rect x="62.9819%" y="1029" width="0.0327%" height="15" fill="rgb(220,134,5)" fg:x="38521" fg:w="20"/><text x="63.2319%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`write (20 samples, 0.03%)</title><rect x="62.9819%" y="1013" width="0.0327%" height="15" fill="rgb(246,106,34)" fg:x="38521" fg:w="20"/><text x="63.2319%" y="1023.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (40 samples, 0.07%)</title><rect x="63.0146%" y="1013" width="0.0654%" height="15" fill="rgb(205,1,4)" fg:x="38541" fg:w="40"/><text x="63.2646%" y="1023.50"></text></g><g><title>sk-gen`std::io::Write::write_all (40 samples, 0.07%)</title><rect x="63.0146%" y="997" width="0.0654%" height="15" fill="rgb(224,151,29)" fg:x="38541" fg:w="40"/><text x="63.2646%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`write (40 samples, 0.07%)</title><rect x="63.0146%" y="981" width="0.0654%" height="15" fill="rgb(251,196,0)" fg:x="38541" fg:w="40"/><text x="63.2646%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.01%)</title><rect x="63.0882%" y="981" width="0.0131%" height="15" fill="rgb(212,127,0)" fg:x="38586" fg:w="8"/><text x="63.3382%" y="991.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (8 samples, 0.01%)</title><rect x="63.0882%" y="965" width="0.0131%" height="15" fill="rgb(236,71,53)" fg:x="38586" fg:w="8"/><text x="63.3382%" y="975.50"></text></g><g><title>sk-gen`std::io::Write::write_all (8 samples, 0.01%)</title><rect x="63.0882%" y="949" width="0.0131%" height="15" fill="rgb(227,99,0)" fg:x="38586" fg:w="8"/><text x="63.3382%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`write (8 samples, 0.01%)</title><rect x="63.0882%" y="933" width="0.0131%" height="15" fill="rgb(239,89,21)" fg:x="38586" fg:w="8"/><text x="63.3382%" y="943.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (31 samples, 0.05%)</title><rect x="63.0800%" y="997" width="0.0507%" height="15" fill="rgb(243,122,19)" fg:x="38581" fg:w="31"/><text x="63.3300%" y="1007.50"></text></g><g><title>sk-gen`std::io::Write::write_all (18 samples, 0.03%)</title><rect x="63.1013%" y="981" width="0.0294%" height="15" fill="rgb(229,192,45)" fg:x="38594" fg:w="18"/><text x="63.3513%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`write (18 samples, 0.03%)</title><rect x="63.1013%" y="965" width="0.0294%" height="15" fill="rgb(235,165,35)" fg:x="38594" fg:w="18"/><text x="63.3513%" y="975.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (30 samples, 0.05%)</title><rect x="63.1307%" y="997" width="0.0491%" height="15" fill="rgb(253,202,0)" fg:x="38612" fg:w="30"/><text x="63.3807%" y="1007.50"></text></g><g><title>sk-gen`std::io::Write::write_all (30 samples, 0.05%)</title><rect x="63.1307%" y="981" width="0.0491%" height="15" fill="rgb(235,51,20)" fg:x="38612" fg:w="30"/><text x="63.3807%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`write (30 samples, 0.05%)</title><rect x="63.1307%" y="965" width="0.0491%" height="15" fill="rgb(218,95,46)" fg:x="38612" fg:w="30"/><text x="63.3807%" y="975.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (42 samples, 0.07%)</title><rect x="63.1798%" y="965" width="0.0687%" height="15" fill="rgb(212,81,10)" fg:x="38642" fg:w="42"/><text x="63.4298%" y="975.50"></text></g><g><title>sk-gen`std::io::Write::write_all (42 samples, 0.07%)</title><rect x="63.1798%" y="949" width="0.0687%" height="15" fill="rgb(240,59,0)" fg:x="38642" fg:w="42"/><text x="63.4298%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`write (42 samples, 0.07%)</title><rect x="63.1798%" y="933" width="0.0687%" height="15" fill="rgb(212,191,42)" fg:x="38642" fg:w="42"/><text x="63.4298%" y="943.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (12 samples, 0.02%)</title><rect x="63.2484%" y="933" width="0.0196%" height="15" fill="rgb(233,140,3)" fg:x="38684" fg:w="12"/><text x="63.4984%" y="943.50"></text></g><g><title>sk-gen`std::io::Write::write_all (12 samples, 0.02%)</title><rect x="63.2484%" y="917" width="0.0196%" height="15" fill="rgb(215,69,23)" fg:x="38684" fg:w="12"/><text x="63.4984%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`write (12 samples, 0.02%)</title><rect x="63.2484%" y="901" width="0.0196%" height="15" fill="rgb(240,202,20)" fg:x="38684" fg:w="12"/><text x="63.4984%" y="911.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (39 samples, 0.06%)</title><rect x="63.2680%" y="917" width="0.0638%" height="15" fill="rgb(209,146,50)" fg:x="38696" fg:w="39"/><text x="63.5180%" y="927.50"></text></g><g><title>sk-gen`std::io::Write::write_all (33 samples, 0.05%)</title><rect x="63.2779%" y="901" width="0.0540%" height="15" fill="rgb(253,102,54)" fg:x="38702" fg:w="33"/><text x="63.5279%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`write (33 samples, 0.05%)</title><rect x="63.2779%" y="885" width="0.0540%" height="15" fill="rgb(250,173,47)" fg:x="38702" fg:w="33"/><text x="63.5279%" y="895.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (54 samples, 0.09%)</title><rect x="63.2680%" y="933" width="0.0883%" height="15" fill="rgb(232,142,7)" fg:x="38696" fg:w="54"/><text x="63.5180%" y="943.50"></text></g><g><title>sk-gen`std::io::Write::write_all (14 samples, 0.02%)</title><rect x="63.3334%" y="917" width="0.0229%" height="15" fill="rgb(230,157,47)" fg:x="38736" fg:w="14"/><text x="63.5834%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`write (14 samples, 0.02%)</title><rect x="63.3334%" y="901" width="0.0229%" height="15" fill="rgb(214,177,35)" fg:x="38736" fg:w="14"/><text x="63.5834%" y="911.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (100 samples, 0.16%)</title><rect x="63.2484%" y="949" width="0.1635%" height="15" fill="rgb(234,119,46)" fg:x="38684" fg:w="100"/><text x="63.4984%" y="959.50"></text></g><g><title>sk-gen`std::io::Write::write_all (34 samples, 0.06%)</title><rect x="63.3563%" y="933" width="0.0556%" height="15" fill="rgb(241,180,50)" fg:x="38750" fg:w="34"/><text x="63.6063%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`write (34 samples, 0.06%)</title><rect x="63.3563%" y="917" width="0.0556%" height="15" fill="rgb(221,54,25)" fg:x="38750" fg:w="34"/><text x="63.6063%" y="927.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (17 samples, 0.03%)</title><rect x="63.4119%" y="949" width="0.0278%" height="15" fill="rgb(209,157,44)" fg:x="38784" fg:w="17"/><text x="63.6619%" y="959.50"></text></g><g><title>sk-gen`std::io::Write::write_all (17 samples, 0.03%)</title><rect x="63.4119%" y="933" width="0.0278%" height="15" fill="rgb(246,115,41)" fg:x="38784" fg:w="17"/><text x="63.6619%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`write (17 samples, 0.03%)</title><rect x="63.4119%" y="917" width="0.0278%" height="15" fill="rgb(229,86,1)" fg:x="38784" fg:w="17"/><text x="63.6619%" y="927.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (33 samples, 0.05%)</title><rect x="63.4414%" y="917" width="0.0540%" height="15" fill="rgb(240,108,53)" fg:x="38802" fg:w="33"/><text x="63.6914%" y="927.50"></text></g><g><title>sk-gen`std::io::Write::write_all (33 samples, 0.05%)</title><rect x="63.4414%" y="901" width="0.0540%" height="15" fill="rgb(227,134,2)" fg:x="38802" fg:w="33"/><text x="63.6914%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`write (33 samples, 0.05%)</title><rect x="63.4414%" y="885" width="0.0540%" height="15" fill="rgb(213,129,25)" fg:x="38802" fg:w="33"/><text x="63.6914%" y="895.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (21 samples, 0.03%)</title><rect x="63.4953%" y="901" width="0.0343%" height="15" fill="rgb(226,35,21)" fg:x="38835" fg:w="21"/><text x="63.7453%" y="911.50"></text></g><g><title>sk-gen`std::io::Write::write_all (21 samples, 0.03%)</title><rect x="63.4953%" y="885" width="0.0343%" height="15" fill="rgb(208,129,26)" fg:x="38835" fg:w="21"/><text x="63.7453%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`write (21 samples, 0.03%)</title><rect x="63.4953%" y="869" width="0.0343%" height="15" fill="rgb(224,83,6)" fg:x="38835" fg:w="21"/><text x="63.7453%" y="879.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 0.04%)</title><rect x="63.4953%" y="917" width="0.0360%" height="15" fill="rgb(227,52,39)" fg:x="38835" fg:w="22"/><text x="63.7453%" y="927.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (182 samples, 0.30%)</title><rect x="63.4397%" y="933" width="0.2976%" height="15" fill="rgb(241,30,17)" fg:x="38801" fg:w="182"/><text x="63.6897%" y="943.50"></text></g><g><title>sk-gen`std::io::Write::write_all (126 samples, 0.21%)</title><rect x="63.5313%" y="917" width="0.2060%" height="15" fill="rgb(246,186,42)" fg:x="38857" fg:w="126"/><text x="63.7813%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`write (126 samples, 0.21%)</title><rect x="63.5313%" y="901" width="0.2060%" height="15" fill="rgb(221,169,15)" fg:x="38857" fg:w="126"/><text x="63.7813%" y="911.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (227 samples, 0.37%)</title><rect x="63.4397%" y="949" width="0.3711%" height="15" fill="rgb(235,108,21)" fg:x="38801" fg:w="227"/><text x="63.6897%" y="959.50"></text></g><g><title>sk-gen`std::io::Write::write_all (41 samples, 0.07%)</title><rect x="63.7438%" y="933" width="0.0670%" height="15" fill="rgb(219,148,30)" fg:x="38987" fg:w="41"/><text x="63.9938%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`write (41 samples, 0.07%)</title><rect x="63.7438%" y="917" width="0.0670%" height="15" fill="rgb(220,109,5)" fg:x="38987" fg:w="41"/><text x="63.9938%" y="927.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (474 samples, 0.77%)</title><rect x="63.2484%" y="965" width="0.7750%" height="15" fill="rgb(213,203,48)" fg:x="38684" fg:w="474"/><text x="63.4984%" y="975.50"></text></g><g><title>sk-gen`std::io::Write::write_all (130 samples, 0.21%)</title><rect x="63.8109%" y="949" width="0.2126%" height="15" fill="rgb(244,71,33)" fg:x="39028" fg:w="130"/><text x="64.0609%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`write (129 samples, 0.21%)</title><rect x="63.8125%" y="933" width="0.2109%" height="15" fill="rgb(209,23,2)" fg:x="39029" fg:w="129"/><text x="64.0625%" y="943.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (672 samples, 1.10%)</title><rect x="63.1798%" y="981" width="1.0987%" height="15" fill="rgb(219,97,7)" fg:x="38642" fg:w="672"/><text x="63.4298%" y="991.50"></text></g><g><title>sk-gen`std::io::Write::write_all (156 samples, 0.26%)</title><rect x="64.0234%" y="965" width="0.2551%" height="15" fill="rgb(216,161,23)" fg:x="39158" fg:w="156"/><text x="64.2734%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`write (156 samples, 0.26%)</title><rect x="64.0234%" y="949" width="0.2551%" height="15" fill="rgb(207,45,42)" fg:x="39158" fg:w="156"/><text x="64.2734%" y="959.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (696 samples, 1.14%)</title><rect x="63.1798%" y="997" width="1.1380%" height="15" fill="rgb(241,61,4)" fg:x="38642" fg:w="696"/><text x="63.4298%" y="1007.50"></text></g><g><title>sk-gen`std::io::Write::write_all (24 samples, 0.04%)</title><rect x="64.2785%" y="981" width="0.0392%" height="15" fill="rgb(236,170,1)" fg:x="39314" fg:w="24"/><text x="64.5285%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`write (24 samples, 0.04%)</title><rect x="64.2785%" y="965" width="0.0392%" height="15" fill="rgb(239,72,5)" fg:x="39314" fg:w="24"/><text x="64.5285%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (813 samples, 1.33%)</title><rect x="63.0800%" y="1013" width="1.3293%" height="15" fill="rgb(214,13,50)" fg:x="38581" fg:w="813"/><text x="63.3300%" y="1023.50"></text></g><g><title>sk-gen`std::io::Write::write_all (56 samples, 0.09%)</title><rect x="64.3177%" y="997" width="0.0916%" height="15" fill="rgb(224,88,9)" fg:x="39338" fg:w="56"/><text x="64.5677%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`write (56 samples, 0.09%)</title><rect x="64.3177%" y="981" width="0.0916%" height="15" fill="rgb(238,192,34)" fg:x="39338" fg:w="56"/><text x="64.5677%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (988 samples, 1.62%)</title><rect x="63.0146%" y="1029" width="1.6154%" height="15" fill="rgb(217,203,50)" fg:x="38541" fg:w="988"/><text x="63.2646%" y="1039.50"></text></g><g><title>sk-gen`std::io::Write::write_all (135 samples, 0.22%)</title><rect x="64.4093%" y="1013" width="0.2207%" height="15" fill="rgb(241,123,32)" fg:x="39394" fg:w="135"/><text x="64.6593%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`write (135 samples, 0.22%)</title><rect x="64.4093%" y="997" width="0.2207%" height="15" fill="rgb(248,151,39)" fg:x="39394" fg:w="135"/><text x="64.6593%" y="1007.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (8 samples, 0.01%)</title><rect x="64.6300%" y="1029" width="0.0131%" height="15" fill="rgb(208,89,6)" fg:x="39529" fg:w="8"/><text x="64.8800%" y="1039.50"></text></g><g><title>sk-gen`std::io::Write::write_all (7 samples, 0.01%)</title><rect x="64.6316%" y="1013" width="0.0114%" height="15" fill="rgb(254,43,26)" fg:x="39530" fg:w="7"/><text x="64.8816%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`write (7 samples, 0.01%)</title><rect x="64.6316%" y="997" width="0.0114%" height="15" fill="rgb(216,158,13)" fg:x="39530" fg:w="7"/><text x="64.8816%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,046 samples, 1.71%)</title><rect x="63.0146%" y="1045" width="1.7102%" height="15" fill="rgb(212,47,37)" fg:x="38541" fg:w="1046"/><text x="63.2646%" y="1055.50"></text></g><g><title>sk-gen`std::io::Write::write_all (50 samples, 0.08%)</title><rect x="64.6431%" y="1029" width="0.0818%" height="15" fill="rgb(254,16,10)" fg:x="39537" fg:w="50"/><text x="64.8931%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`write (50 samples, 0.08%)</title><rect x="64.6431%" y="1013" width="0.0818%" height="15" fill="rgb(223,228,16)" fg:x="39537" fg:w="50"/><text x="64.8931%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,109 samples, 1.81%)</title><rect x="62.9819%" y="1061" width="1.8132%" height="15" fill="rgb(249,108,50)" fg:x="38521" fg:w="1109"/><text x="63.2319%" y="1071.50">s..</text></g><g><title>sk-gen`std::io::Write::write_all (43 samples, 0.07%)</title><rect x="64.7248%" y="1045" width="0.0703%" height="15" fill="rgb(208,220,5)" fg:x="39587" fg:w="43"/><text x="64.9748%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`write (43 samples, 0.07%)</title><rect x="64.7248%" y="1029" width="0.0703%" height="15" fill="rgb(217,89,48)" fg:x="39587" fg:w="43"/><text x="64.9748%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,137 samples, 1.86%)</title><rect x="62.9819%" y="1077" width="1.8590%" height="15" fill="rgb(212,113,41)" fg:x="38521" fg:w="1137"/><text x="63.2319%" y="1087.50">s..</text></g><g><title>sk-gen`std::io::Write::write_all (28 samples, 0.05%)</title><rect x="64.7951%" y="1061" width="0.0458%" height="15" fill="rgb(231,127,5)" fg:x="39630" fg:w="28"/><text x="65.0451%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`write (28 samples, 0.05%)</title><rect x="64.7951%" y="1045" width="0.0458%" height="15" fill="rgb(217,141,17)" fg:x="39630" fg:w="28"/><text x="65.0451%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,216 samples, 1.99%)</title><rect x="62.9541%" y="1093" width="1.9882%" height="15" fill="rgb(245,125,54)" fg:x="38504" fg:w="1216"/><text x="63.2041%" y="1103.50">s..</text></g><g><title>sk-gen`std::io::Write::write_all (62 samples, 0.10%)</title><rect x="64.8409%" y="1077" width="0.1014%" height="15" fill="rgb(248,125,3)" fg:x="39658" fg:w="62"/><text x="65.0909%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`write (62 samples, 0.10%)</title><rect x="64.8409%" y="1061" width="0.1014%" height="15" fill="rgb(236,119,51)" fg:x="39658" fg:w="62"/><text x="65.0909%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,223 samples, 2.00%)</title><rect x="62.9541%" y="1109" width="1.9996%" height="15" fill="rgb(239,99,8)" fg:x="38504" fg:w="1223"/><text x="63.2041%" y="1119.50">s..</text></g><g><title>sk-gen`std::io::Write::write_all (7 samples, 0.01%)</title><rect x="64.9423%" y="1093" width="0.0114%" height="15" fill="rgb(224,228,4)" fg:x="39720" fg:w="7"/><text x="65.1923%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`write (7 samples, 0.01%)</title><rect x="64.9423%" y="1077" width="0.0114%" height="15" fill="rgb(220,131,45)" fg:x="39720" fg:w="7"/><text x="65.1923%" y="1087.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,314 samples, 2.15%)</title><rect x="62.8887%" y="1125" width="2.1484%" height="15" fill="rgb(215,62,5)" fg:x="38464" fg:w="1314"/><text x="63.1387%" y="1135.50">s..</text></g><g><title>sk-gen`std::io::Write::write_all (51 samples, 0.08%)</title><rect x="64.9537%" y="1109" width="0.0834%" height="15" fill="rgb(253,12,24)" fg:x="39727" fg:w="51"/><text x="65.2037%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`write (51 samples, 0.08%)</title><rect x="64.9537%" y="1093" width="0.0834%" height="15" fill="rgb(248,120,50)" fg:x="39727" fg:w="51"/><text x="65.2037%" y="1103.50"></text></g><g><title>sk-gen`serde_json::ser::format_escaped_str (14 samples, 0.02%)</title><rect x="65.0371%" y="1125" width="0.0229%" height="15" fill="rgb(245,194,10)" fg:x="39778" fg:w="14"/><text x="65.2871%" y="1135.50"></text></g><g><title>sk-gen`std::io::Write::write_all (14 samples, 0.02%)</title><rect x="65.0371%" y="1109" width="0.0229%" height="15" fill="rgb(241,149,38)" fg:x="39778" fg:w="14"/><text x="65.2871%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`write (14 samples, 0.02%)</title><rect x="65.0371%" y="1093" width="0.0229%" height="15" fill="rgb(219,215,7)" fg:x="39778" fg:w="14"/><text x="65.2871%" y="1103.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,492 samples, 2.44%)</title><rect x="62.7170%" y="1141" width="2.4394%" height="15" fill="rgb(208,120,31)" fg:x="38359" fg:w="1492"/><text x="62.9670%" y="1151.50">sk..</text></g><g><title>sk-gen`std::io::Write::write_all (59 samples, 0.10%)</title><rect x="65.0600%" y="1125" width="0.0965%" height="15" fill="rgb(244,30,8)" fg:x="39792" fg:w="59"/><text x="65.3100%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`write (59 samples, 0.10%)</title><rect x="65.0600%" y="1109" width="0.0965%" height="15" fill="rgb(238,35,44)" fg:x="39792" fg:w="59"/><text x="65.3100%" y="1119.50"></text></g><g><title>sk-gen`sk_store::_::_&lt;impl serde::ser::Serialize for sk_store::TraceEvent&gt;::serialize (1,498 samples, 2.45%)</title><rect x="62.7170%" y="1157" width="2.4492%" height="15" fill="rgb(243,218,37)" fg:x="38359" fg:w="1498"/><text x="62.9670%" y="1167.50">sk..</text></g><g><title>sk-gen`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,499 samples, 2.45%)</title><rect x="62.7170%" y="1173" width="2.4509%" height="15" fill="rgb(218,169,10)" fg:x="38359" fg:w="1499"/><text x="62.9670%" y="1183.50">sk..</text></g><g><title>sk-gen`serde::ser::Serializer::collect_seq (1,500 samples, 2.45%)</title><rect x="62.7170%" y="1189" width="2.4525%" height="15" fill="rgb(221,144,10)" fg:x="38359" fg:w="1500"/><text x="62.9670%" y="1199.50">sk..</text></g><g><title>sk-gen`sk_store::config::_::_&lt;impl serde::ser::Serialize for sk_store::config::TracerConfig&gt;::serialize (8 samples, 0.01%)</title><rect x="65.1728%" y="1189" width="0.0131%" height="15" fill="rgb(226,41,38)" fg:x="39861" fg:w="8"/><text x="65.4228%" y="1199.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (8 samples, 0.01%)</title><rect x="65.1728%" y="1173" width="0.0131%" height="15" fill="rgb(228,3,1)" fg:x="39861" fg:w="8"/><text x="65.4228%" y="1183.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,516 samples, 2.48%)</title><rect x="62.7138%" y="1205" width="2.4787%" height="15" fill="rgb(209,129,12)" fg:x="38357" fg:w="1516"/><text x="62.9638%" y="1215.50">sk..</text></g><g><title>sk-gen`sk_store::store::_::_&lt;impl serde::ser::Serialize for sk_store::store::TraceStore&gt;::serialize (1,519 samples, 2.48%)</title><rect x="62.7105%" y="1221" width="2.4836%" height="15" fill="rgb(213,136,33)" fg:x="38355" fg:w="1519"/><text x="62.9605%" y="1231.50">sk..</text></g><g><title>sk-gen`sk_gen::Simulation::generate_traces (1,563 samples, 2.56%)</title><rect x="62.6598%" y="1237" width="2.5555%" height="15" fill="rgb(209,181,29)" fg:x="38324" fg:w="1563"/><text x="62.9098%" y="1247.50">sk..</text></g><g><title>sk-gen`std::fs::OpenOptions::_open (13 samples, 0.02%)</title><rect x="65.1941%" y="1221" width="0.0213%" height="15" fill="rgb(234,173,18)" fg:x="39874" fg:w="13"/><text x="65.4441%" y="1231.50"></text></g><g><title>libsystem_kernel.dylib`__open (13 samples, 0.02%)</title><rect x="65.1941%" y="1205" width="0.0213%" height="15" fill="rgb(227,73,47)" fg:x="39874" fg:w="13"/><text x="65.4441%" y="1215.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="65.3069%" y="1173" width="0.0131%" height="15" fill="rgb(234,9,34)" fg:x="39943" fg:w="8"/><text x="65.5569%" y="1183.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="65.4295%" y="1061" width="0.0131%" height="15" fill="rgb(235,172,15)" fg:x="40018" fg:w="8"/><text x="65.6795%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="65.4426%" y="1061" width="0.0131%" height="15" fill="rgb(245,61,2)" fg:x="40026" fg:w="8"/><text x="65.6926%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (32 samples, 0.05%)</title><rect x="65.4050%" y="1077" width="0.0523%" height="15" fill="rgb(238,39,47)" fg:x="40003" fg:w="32"/><text x="65.6550%" y="1087.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (37 samples, 0.06%)</title><rect x="65.4001%" y="1093" width="0.0605%" height="15" fill="rgb(234,37,24)" fg:x="40000" fg:w="37"/><text x="65.6501%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (18 samples, 0.03%)</title><rect x="65.4606%" y="1093" width="0.0294%" height="15" fill="rgb(248,223,24)" fg:x="40037" fg:w="18"/><text x="65.7106%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (72 samples, 0.12%)</title><rect x="65.3854%" y="1109" width="0.1177%" height="15" fill="rgb(223,12,15)" fg:x="39991" fg:w="72"/><text x="65.6354%" y="1119.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (74 samples, 0.12%)</title><rect x="65.3837%" y="1125" width="0.1210%" height="15" fill="rgb(249,6,3)" fg:x="39990" fg:w="74"/><text x="65.6337%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.01%)</title><rect x="65.5047%" y="1125" width="0.0147%" height="15" fill="rgb(237,105,33)" fg:x="40064" fg:w="9"/><text x="65.7547%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (120 samples, 0.20%)</title><rect x="65.3363%" y="1157" width="0.1962%" height="15" fill="rgb(252,208,35)" fg:x="39961" fg:w="120"/><text x="65.5863%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (110 samples, 0.18%)</title><rect x="65.3527%" y="1141" width="0.1799%" height="15" fill="rgb(215,181,35)" fg:x="39971" fg:w="110"/><text x="65.6027%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (134 samples, 0.22%)</title><rect x="65.3200%" y="1173" width="0.2191%" height="15" fill="rgb(246,212,3)" fg:x="39951" fg:w="134"/><text x="65.5700%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (159 samples, 0.26%)</title><rect x="65.2856%" y="1189" width="0.2600%" height="15" fill="rgb(247,156,24)" fg:x="39930" fg:w="159"/><text x="65.5356%" y="1199.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (165 samples, 0.27%)</title><rect x="65.2791%" y="1205" width="0.2698%" height="15" fill="rgb(248,9,31)" fg:x="39926" fg:w="165"/><text x="65.5291%" y="1215.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (185 samples, 0.30%)</title><rect x="65.2611%" y="1221" width="0.3025%" height="15" fill="rgb(234,26,45)" fg:x="39915" fg:w="185"/><text x="65.5111%" y="1231.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="65.5489%" y="1205" width="0.0147%" height="15" fill="rgb(249,11,32)" fg:x="40091" fg:w="9"/><text x="65.7989%" y="1215.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.06%)</title><rect x="65.5636%" y="1221" width="0.0572%" height="15" fill="rgb(249,162,33)" fg:x="40100" fg:w="35"/><text x="65.8136%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (29 samples, 0.05%)</title><rect x="65.5734%" y="1205" width="0.0474%" height="15" fill="rgb(232,4,32)" fg:x="40106" fg:w="29"/><text x="65.8234%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (27 samples, 0.04%)</title><rect x="65.5767%" y="1189" width="0.0441%" height="15" fill="rgb(212,5,45)" fg:x="40108" fg:w="27"/><text x="65.8267%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (27 samples, 0.04%)</title><rect x="65.5767%" y="1173" width="0.0441%" height="15" fill="rgb(227,95,13)" fg:x="40108" fg:w="27"/><text x="65.8267%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 0.04%)</title><rect x="65.5832%" y="1157" width="0.0376%" height="15" fill="rgb(223,205,10)" fg:x="40112" fg:w="23"/><text x="65.8332%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 0.03%)</title><rect x="65.5914%" y="1141" width="0.0294%" height="15" fill="rgb(222,178,8)" fg:x="40117" fg:w="18"/><text x="65.8414%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (17 samples, 0.03%)</title><rect x="65.5930%" y="1125" width="0.0278%" height="15" fill="rgb(216,13,22)" fg:x="40118" fg:w="17"/><text x="65.8430%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 0.02%)</title><rect x="65.5963%" y="1109" width="0.0245%" height="15" fill="rgb(240,167,12)" fg:x="40120" fg:w="15"/><text x="65.8463%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 0.02%)</title><rect x="65.5996%" y="1093" width="0.0213%" height="15" fill="rgb(235,68,35)" fg:x="40122" fg:w="13"/><text x="65.8496%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7 samples, 0.01%)</title><rect x="65.6094%" y="1077" width="0.0114%" height="15" fill="rgb(253,40,27)" fg:x="40128" fg:w="7"/><text x="65.8594%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="65.6372%" y="1189" width="0.0114%" height="15" fill="rgb(214,19,28)" fg:x="40145" fg:w="7"/><text x="65.8872%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="65.6372%" y="1173" width="0.0114%" height="15" fill="rgb(210,167,45)" fg:x="40145" fg:w="7"/><text x="65.8872%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="65.6960%" y="1157" width="0.0164%" height="15" fill="rgb(232,97,40)" fg:x="40181" fg:w="10"/><text x="65.9460%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="65.6993%" y="1141" width="0.0131%" height="15" fill="rgb(250,35,23)" fg:x="40183" fg:w="8"/><text x="65.9493%" y="1151.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="65.7156%" y="1157" width="0.0180%" height="15" fill="rgb(248,47,53)" fg:x="40193" fg:w="11"/><text x="65.9656%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="65.7909%" y="1125" width="0.0114%" height="15" fill="rgb(226,58,50)" fg:x="40239" fg:w="7"/><text x="66.0409%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.01%)</title><rect x="65.8252%" y="1109" width="0.0131%" height="15" fill="rgb(217,105,26)" fg:x="40260" fg:w="8"/><text x="66.0752%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="65.8383%" y="1109" width="0.0213%" height="15" fill="rgb(208,64,1)" fg:x="40268" fg:w="13"/><text x="66.0883%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="65.8481%" y="1093" width="0.0114%" height="15" fill="rgb(214,80,1)" fg:x="40274" fg:w="7"/><text x="66.0981%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="65.8612%" y="1109" width="0.0180%" height="15" fill="rgb(206,175,26)" fg:x="40282" fg:w="11"/><text x="66.1112%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="65.9135%" y="1077" width="0.0196%" height="15" fill="rgb(235,156,37)" fg:x="40314" fg:w="12"/><text x="66.1635%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="65.9429%" y="1077" width="0.0114%" height="15" fill="rgb(213,100,9)" fg:x="40332" fg:w="7"/><text x="66.1929%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="65.9952%" y="1045" width="0.0114%" height="15" fill="rgb(241,15,13)" fg:x="40364" fg:w="7"/><text x="66.2452%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="66.0165%" y="1045" width="0.0262%" height="15" fill="rgb(205,97,43)" fg:x="40377" fg:w="16"/><text x="66.2665%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.02%)</title><rect x="66.0230%" y="1029" width="0.0196%" height="15" fill="rgb(216,106,32)" fg:x="40381" fg:w="12"/><text x="66.2730%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.01%)</title><rect x="66.0279%" y="1013" width="0.0147%" height="15" fill="rgb(226,200,8)" fg:x="40384" fg:w="9"/><text x="66.2779%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (7 samples, 0.01%)</title><rect x="66.0312%" y="997" width="0.0114%" height="15" fill="rgb(244,54,29)" fg:x="40386" fg:w="7"/><text x="66.2812%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (52 samples, 0.09%)</title><rect x="65.9625%" y="1061" width="0.0850%" height="15" fill="rgb(252,169,12)" fg:x="40344" fg:w="52"/><text x="66.2125%" y="1071.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (60 samples, 0.10%)</title><rect x="65.9544%" y="1077" width="0.0981%" height="15" fill="rgb(231,199,11)" fg:x="40339" fg:w="60"/><text x="66.2044%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="66.0737%" y="1061" width="0.0114%" height="15" fill="rgb(233,191,18)" fg:x="40412" fg:w="7"/><text x="66.3237%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (22 samples, 0.04%)</title><rect x="66.0966%" y="1061" width="0.0360%" height="15" fill="rgb(215,83,47)" fg:x="40426" fg:w="22"/><text x="66.3466%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="66.1179%" y="1045" width="0.0147%" height="15" fill="rgb(251,67,19)" fg:x="40439" fg:w="9"/><text x="66.3679%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (53 samples, 0.09%)</title><rect x="66.0525%" y="1077" width="0.0867%" height="15" fill="rgb(240,7,20)" fg:x="40399" fg:w="53"/><text x="66.3025%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (28 samples, 0.05%)</title><rect x="66.1391%" y="1077" width="0.0458%" height="15" fill="rgb(210,150,26)" fg:x="40452" fg:w="28"/><text x="66.3891%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (20 samples, 0.03%)</title><rect x="66.1522%" y="1061" width="0.0327%" height="15" fill="rgb(228,75,42)" fg:x="40460" fg:w="20"/><text x="66.4022%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (8 samples, 0.01%)</title><rect x="66.1718%" y="1045" width="0.0131%" height="15" fill="rgb(237,134,48)" fg:x="40472" fg:w="8"/><text x="66.4218%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (179 samples, 0.29%)</title><rect x="65.8939%" y="1093" width="0.2927%" height="15" fill="rgb(205,80,50)" fg:x="40302" fg:w="179"/><text x="66.1439%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (190 samples, 0.31%)</title><rect x="65.8791%" y="1109" width="0.3107%" height="15" fill="rgb(217,74,48)" fg:x="40293" fg:w="190"/><text x="66.1291%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 0.02%)</title><rect x="66.1898%" y="1109" width="0.0245%" height="15" fill="rgb(205,82,50)" fg:x="40483" fg:w="15"/><text x="66.4398%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="66.2143%" y="1109" width="0.0343%" height="15" fill="rgb(228,1,33)" fg:x="40498" fg:w="21"/><text x="66.4643%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (16 samples, 0.03%)</title><rect x="66.2225%" y="1093" width="0.0262%" height="15" fill="rgb(214,50,23)" fg:x="40503" fg:w="16"/><text x="66.4725%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (277 samples, 0.45%)</title><rect x="65.8039%" y="1125" width="0.4529%" height="15" fill="rgb(210,62,9)" fg:x="40247" fg:w="277"/><text x="66.0539%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (309 samples, 0.51%)</title><rect x="65.7631%" y="1141" width="0.5052%" height="15" fill="rgb(210,104,37)" fg:x="40222" fg:w="309"/><text x="66.0131%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="66.2683%" y="1141" width="0.0114%" height="15" fill="rgb(232,104,43)" fg:x="40531" fg:w="7"/><text x="66.5183%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (337 samples, 0.55%)</title><rect x="65.7336%" y="1157" width="0.5510%" height="15" fill="rgb(244,52,6)" fg:x="40204" fg:w="337"/><text x="65.9836%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="66.2846%" y="1157" width="0.0327%" height="15" fill="rgb(211,174,52)" fg:x="40541" fg:w="20"/><text x="66.5346%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (19 samples, 0.03%)</title><rect x="66.2863%" y="1141" width="0.0311%" height="15" fill="rgb(229,48,4)" fg:x="40542" fg:w="19"/><text x="66.5363%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (404 samples, 0.66%)</title><rect x="65.6601%" y="1173" width="0.6605%" height="15" fill="rgb(205,155,16)" fg:x="40159" fg:w="404"/><text x="65.9101%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (421 samples, 0.69%)</title><rect x="65.6355%" y="1205" width="0.6883%" height="15" fill="rgb(211,141,53)" fg:x="40144" fg:w="421"/><text x="65.8855%" y="1215.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (412 samples, 0.67%)</title><rect x="65.6502%" y="1189" width="0.6736%" height="15" fill="rgb(240,148,11)" fg:x="40153" fg:w="412"/><text x="65.9002%" y="1199.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="66.3566%" y="1189" width="0.0180%" height="15" fill="rgb(214,45,23)" fg:x="40585" fg:w="11"/><text x="66.6066%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="66.3893%" y="1173" width="0.0196%" height="15" fill="rgb(248,74,26)" fg:x="40605" fg:w="12"/><text x="66.6393%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="66.3925%" y="1157" width="0.0164%" height="15" fill="rgb(218,121,16)" fg:x="40607" fg:w="10"/><text x="66.6425%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.02%)</title><rect x="66.4089%" y="1173" width="0.0213%" height="15" fill="rgb(218,10,47)" fg:x="40617" fg:w="13"/><text x="66.6589%" y="1183.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.01%)</title><rect x="66.5626%" y="1061" width="0.0131%" height="15" fill="rgb(227,99,14)" fg:x="40711" fg:w="8"/><text x="66.8126%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="66.5757%" y="1061" width="0.0278%" height="15" fill="rgb(229,83,46)" fg:x="40719" fg:w="17"/><text x="66.8257%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (16 samples, 0.03%)</title><rect x="66.5773%" y="1045" width="0.0262%" height="15" fill="rgb(228,25,1)" fg:x="40720" fg:w="16"/><text x="66.8273%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (37 samples, 0.06%)</title><rect x="66.5446%" y="1077" width="0.0605%" height="15" fill="rgb(252,190,15)" fg:x="40700" fg:w="37"/><text x="66.7946%" y="1087.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (43 samples, 0.07%)</title><rect x="66.5380%" y="1093" width="0.0703%" height="15" fill="rgb(213,103,51)" fg:x="40696" fg:w="43"/><text x="66.7880%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (18 samples, 0.03%)</title><rect x="66.6280%" y="1077" width="0.0294%" height="15" fill="rgb(220,38,44)" fg:x="40751" fg:w="18"/><text x="66.8780%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (32 samples, 0.05%)</title><rect x="66.6084%" y="1093" width="0.0523%" height="15" fill="rgb(210,45,26)" fg:x="40739" fg:w="32"/><text x="66.8584%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="66.6607%" y="1093" width="0.0147%" height="15" fill="rgb(205,95,48)" fg:x="40771" fg:w="9"/><text x="66.9107%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.01%)</title><rect x="66.6623%" y="1077" width="0.0131%" height="15" fill="rgb(225,179,37)" fg:x="40772" fg:w="8"/><text x="66.9123%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (97 samples, 0.16%)</title><rect x="66.5201%" y="1109" width="0.1586%" height="15" fill="rgb(230,209,3)" fg:x="40685" fg:w="97"/><text x="66.7701%" y="1119.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (101 samples, 0.17%)</title><rect x="66.5168%" y="1125" width="0.1651%" height="15" fill="rgb(248,12,46)" fg:x="40683" fg:w="101"/><text x="66.7668%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 0.02%)</title><rect x="66.6819%" y="1125" width="0.0229%" height="15" fill="rgb(234,18,0)" fg:x="40784" fg:w="14"/><text x="66.9319%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="66.7048%" y="1125" width="0.0131%" height="15" fill="rgb(238,197,14)" fg:x="40798" fg:w="8"/><text x="66.9548%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (159 samples, 0.26%)</title><rect x="66.4645%" y="1141" width="0.2600%" height="15" fill="rgb(251,162,48)" fg:x="40651" fg:w="159"/><text x="66.7145%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (168 samples, 0.27%)</title><rect x="66.4514%" y="1157" width="0.2747%" height="15" fill="rgb(237,73,42)" fg:x="40643" fg:w="168"/><text x="66.7014%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (187 samples, 0.31%)</title><rect x="66.4301%" y="1173" width="0.3057%" height="15" fill="rgb(211,108,8)" fg:x="40630" fg:w="187"/><text x="66.6801%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="66.7359%" y="1173" width="0.0196%" height="15" fill="rgb(213,45,22)" fg:x="40817" fg:w="12"/><text x="66.9859%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="66.7408%" y="1157" width="0.0147%" height="15" fill="rgb(252,154,5)" fg:x="40820" fg:w="9"/><text x="66.9908%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (234 samples, 0.38%)</title><rect x="66.3745%" y="1189" width="0.3826%" height="15" fill="rgb(221,79,52)" fg:x="40596" fg:w="234"/><text x="66.6245%" y="1199.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (695 samples, 1.14%)</title><rect x="65.6241%" y="1221" width="1.1363%" height="15" fill="rgb(229,220,36)" fg:x="40137" fg:w="695"/><text x="65.8741%" y="1231.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (267 samples, 0.44%)</title><rect x="66.3239%" y="1205" width="0.4365%" height="15" fill="rgb(211,17,16)" fg:x="40565" fg:w="267"/><text x="66.5739%" y="1215.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (218 samples, 0.36%)</title><rect x="66.7784%" y="1189" width="0.3564%" height="15" fill="rgb(222,55,31)" fg:x="40843" fg:w="218"/><text x="67.0284%" y="1199.50"></text></g><g><title>sk-gen`DYLD-STUB$$log (81 samples, 0.13%)</title><rect x="67.1365%" y="1189" width="0.1324%" height="15" fill="rgb(221,221,31)" fg:x="41062" fg:w="81"/><text x="67.3865%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (897 samples, 1.47%)</title><rect x="67.2689%" y="1189" width="1.4666%" height="15" fill="rgb(227,168,26)" fg:x="41143" fg:w="897"/><text x="67.5189%" y="1199.50"></text></g><g><title>sk-gen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (35 samples, 0.06%)</title><rect x="68.7371%" y="1189" width="0.0572%" height="15" fill="rgb(224,139,9)" fg:x="42041" fg:w="35"/><text x="68.9871%" y="1199.50"></text></g><g><title>libsystem_m.dylib`log (421 samples, 0.69%)</title><rect x="75.9949%" y="1173" width="0.6883%" height="15" fill="rgb(254,172,0)" fg:x="46480" fg:w="421"/><text x="76.2449%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (24 samples, 0.04%)</title><rect x="76.6947%" y="1173" width="0.0392%" height="15" fill="rgb(235,203,1)" fg:x="46908" fg:w="24"/><text x="76.9447%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`madvise (24 samples, 0.04%)</title><rect x="76.6947%" y="1157" width="0.0392%" height="15" fill="rgb(216,205,24)" fg:x="46908" fg:w="24"/><text x="76.9447%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (13 samples, 0.02%)</title><rect x="76.7372%" y="1173" width="0.0213%" height="15" fill="rgb(233,24,6)" fg:x="46934" fg:w="13"/><text x="76.9872%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (18 samples, 0.03%)</title><rect x="76.7846%" y="1109" width="0.0294%" height="15" fill="rgb(244,110,9)" fg:x="46963" fg:w="18"/><text x="77.0346%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (46 samples, 0.08%)</title><rect x="76.7699%" y="1125" width="0.0752%" height="15" fill="rgb(239,222,42)" fg:x="46954" fg:w="46"/><text x="77.0199%" y="1135.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.03%)</title><rect x="76.8140%" y="1109" width="0.0311%" height="15" fill="rgb(218,145,13)" fg:x="46981" fg:w="19"/><text x="77.0640%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (52 samples, 0.09%)</title><rect x="76.7650%" y="1141" width="0.0850%" height="15" fill="rgb(207,69,11)" fg:x="46951" fg:w="52"/><text x="77.0150%" y="1151.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (57 samples, 0.09%)</title><rect x="76.7601%" y="1173" width="0.0932%" height="15" fill="rgb(220,223,22)" fg:x="46948" fg:w="57"/><text x="77.0101%" y="1183.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (55 samples, 0.09%)</title><rect x="76.7633%" y="1157" width="0.0899%" height="15" fill="rgb(245,102,5)" fg:x="46950" fg:w="55"/><text x="77.0133%" y="1167.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="76.8533%" y="1173" width="0.0180%" height="15" fill="rgb(211,148,2)" fg:x="47005" fg:w="11"/><text x="77.1033%" y="1183.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (58 samples, 0.09%)</title><rect x="77.6642%" y="1157" width="0.0948%" height="15" fill="rgb(241,13,44)" fg:x="47501" fg:w="58"/><text x="77.9142%" y="1167.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (178 samples, 0.29%)</title><rect x="77.7623%" y="1157" width="0.2910%" height="15" fill="rgb(219,137,21)" fg:x="47561" fg:w="178"/><text x="78.0123%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="78.4866%" y="1141" width="0.0147%" height="15" fill="rgb(242,206,5)" fg:x="48004" fg:w="9"/><text x="78.7366%" y="1151.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (130 samples, 0.21%)</title><rect x="78.5014%" y="1141" width="0.2126%" height="15" fill="rgb(217,114,22)" fg:x="48013" fg:w="130"/><text x="78.7514%" y="1151.50"></text></g><g><title>sk-gen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,537 samples, 2.51%)</title><rect x="76.8811%" y="1173" width="2.5130%" height="15" fill="rgb(253,206,42)" fg:x="47022" fg:w="1537"/><text x="77.1311%" y="1183.50">sk..</text></g><g><title>sk-gen`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (820 samples, 1.34%)</title><rect x="78.0534%" y="1157" width="1.3407%" height="15" fill="rgb(236,102,18)" fg:x="47739" fg:w="820"/><text x="78.3034%" y="1167.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (416 samples, 0.68%)</title><rect x="78.7139%" y="1141" width="0.6802%" height="15" fill="rgb(208,59,49)" fg:x="48143" fg:w="416"/><text x="78.9639%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (12 samples, 0.02%)</title><rect x="79.8208%" y="1157" width="0.0196%" height="15" fill="rgb(215,194,28)" fg:x="48820" fg:w="12"/><text x="80.0708%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`madvise (12 samples, 0.02%)</title><rect x="79.8208%" y="1141" width="0.0196%" height="15" fill="rgb(243,207,11)" fg:x="48820" fg:w="12"/><text x="80.0708%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.01%)</title><rect x="79.8633%" y="1141" width="0.0114%" height="15" fill="rgb(254,179,35)" fg:x="48846" fg:w="7"/><text x="80.1133%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (7 samples, 0.01%)</title><rect x="79.8633%" y="1125" width="0.0114%" height="15" fill="rgb(235,97,3)" fg:x="48846" fg:w="7"/><text x="80.1133%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.03%)</title><rect x="79.8568%" y="1157" width="0.0278%" height="15" fill="rgb(215,155,33)" fg:x="48842" fg:w="17"/><text x="80.1068%" y="1167.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (135 samples, 0.22%)</title><rect x="79.8911%" y="1157" width="0.2207%" height="15" fill="rgb(223,128,12)" fg:x="48863" fg:w="135"/><text x="80.1411%" y="1167.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,554 samples, 13.99%)</title><rect x="66.7686%" y="1205" width="13.9858%" height="15" fill="rgb(208,157,18)" fg:x="40837" fg:w="8554"/><text x="67.0186%" y="1215.50">sk-gen`&lt;core::iter::a..</text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::ch::CH&lt;N,E,H&gt;::g_distance (7,315 samples, 11.96%)</title><rect x="68.7943%" y="1189" width="11.9600%" height="15" fill="rgb(249,70,54)" fg:x="42076" fg:w="7315"/><text x="69.0443%" y="1199.50">sk-gen`sk_gen::con..</text></g><g><title>sk-gen`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (832 samples, 1.36%)</title><rect x="79.3941%" y="1173" width="1.3603%" height="15" fill="rgb(244,118,24)" fg:x="48559" fg:w="832"/><text x="79.6441%" y="1183.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (393 samples, 0.64%)</title><rect x="80.1118%" y="1157" width="0.6426%" height="15" fill="rgb(211,54,0)" fg:x="48998" fg:w="393"/><text x="80.3618%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,562 samples, 14.00%)</title><rect x="66.7604%" y="1221" width="13.9989%" height="15" fill="rgb(245,137,45)" fg:x="40832" fg:w="8562"/><text x="67.0104%" y="1231.50">sk-gen`&lt;alloc::vec::V..</text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (269 samples, 0.44%)</title><rect x="80.7593%" y="1221" width="0.4398%" height="15" fill="rgb(232,154,31)" fg:x="49394" fg:w="269"/><text x="81.0093%" y="1231.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="81.2285%" y="1173" width="0.0164%" height="15" fill="rgb(253,6,39)" fg:x="49681" fg:w="10"/><text x="81.4785%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="81.2727%" y="1157" width="0.0114%" height="15" fill="rgb(234,183,24)" fg:x="49708" fg:w="7"/><text x="81.5227%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="81.2923%" y="1157" width="0.0114%" height="15" fill="rgb(252,84,40)" fg:x="49720" fg:w="7"/><text x="81.5423%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="81.4182%" y="1109" width="0.0196%" height="15" fill="rgb(224,65,2)" fg:x="49797" fg:w="12"/><text x="81.6682%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="81.4378%" y="1109" width="0.0196%" height="15" fill="rgb(229,38,24)" fg:x="49809" fg:w="12"/><text x="81.6878%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="81.4444%" y="1093" width="0.0131%" height="15" fill="rgb(218,131,50)" fg:x="49813" fg:w="8"/><text x="81.6944%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="81.4591%" y="1109" width="0.0147%" height="15" fill="rgb(233,106,18)" fg:x="49822" fg:w="9"/><text x="81.7091%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="81.5114%" y="1077" width="0.0180%" height="15" fill="rgb(220,216,11)" fg:x="49854" fg:w="11"/><text x="81.7614%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="81.5425%" y="1077" width="0.0114%" height="15" fill="rgb(251,100,45)" fg:x="49873" fg:w="7"/><text x="81.7925%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="81.6095%" y="1045" width="0.0180%" height="15" fill="rgb(235,143,32)" fg:x="49914" fg:w="11"/><text x="81.8595%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (22 samples, 0.04%)</title><rect x="81.6275%" y="1045" width="0.0360%" height="15" fill="rgb(248,124,34)" fg:x="49925" fg:w="22"/><text x="81.8775%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (18 samples, 0.03%)</title><rect x="81.6340%" y="1029" width="0.0294%" height="15" fill="rgb(225,221,4)" fg:x="49929" fg:w="18"/><text x="81.8840%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (11 samples, 0.02%)</title><rect x="81.6455%" y="1013" width="0.0180%" height="15" fill="rgb(242,27,43)" fg:x="49936" fg:w="11"/><text x="81.8955%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (57 samples, 0.09%)</title><rect x="81.5719%" y="1061" width="0.0932%" height="15" fill="rgb(227,54,8)" fg:x="49891" fg:w="57"/><text x="81.8219%" y="1071.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (71 samples, 0.12%)</title><rect x="81.5539%" y="1077" width="0.1161%" height="15" fill="rgb(253,139,49)" fg:x="49880" fg:w="71"/><text x="81.8039%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 0.02%)</title><rect x="81.6994%" y="1061" width="0.0229%" height="15" fill="rgb(231,26,43)" fg:x="49969" fg:w="14"/><text x="81.9494%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="81.7109%" y="1045" width="0.0114%" height="15" fill="rgb(207,121,39)" fg:x="49976" fg:w="7"/><text x="81.9609%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="81.7109%" y="1029" width="0.0114%" height="15" fill="rgb(223,101,35)" fg:x="49976" fg:w="7"/><text x="81.9609%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (38 samples, 0.06%)</title><rect x="81.6700%" y="1077" width="0.0621%" height="15" fill="rgb(232,87,23)" fg:x="49951" fg:w="38"/><text x="81.9200%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="81.7321%" y="1077" width="0.0213%" height="15" fill="rgb(225,180,29)" fg:x="49989" fg:w="13"/><text x="81.9821%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.02%)</title><rect x="81.7338%" y="1061" width="0.0196%" height="15" fill="rgb(225,25,17)" fg:x="49990" fg:w="12"/><text x="81.9838%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (164 samples, 0.27%)</title><rect x="81.4869%" y="1093" width="0.2681%" height="15" fill="rgb(223,8,52)" fg:x="49839" fg:w="164"/><text x="81.7369%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (177 samples, 0.29%)</title><rect x="81.4738%" y="1109" width="0.2894%" height="15" fill="rgb(246,42,21)" fg:x="49831" fg:w="177"/><text x="81.7238%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17 samples, 0.03%)</title><rect x="81.7632%" y="1109" width="0.0278%" height="15" fill="rgb(205,64,43)" fg:x="50008" fg:w="17"/><text x="82.0132%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (29 samples, 0.05%)</title><rect x="81.7910%" y="1109" width="0.0474%" height="15" fill="rgb(221,160,13)" fg:x="50025" fg:w="29"/><text x="82.0410%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (25 samples, 0.04%)</title><rect x="81.7975%" y="1093" width="0.0409%" height="15" fill="rgb(239,58,35)" fg:x="50029" fg:w="25"/><text x="82.0475%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.01%)</title><rect x="81.8270%" y="1077" width="0.0114%" height="15" fill="rgb(251,26,40)" fg:x="50047" fg:w="7"/><text x="82.0770%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (282 samples, 0.46%)</title><rect x="81.3822%" y="1125" width="0.4611%" height="15" fill="rgb(247,0,4)" fg:x="49775" fg:w="282"/><text x="81.6322%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (316 samples, 0.52%)</title><rect x="81.3397%" y="1141" width="0.5167%" height="15" fill="rgb(218,130,10)" fg:x="49749" fg:w="316"/><text x="81.5897%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="81.8564%" y="1141" width="0.0131%" height="15" fill="rgb(239,32,7)" fg:x="50065" fg:w="8"/><text x="82.1064%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="81.8580%" y="1125" width="0.0114%" height="15" fill="rgb(210,192,24)" fg:x="50066" fg:w="7"/><text x="82.1080%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (347 samples, 0.57%)</title><rect x="81.3038%" y="1157" width="0.5673%" height="15" fill="rgb(226,212,17)" fg:x="49727" fg:w="347"/><text x="81.5538%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="81.8711%" y="1157" width="0.0164%" height="15" fill="rgb(219,201,28)" fg:x="50074" fg:w="10"/><text x="82.1211%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.01%)</title><rect x="81.8760%" y="1141" width="0.0114%" height="15" fill="rgb(235,207,41)" fg:x="50077" fg:w="7"/><text x="82.1260%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (395 samples, 0.65%)</title><rect x="81.2449%" y="1173" width="0.6458%" height="15" fill="rgb(241,95,54)" fg:x="49691" fg:w="395"/><text x="81.4949%" y="1183.50"></text></g><g><title>sk-gen`&lt;sk_gen::Action as core::clone::Clone&gt;::clone (427 samples, 0.70%)</title><rect x="81.1991%" y="1221" width="0.6981%" height="15" fill="rgb(248,12,23)" fg:x="49663" fg:w="427"/><text x="81.4491%" y="1231.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (424 samples, 0.69%)</title><rect x="81.2040%" y="1205" width="0.6932%" height="15" fill="rgb(228,173,4)" fg:x="49666" fg:w="424"/><text x="81.4540%" y="1215.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (417 samples, 0.68%)</title><rect x="81.2155%" y="1189" width="0.6818%" height="15" fill="rgb(254,99,5)" fg:x="49673" fg:w="417"/><text x="81.4655%" y="1199.50"></text></g><g><title>sk-gen`DYLD-STUB$$log (89 samples, 0.15%)</title><rect x="81.8989%" y="1221" width="0.1455%" height="15" fill="rgb(212,184,17)" fg:x="50091" fg:w="89"/><text x="82.1489%" y="1231.50"></text></g><g><title>sk-gen`alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (1,455 samples, 2.38%)</title><rect x="82.0444%" y="1221" width="2.3789%" height="15" fill="rgb(252,174,1)" fg:x="50180" fg:w="1455"/><text x="82.2944%" y="1231.50">sk..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;kube_core::dynamic::DynamicObject&gt; (7 samples, 0.01%)</title><rect x="84.4282%" y="1173" width="0.0114%" height="15" fill="rgb(241,118,51)" fg:x="51638" fg:w="7"/><text x="84.6782%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="84.4479%" y="1109" width="0.0131%" height="15" fill="rgb(227,94,47)" fg:x="51650" fg:w="8"/><text x="84.6979%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="84.5149%" y="997" width="0.0114%" height="15" fill="rgb(229,104,2)" fg:x="51691" fg:w="7"/><text x="84.7649%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (11 samples, 0.02%)</title><rect x="84.5116%" y="1029" width="0.0180%" height="15" fill="rgb(219,28,31)" fg:x="51689" fg:w="11"/><text x="84.7616%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.01%)</title><rect x="84.5149%" y="1013" width="0.0147%" height="15" fill="rgb(233,109,36)" fg:x="51691" fg:w="9"/><text x="84.7649%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.11%)</title><rect x="84.4266%" y="1205" width="0.1079%" height="15" fill="rgb(246,88,11)" fg:x="51637" fg:w="66"/><text x="84.6766%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;sk_store::TraceEvent&gt; (66 samples, 0.11%)</title><rect x="84.4266%" y="1189" width="0.1079%" height="15" fill="rgb(209,212,17)" fg:x="51637" fg:w="66"/><text x="84.6766%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (58 samples, 0.09%)</title><rect x="84.4397%" y="1173" width="0.0948%" height="15" fill="rgb(243,59,29)" fg:x="51645" fg:w="58"/><text x="84.6897%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (58 samples, 0.09%)</title><rect x="84.4397%" y="1157" width="0.0948%" height="15" fill="rgb(244,205,48)" fg:x="51645" fg:w="58"/><text x="84.6897%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (56 samples, 0.09%)</title><rect x="84.4430%" y="1141" width="0.0916%" height="15" fill="rgb(227,30,6)" fg:x="51647" fg:w="56"/><text x="84.6930%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (55 samples, 0.09%)</title><rect x="84.4446%" y="1125" width="0.0899%" height="15" fill="rgb(220,205,48)" fg:x="51648" fg:w="55"/><text x="84.6946%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (45 samples, 0.07%)</title><rect x="84.4609%" y="1109" width="0.0736%" height="15" fill="rgb(250,94,14)" fg:x="51658" fg:w="45"/><text x="84.7109%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (35 samples, 0.06%)</title><rect x="84.4773%" y="1093" width="0.0572%" height="15" fill="rgb(216,119,42)" fg:x="51668" fg:w="35"/><text x="84.7273%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (34 samples, 0.06%)</title><rect x="84.4789%" y="1077" width="0.0556%" height="15" fill="rgb(232,155,0)" fg:x="51669" fg:w="34"/><text x="84.7289%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (30 samples, 0.05%)</title><rect x="84.4855%" y="1061" width="0.0491%" height="15" fill="rgb(212,24,32)" fg:x="51673" fg:w="30"/><text x="84.7355%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 0.03%)</title><rect x="84.5067%" y="1045" width="0.0278%" height="15" fill="rgb(216,69,20)" fg:x="51686" fg:w="17"/><text x="84.7567%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;kube_core::dynamic::DynamicObject&gt; (18 samples, 0.03%)</title><rect x="84.5427%" y="1189" width="0.0294%" height="15" fill="rgb(229,73,31)" fg:x="51708" fg:w="18"/><text x="84.7927%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (16 samples, 0.03%)</title><rect x="84.5460%" y="1173" width="0.0262%" height="15" fill="rgb(224,219,20)" fg:x="51710" fg:w="16"/><text x="84.7960%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="84.5509%" y="1157" width="0.0213%" height="15" fill="rgb(215,146,41)" fg:x="51713" fg:w="13"/><text x="84.8009%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.01%)</title><rect x="84.5966%" y="1125" width="0.0131%" height="15" fill="rgb(244,71,31)" fg:x="51741" fg:w="8"/><text x="84.8466%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="84.6163%" y="1109" width="0.0147%" height="15" fill="rgb(224,24,11)" fg:x="51753" fg:w="9"/><text x="84.8663%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="84.6195%" y="1093" width="0.0114%" height="15" fill="rgb(229,76,15)" fg:x="51755" fg:w="7"/><text x="84.8695%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 samples, 0.02%)</title><rect x="84.6097%" y="1125" width="0.0245%" height="15" fill="rgb(209,93,2)" fg:x="51749" fg:w="15"/><text x="84.8597%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.02%)</title><rect x="84.6375%" y="1109" width="0.0180%" height="15" fill="rgb(216,200,50)" fg:x="51766" fg:w="11"/><text x="84.8875%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="84.6571%" y="1109" width="0.0147%" height="15" fill="rgb(211,67,34)" fg:x="51778" fg:w="9"/><text x="84.9071%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="84.7029%" y="1061" width="0.0131%" height="15" fill="rgb(225,87,47)" fg:x="51806" fg:w="8"/><text x="84.9529%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (17 samples, 0.03%)</title><rect x="84.7307%" y="1045" width="0.0278%" height="15" fill="rgb(217,185,16)" fg:x="51823" fg:w="17"/><text x="84.9807%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.02%)</title><rect x="84.7389%" y="1029" width="0.0196%" height="15" fill="rgb(205,0,0)" fg:x="51828" fg:w="12"/><text x="84.9889%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;sk_gen::contraction_hierarchies::ch::CHEdge&lt;sk_gen::Edge&gt;&gt; (205 samples, 0.34%)</title><rect x="84.4266%" y="1221" width="0.3352%" height="15" fill="rgb(207,116,45)" fg:x="51637" fg:w="205"/><text x="84.6766%" y="1231.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;sk_store::TraceEvent&gt; (139 samples, 0.23%)</title><rect x="84.5345%" y="1205" width="0.2273%" height="15" fill="rgb(221,156,26)" fg:x="51703" fg:w="139"/><text x="84.7845%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (116 samples, 0.19%)</title><rect x="84.5721%" y="1189" width="0.1897%" height="15" fill="rgb(213,140,4)" fg:x="51726" fg:w="116"/><text x="84.8221%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (115 samples, 0.19%)</title><rect x="84.5738%" y="1173" width="0.1880%" height="15" fill="rgb(231,224,15)" fg:x="51727" fg:w="115"/><text x="84.8238%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (108 samples, 0.18%)</title><rect x="84.5852%" y="1157" width="0.1766%" height="15" fill="rgb(244,76,20)" fg:x="51734" fg:w="108"/><text x="84.8352%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (104 samples, 0.17%)</title><rect x="84.5917%" y="1141" width="0.1700%" height="15" fill="rgb(238,117,7)" fg:x="51738" fg:w="104"/><text x="84.8417%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (78 samples, 0.13%)</title><rect x="84.6343%" y="1125" width="0.1275%" height="15" fill="rgb(235,1,10)" fg:x="51764" fg:w="78"/><text x="84.8843%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (55 samples, 0.09%)</title><rect x="84.6719%" y="1109" width="0.0899%" height="15" fill="rgb(216,165,6)" fg:x="51787" fg:w="55"/><text x="84.9219%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (49 samples, 0.08%)</title><rect x="84.6817%" y="1093" width="0.0801%" height="15" fill="rgb(246,91,35)" fg:x="51793" fg:w="49"/><text x="84.9317%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (40 samples, 0.07%)</title><rect x="84.6964%" y="1077" width="0.0654%" height="15" fill="rgb(228,96,24)" fg:x="51802" fg:w="40"/><text x="84.9464%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (28 samples, 0.05%)</title><rect x="84.7160%" y="1061" width="0.0458%" height="15" fill="rgb(254,217,53)" fg:x="51814" fg:w="28"/><text x="84.9660%" y="1071.50"></text></g><g><title>sk-gen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.05%)</title><rect x="84.7618%" y="1221" width="0.0491%" height="15" fill="rgb(209,60,0)" fg:x="51842" fg:w="30"/><text x="85.0118%" y="1231.50"></text></g><g><title>libsystem_m.dylib`log (427 samples, 0.70%)</title><rect x="93.1444%" y="1205" width="0.6981%" height="15" fill="rgb(250,93,26)" fg:x="56969" fg:w="427"/><text x="93.3944%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (27 samples, 0.04%)</title><rect x="93.8475%" y="1205" width="0.0441%" height="15" fill="rgb(211,9,40)" fg:x="57399" fg:w="27"/><text x="94.0975%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`madvise (26 samples, 0.04%)</title><rect x="93.8491%" y="1189" width="0.0425%" height="15" fill="rgb(242,57,20)" fg:x="57400" fg:w="26"/><text x="94.0991%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (7 samples, 0.01%)</title><rect x="93.9113%" y="1141" width="0.0114%" height="15" fill="rgb(248,85,48)" fg:x="57438" fg:w="7"/><text x="94.1613%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.02%)</title><rect x="93.9243%" y="1141" width="0.0245%" height="15" fill="rgb(212,117,2)" fg:x="57446" fg:w="15"/><text x="94.1743%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="93.9358%" y="1125" width="0.0131%" height="15" fill="rgb(243,19,3)" fg:x="57453" fg:w="8"/><text x="94.1858%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (47 samples, 0.08%)</title><rect x="93.9031%" y="1157" width="0.0768%" height="15" fill="rgb(232,217,24)" fg:x="57433" fg:w="47"/><text x="94.1531%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.03%)</title><rect x="93.9489%" y="1141" width="0.0311%" height="15" fill="rgb(224,175,40)" fg:x="57461" fg:w="19"/><text x="94.1989%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (52 samples, 0.09%)</title><rect x="93.9014%" y="1173" width="0.0850%" height="15" fill="rgb(212,162,32)" fg:x="57432" fg:w="52"/><text x="94.1514%" y="1183.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (56 samples, 0.09%)</title><rect x="93.8965%" y="1205" width="0.0916%" height="15" fill="rgb(215,9,4)" fg:x="57429" fg:w="56"/><text x="94.1465%" y="1215.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (53 samples, 0.09%)</title><rect x="93.9014%" y="1189" width="0.0867%" height="15" fill="rgb(242,42,7)" fg:x="57432" fg:w="53"/><text x="94.1514%" y="1199.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="93.9881%" y="1205" width="0.0114%" height="15" fill="rgb(242,184,45)" fg:x="57485" fg:w="7"/><text x="94.2381%" y="1215.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (60 samples, 0.10%)</title><rect x="94.8318%" y="1189" width="0.0981%" height="15" fill="rgb(228,111,51)" fg:x="58001" fg:w="60"/><text x="95.0818%" y="1199.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (215 samples, 0.35%)</title><rect x="94.9315%" y="1189" width="0.3515%" height="15" fill="rgb(236,147,17)" fg:x="58062" fg:w="215"/><text x="95.1815%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="95.7179%" y="1173" width="0.0147%" height="15" fill="rgb(210,75,22)" fg:x="58543" fg:w="9"/><text x="95.9679%" y="1183.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (138 samples, 0.23%)</title><rect x="95.7392%" y="1173" width="0.2256%" height="15" fill="rgb(217,159,45)" fg:x="58556" fg:w="138"/><text x="95.9892%" y="1183.50"></text></g><g><title>sk-gen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,589 samples, 2.60%)</title><rect x="94.0044%" y="1205" width="2.5980%" height="15" fill="rgb(245,165,53)" fg:x="57495" fg:w="1589"/><text x="94.2544%" y="1215.50">sk..</text></g><g><title>sk-gen`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (807 samples, 1.32%)</title><rect x="95.2830%" y="1189" width="1.3194%" height="15" fill="rgb(251,190,50)" fg:x="58277" fg:w="807"/><text x="95.5330%" y="1199.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (390 samples, 0.64%)</title><rect x="95.9648%" y="1173" width="0.6377%" height="15" fill="rgb(208,203,29)" fg:x="58694" fg:w="390"/><text x="96.2148%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.01%)</title><rect x="97.0930%" y="1173" width="0.0114%" height="15" fill="rgb(207,209,35)" fg:x="59384" fg:w="7"/><text x="97.3430%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.02%)</title><rect x="97.0881%" y="1189" width="0.0245%" height="15" fill="rgb(230,144,49)" fg:x="59381" fg:w="15"/><text x="97.3381%" y="1199.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (140 samples, 0.23%)</title><rect x="97.1142%" y="1189" width="0.2289%" height="15" fill="rgb(229,31,6)" fg:x="59397" fg:w="140"/><text x="97.3642%" y="1199.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::ch::CH&lt;N,E,H&gt;::core_graph_with_progress (20,080 samples, 32.83%)</title><rect x="65.2153%" y="1237" width="32.8308%" height="15" fill="rgb(251,129,24)" fg:x="39887" fg:w="20080"/><text x="65.4653%" y="1247.50">sk-gen`sk_gen::contraction_hierarchies::ch::CH&lt;N,E,H&gt;..</text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::ch::CH&lt;N,E,H&gt;::g_distance (8,085 samples, 13.22%)</title><rect x="84.8272%" y="1221" width="13.2190%" height="15" fill="rgb(235,105,15)" fg:x="51882" fg:w="8085"/><text x="85.0772%" y="1231.50">sk-gen`sk_gen::contr..</text></g><g><title>sk-gen`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (883 samples, 1.44%)</title><rect x="96.6025%" y="1205" width="1.4437%" height="15" fill="rgb(216,52,43)" fg:x="59084" fg:w="883"/><text x="96.8525%" y="1215.50"></text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (430 samples, 0.70%)</title><rect x="97.3431%" y="1189" width="0.7031%" height="15" fill="rgb(238,144,41)" fg:x="59537" fg:w="430"/><text x="97.5931%" y="1199.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (19 samples, 0.03%)</title><rect x="98.1770%" y="1077" width="0.0311%" height="15" fill="rgb(243,63,9)" fg:x="60047" fg:w="19"/><text x="98.4270%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17 samples, 0.03%)</title><rect x="98.1802%" y="1061" width="0.0278%" height="15" fill="rgb(246,208,1)" fg:x="60049" fg:w="17"/><text x="98.4302%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 0.02%)</title><rect x="98.2080%" y="1077" width="0.0229%" height="15" fill="rgb(233,182,18)" fg:x="60066" fg:w="14"/><text x="98.4580%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (51 samples, 0.08%)</title><rect x="98.1557%" y="1093" width="0.0834%" height="15" fill="rgb(242,224,8)" fg:x="60034" fg:w="51"/><text x="98.4057%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (52 samples, 0.09%)</title><rect x="98.1557%" y="1109" width="0.0850%" height="15" fill="rgb(243,54,37)" fg:x="60034" fg:w="52"/><text x="98.4057%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (89 samples, 0.15%)</title><rect x="98.1034%" y="1141" width="0.1455%" height="15" fill="rgb(233,192,12)" fg:x="60002" fg:w="89"/><text x="98.3534%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (76 samples, 0.12%)</title><rect x="98.1247%" y="1125" width="0.1243%" height="15" fill="rgb(251,192,53)" fg:x="60015" fg:w="76"/><text x="98.3747%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (97 samples, 0.16%)</title><rect x="98.0920%" y="1157" width="0.1586%" height="15" fill="rgb(246,141,26)" fg:x="59995" fg:w="97"/><text x="98.3420%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (113 samples, 0.18%)</title><rect x="98.0740%" y="1173" width="0.1848%" height="15" fill="rgb(239,195,19)" fg:x="59984" fg:w="113"/><text x="98.3240%" y="1183.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (130 samples, 0.21%)</title><rect x="98.0478%" y="1221" width="0.2126%" height="15" fill="rgb(241,16,39)" fg:x="59968" fg:w="130"/><text x="98.2978%" y="1231.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (130 samples, 0.21%)</title><rect x="98.0478%" y="1205" width="0.2126%" height="15" fill="rgb(223,13,53)" fg:x="59968" fg:w="130"/><text x="98.2978%" y="1215.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (116 samples, 0.19%)</title><rect x="98.0707%" y="1189" width="0.1897%" height="15" fill="rgb(214,227,0)" fg:x="59982" fg:w="116"/><text x="98.3207%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="98.3012%" y="1157" width="0.0131%" height="15" fill="rgb(228,103,26)" fg:x="60123" fg:w="8"/><text x="98.5512%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="98.4337%" y="1109" width="0.0147%" height="15" fill="rgb(254,177,53)" fg:x="60204" fg:w="9"/><text x="98.6837%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="98.5285%" y="1045" width="0.0229%" height="15" fill="rgb(208,201,34)" fg:x="60262" fg:w="14"/><text x="98.7785%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (13 samples, 0.02%)</title><rect x="98.5301%" y="1029" width="0.0213%" height="15" fill="rgb(212,39,5)" fg:x="60263" fg:w="13"/><text x="98.7801%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.01%)</title><rect x="98.5399%" y="1013" width="0.0114%" height="15" fill="rgb(246,117,3)" fg:x="60269" fg:w="7"/><text x="98.7899%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (41 samples, 0.07%)</title><rect x="98.4909%" y="1061" width="0.0670%" height="15" fill="rgb(244,118,39)" fg:x="60239" fg:w="41"/><text x="98.7409%" y="1071.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (47 samples, 0.08%)</title><rect x="98.4844%" y="1077" width="0.0768%" height="15" fill="rgb(241,64,10)" fg:x="60235" fg:w="47"/><text x="98.7344%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.01%)</title><rect x="98.5759%" y="1061" width="0.0131%" height="15" fill="rgb(229,39,44)" fg:x="60291" fg:w="8"/><text x="98.8259%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (20 samples, 0.03%)</title><rect x="98.5612%" y="1077" width="0.0327%" height="15" fill="rgb(230,226,3)" fg:x="60282" fg:w="20"/><text x="98.8112%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="98.5939%" y="1077" width="0.0180%" height="15" fill="rgb(222,13,42)" fg:x="60302" fg:w="11"/><text x="98.8439%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="98.5955%" y="1061" width="0.0164%" height="15" fill="rgb(247,180,54)" fg:x="60303" fg:w="10"/><text x="98.8455%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (100 samples, 0.16%)</title><rect x="98.4517%" y="1093" width="0.1635%" height="15" fill="rgb(205,96,16)" fg:x="60215" fg:w="100"/><text x="98.7017%" y="1103.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (105 samples, 0.17%)</title><rect x="98.4484%" y="1109" width="0.1717%" height="15" fill="rgb(205,100,21)" fg:x="60213" fg:w="105"/><text x="98.6984%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.01%)</title><rect x="98.6201%" y="1109" width="0.0147%" height="15" fill="rgb(248,51,4)" fg:x="60318" fg:w="9"/><text x="98.8701%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="98.6348%" y="1109" width="0.0245%" height="15" fill="rgb(217,197,30)" fg:x="60327" fg:w="15"/><text x="98.8848%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.02%)</title><rect x="98.6429%" y="1093" width="0.0164%" height="15" fill="rgb(240,179,40)" fg:x="60332" fg:w="10"/><text x="98.8929%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (172 samples, 0.28%)</title><rect x="98.3813%" y="1125" width="0.2812%" height="15" fill="rgb(212,185,35)" fg:x="60172" fg:w="172"/><text x="98.6313%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (203 samples, 0.33%)</title><rect x="98.3405%" y="1141" width="0.3319%" height="15" fill="rgb(251,222,31)" fg:x="60147" fg:w="203"/><text x="98.5905%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (222 samples, 0.36%)</title><rect x="98.3159%" y="1157" width="0.3630%" height="15" fill="rgb(208,140,36)" fg:x="60132" fg:w="222"/><text x="98.5659%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="98.6789%" y="1157" width="0.0180%" height="15" fill="rgb(220,148,1)" fg:x="60354" fg:w="11"/><text x="98.9289%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11 samples, 0.02%)</title><rect x="98.6789%" y="1141" width="0.0180%" height="15" fill="rgb(254,4,28)" fg:x="60354" fg:w="11"/><text x="98.9289%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.01%)</title><rect x="98.6855%" y="1125" width="0.0114%" height="15" fill="rgb(222,185,44)" fg:x="60358" fg:w="7"/><text x="98.9355%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (258 samples, 0.42%)</title><rect x="98.2783%" y="1173" width="0.4218%" height="15" fill="rgb(215,74,39)" fg:x="60109" fg:w="258"/><text x="98.5283%" y="1183.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (273 samples, 0.45%)</title><rect x="98.2604%" y="1221" width="0.4464%" height="15" fill="rgb(247,86,4)" fg:x="60098" fg:w="273"/><text x="98.5104%" y="1231.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (273 samples, 0.45%)</title><rect x="98.2604%" y="1205" width="0.4464%" height="15" fill="rgb(231,105,32)" fg:x="60098" fg:w="273"/><text x="98.5104%" y="1215.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (267 samples, 0.44%)</title><rect x="98.2702%" y="1189" width="0.4365%" height="15" fill="rgb(222,65,35)" fg:x="60104" fg:w="267"/><text x="98.5202%" y="1199.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (14 samples, 0.02%)</title><rect x="98.7133%" y="1189" width="0.0229%" height="15" fill="rgb(218,145,35)" fg:x="60375" fg:w="14"/><text x="98.9633%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (9 samples, 0.01%)</title><rect x="98.7214%" y="1173" width="0.0147%" height="15" fill="rgb(208,7,15)" fg:x="60380" fg:w="9"/><text x="98.9714%" y="1183.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="98.7688%" y="1125" width="0.0147%" height="15" fill="rgb(209,83,13)" fg:x="60409" fg:w="9"/><text x="99.0188%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="98.7917%" y="1077" width="0.0114%" height="15" fill="rgb(218,3,10)" fg:x="60423" fg:w="7"/><text x="99.0417%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (10 samples, 0.02%)</title><rect x="98.8163%" y="1061" width="0.0164%" height="15" fill="rgb(211,219,4)" fg:x="60438" fg:w="10"/><text x="99.0663%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.01%)</title><rect x="98.8212%" y="1045" width="0.0114%" height="15" fill="rgb(228,194,12)" fg:x="60441" fg:w="7"/><text x="99.0712%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (29 samples, 0.05%)</title><rect x="98.7868%" y="1109" width="0.0474%" height="15" fill="rgb(210,175,7)" fg:x="60420" fg:w="29"/><text x="99.0368%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (26 samples, 0.04%)</title><rect x="98.7917%" y="1093" width="0.0425%" height="15" fill="rgb(243,132,6)" fg:x="60423" fg:w="26"/><text x="99.0417%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 0.02%)</title><rect x="98.8097%" y="1077" width="0.0245%" height="15" fill="rgb(207,72,18)" fg:x="60434" fg:w="15"/><text x="99.0597%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.13%)</title><rect x="98.7067%" y="1205" width="0.1292%" height="15" fill="rgb(236,1,18)" fg:x="60371" fg:w="79"/><text x="98.9567%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (61 samples, 0.10%)</title><rect x="98.7361%" y="1189" width="0.0997%" height="15" fill="rgb(227,0,18)" fg:x="60389" fg:w="61"/><text x="98.9861%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (58 samples, 0.09%)</title><rect x="98.7410%" y="1173" width="0.0948%" height="15" fill="rgb(247,37,5)" fg:x="60392" fg:w="58"/><text x="98.9910%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (55 samples, 0.09%)</title><rect x="98.7460%" y="1157" width="0.0899%" height="15" fill="rgb(237,179,24)" fg:x="60395" fg:w="55"/><text x="98.9960%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (46 samples, 0.08%)</title><rect x="98.7607%" y="1141" width="0.0752%" height="15" fill="rgb(226,53,20)" fg:x="60404" fg:w="46"/><text x="99.0107%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (32 samples, 0.05%)</title><rect x="98.7836%" y="1125" width="0.0523%" height="15" fill="rgb(247,75,7)" fg:x="60418" fg:w="32"/><text x="99.0336%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (11 samples, 0.02%)</title><rect x="98.8473%" y="1141" width="0.0180%" height="15" fill="rgb(233,96,12)" fg:x="60457" fg:w="11"/><text x="99.0973%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (11 samples, 0.02%)</title><rect x="98.8473%" y="1125" width="0.0180%" height="15" fill="rgb(224,125,0)" fg:x="60457" fg:w="11"/><text x="99.0973%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.05%)</title><rect x="98.8441%" y="1173" width="0.0540%" height="15" fill="rgb(224,92,25)" fg:x="60455" fg:w="33"/><text x="99.0941%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.05%)</title><rect x="98.8457%" y="1157" width="0.0523%" height="15" fill="rgb(224,42,24)" fg:x="60456" fg:w="32"/><text x="99.0957%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (18 samples, 0.03%)</title><rect x="98.8686%" y="1141" width="0.0294%" height="15" fill="rgb(234,132,49)" fg:x="60470" fg:w="18"/><text x="99.1186%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`madvise (18 samples, 0.03%)</title><rect x="98.8686%" y="1125" width="0.0294%" height="15" fill="rgb(248,100,35)" fg:x="60470" fg:w="18"/><text x="99.1186%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="98.9144%" y="1141" width="0.0196%" height="15" fill="rgb(239,94,40)" fg:x="60498" fg:w="12"/><text x="99.1644%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="98.9176%" y="1125" width="0.0164%" height="15" fill="rgb(235,139,28)" fg:x="60500" fg:w="10"/><text x="99.1676%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="98.9193%" y="1109" width="0.0147%" height="15" fill="rgb(217,144,7)" fg:x="60501" fg:w="9"/><text x="99.1693%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="98.9225%" y="1093" width="0.0114%" height="15" fill="rgb(227,55,4)" fg:x="60503" fg:w="7"/><text x="99.1725%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;kube_core::dynamic::DynamicObject&gt; (23 samples, 0.04%)</title><rect x="98.8996%" y="1173" width="0.0376%" height="15" fill="rgb(252,82,54)" fg:x="60489" fg:w="23"/><text x="99.1496%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (17 samples, 0.03%)</title><rect x="98.9095%" y="1157" width="0.0278%" height="15" fill="rgb(245,172,4)" fg:x="60495" fg:w="17"/><text x="99.1595%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="98.9814%" y="1109" width="0.0147%" height="15" fill="rgb(207,26,27)" fg:x="60539" fg:w="9"/><text x="99.2314%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="99.0026%" y="1093" width="0.0147%" height="15" fill="rgb(252,98,18)" fg:x="60552" fg:w="9"/><text x="99.2526%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="99.0304%" y="1077" width="0.0147%" height="15" fill="rgb(244,8,26)" fg:x="60569" fg:w="9"/><text x="99.2804%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.01%)</title><rect x="99.0304%" y="1061" width="0.0147%" height="15" fill="rgb(237,173,45)" fg:x="60569" fg:w="9"/><text x="99.2804%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="99.0288%" y="1093" width="0.0196%" height="15" fill="rgb(208,213,49)" fg:x="60568" fg:w="12"/><text x="99.2788%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="99.0893%" y="1045" width="0.0114%" height="15" fill="rgb(212,122,37)" fg:x="60605" fg:w="7"/><text x="99.3393%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="99.1138%" y="1045" width="0.0164%" height="15" fill="rgb(213,80,17)" fg:x="60620" fg:w="10"/><text x="99.3638%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="99.1155%" y="1029" width="0.0147%" height="15" fill="rgb(206,210,43)" fg:x="60621" fg:w="9"/><text x="99.3655%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="99.1187%" y="1013" width="0.0114%" height="15" fill="rgb(229,214,3)" fg:x="60623" fg:w="7"/><text x="99.3687%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="99.1400%" y="1013" width="0.0164%" height="15" fill="rgb(235,213,29)" fg:x="60636" fg:w="10"/><text x="99.3900%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="99.1433%" y="997" width="0.0131%" height="15" fill="rgb(248,135,26)" fg:x="60638" fg:w="8"/><text x="99.3933%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 samples, 0.02%)</title><rect x="99.1334%" y="1029" width="0.0245%" height="15" fill="rgb(242,188,12)" fg:x="60632" fg:w="15"/><text x="99.3834%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="99.1907%" y="981" width="0.0147%" height="15" fill="rgb(245,38,12)" fg:x="60667" fg:w="9"/><text x="99.4407%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="99.1939%" y="965" width="0.0114%" height="15" fill="rgb(218,42,13)" fg:x="60669" fg:w="7"/><text x="99.4439%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.02%)</title><rect x="99.1874%" y="997" width="0.0213%" height="15" fill="rgb(238,132,49)" fg:x="60665" fg:w="13"/><text x="99.4374%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (32 samples, 0.05%)</title><rect x="99.1580%" y="1029" width="0.0523%" height="15" fill="rgb(209,196,19)" fg:x="60647" fg:w="32"/><text x="99.4080%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (23 samples, 0.04%)</title><rect x="99.1727%" y="1013" width="0.0376%" height="15" fill="rgb(244,131,22)" fg:x="60656" fg:w="23"/><text x="99.4227%" y="1023.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::ch::CH&lt;N,E,H&gt;::new (716 samples, 1.17%)</title><rect x="98.0478%" y="1237" width="1.1707%" height="15" fill="rgb(223,18,34)" fg:x="59968" fg:w="716"/><text x="98.2978%" y="1247.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;sk_gen::Node,sk_gen::Edge&gt;&gt; (313 samples, 0.51%)</title><rect x="98.7067%" y="1221" width="0.5118%" height="15" fill="rgb(252,124,54)" fg:x="60371" fg:w="313"/><text x="98.9567%" y="1231.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (234 samples, 0.38%)</title><rect x="98.8359%" y="1205" width="0.3826%" height="15" fill="rgb(229,106,42)" fg:x="60450" fg:w="234"/><text x="99.0859%" y="1215.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;sk_store::TraceEvent&gt; (232 samples, 0.38%)</title><rect x="98.8391%" y="1189" width="0.3793%" height="15" fill="rgb(221,129,1)" fg:x="60452" fg:w="232"/><text x="99.0891%" y="1199.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (172 samples, 0.28%)</title><rect x="98.9372%" y="1173" width="0.2812%" height="15" fill="rgb(229,74,15)" fg:x="60512" fg:w="172"/><text x="99.1872%" y="1183.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (172 samples, 0.28%)</title><rect x="98.9372%" y="1157" width="0.2812%" height="15" fill="rgb(210,206,50)" fg:x="60512" fg:w="172"/><text x="99.1872%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (167 samples, 0.27%)</title><rect x="98.9454%" y="1141" width="0.2730%" height="15" fill="rgb(251,114,31)" fg:x="60517" fg:w="167"/><text x="99.1954%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (155 samples, 0.25%)</title><rect x="98.9650%" y="1125" width="0.2534%" height="15" fill="rgb(215,225,28)" fg:x="60529" fg:w="155"/><text x="99.2150%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (136 samples, 0.22%)</title><rect x="98.9961%" y="1109" width="0.2224%" height="15" fill="rgb(237,109,14)" fg:x="60548" fg:w="136"/><text x="99.2461%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (104 samples, 0.17%)</title><rect x="99.0484%" y="1093" width="0.1700%" height="15" fill="rgb(230,13,37)" fg:x="60580" fg:w="104"/><text x="99.2984%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (95 samples, 0.16%)</title><rect x="99.0631%" y="1077" width="0.1553%" height="15" fill="rgb(231,40,28)" fg:x="60589" fg:w="95"/><text x="99.3131%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (83 samples, 0.14%)</title><rect x="99.0828%" y="1061" width="0.1357%" height="15" fill="rgb(231,202,18)" fg:x="60601" fg:w="83"/><text x="99.3328%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (54 samples, 0.09%)</title><rect x="99.1302%" y="1045" width="0.0883%" height="15" fill="rgb(225,33,18)" fg:x="60630" fg:w="54"/><text x="99.3802%" y="1055.50"></text></g><g><title>sk-gen`metis::Graph::part_recursive (13 samples, 0.02%)</title><rect x="99.5504%" y="1221" width="0.0213%" height="15" fill="rgb(223,64,47)" fg:x="60887" fg:w="13"/><text x="99.8004%" y="1231.50"></text></g><g><title>sk-gen`METIS_PartGraphRecursive (13 samples, 0.02%)</title><rect x="99.5504%" y="1205" width="0.0213%" height="15" fill="rgb(234,114,13)" fg:x="60887" fg:w="13"/><text x="99.8004%" y="1215.50"></text></g><g><title>sk-gen`libmetis__MlevelRecursiveBisection (13 samples, 0.02%)</title><rect x="99.5504%" y="1189" width="0.0213%" height="15" fill="rgb(248,56,40)" fg:x="60887" fg:w="13"/><text x="99.8004%" y="1199.50"></text></g><g><title>sk-gen`libmetis__MultilevelBisect (12 samples, 0.02%)</title><rect x="99.5520%" y="1173" width="0.0196%" height="15" fill="rgb(221,194,21)" fg:x="60888" fg:w="12"/><text x="99.8020%" y="1183.50"></text></g><g><title>sk-gen`libmetis__Refine2Way (10 samples, 0.02%)</title><rect x="99.5553%" y="1157" width="0.0164%" height="15" fill="rgb(242,108,46)" fg:x="60890" fg:w="10"/><text x="99.8053%" y="1167.50"></text></g><g><title>sk-gen`metis::Graph::part_recursive (8 samples, 0.01%)</title><rect x="99.7204%" y="1205" width="0.0131%" height="15" fill="rgb(220,106,10)" fg:x="60991" fg:w="8"/><text x="99.9704%" y="1215.50"></text></g><g><title>sk-gen`METIS_PartGraphRecursive (8 samples, 0.01%)</title><rect x="99.7204%" y="1189" width="0.0131%" height="15" fill="rgb(211,88,4)" fg:x="60991" fg:w="8"/><text x="99.9704%" y="1199.50"></text></g><g><title>sk-gen`libmetis__MlevelRecursiveBisection (8 samples, 0.01%)</title><rect x="99.7204%" y="1173" width="0.0131%" height="15" fill="rgb(214,95,34)" fg:x="60991" fg:w="8"/><text x="99.9704%" y="1183.50"></text></g><g><title>sk-gen`libmetis__MultilevelBisect (8 samples, 0.01%)</title><rect x="99.7204%" y="1157" width="0.0131%" height="15" fill="rgb(250,160,33)" fg:x="60991" fg:w="8"/><text x="99.9704%" y="1167.50"></text></g><g><title>sk-gen`metis::Graph::part_recursive (21 samples, 0.03%)</title><rect x="99.9068%" y="1029" width="0.0343%" height="15" fill="rgb(225,29,10)" fg:x="61105" fg:w="21"/><text x="100.1568%" y="1039.50"></text></g><g><title>sk-gen`METIS_PartGraphRecursive (21 samples, 0.03%)</title><rect x="99.9068%" y="1013" width="0.0343%" height="15" fill="rgb(224,28,30)" fg:x="61105" fg:w="21"/><text x="100.1568%" y="1023.50"></text></g><g><title>sk-gen`libmetis__MlevelRecursiveBisection (11 samples, 0.02%)</title><rect x="99.9232%" y="997" width="0.0180%" height="15" fill="rgb(231,77,4)" fg:x="61115" fg:w="11"/><text x="100.1732%" y="1007.50"></text></g><g><title>sk-gen`libmetis__MultilevelBisect (10 samples, 0.02%)</title><rect x="99.9248%" y="981" width="0.0164%" height="15" fill="rgb(209,63,21)" fg:x="61116" fg:w="10"/><text x="100.1748%" y="991.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (446 samples, 0.73%)</title><rect x="99.2185%" y="1237" width="0.7292%" height="15" fill="rgb(226,22,11)" fg:x="60684" fg:w="446"/><text x="99.4685%" y="1247.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (230 samples, 0.38%)</title><rect x="99.5716%" y="1221" width="0.3761%" height="15" fill="rgb(216,82,30)" fg:x="60900" fg:w="230"/><text x="99.8216%" y="1231.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (131 samples, 0.21%)</title><rect x="99.7335%" y="1205" width="0.2142%" height="15" fill="rgb(246,227,38)" fg:x="60999" fg:w="131"/><text x="99.9835%" y="1215.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (89 samples, 0.15%)</title><rect x="99.8022%" y="1189" width="0.1455%" height="15" fill="rgb(251,203,53)" fg:x="61041" fg:w="89"/><text x="100.0522%" y="1199.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (68 samples, 0.11%)</title><rect x="99.8365%" y="1173" width="0.1112%" height="15" fill="rgb(254,101,1)" fg:x="61062" fg:w="68"/><text x="100.0865%" y="1183.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (55 samples, 0.09%)</title><rect x="99.8578%" y="1157" width="0.0899%" height="15" fill="rgb(241,180,5)" fg:x="61075" fg:w="55"/><text x="100.1078%" y="1167.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (49 samples, 0.08%)</title><rect x="99.8676%" y="1141" width="0.0801%" height="15" fill="rgb(218,168,4)" fg:x="61081" fg:w="49"/><text x="100.1176%" y="1151.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (45 samples, 0.07%)</title><rect x="99.8741%" y="1125" width="0.0736%" height="15" fill="rgb(224,223,32)" fg:x="61085" fg:w="45"/><text x="100.1241%" y="1135.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (42 samples, 0.07%)</title><rect x="99.8790%" y="1109" width="0.0687%" height="15" fill="rgb(236,106,22)" fg:x="61088" fg:w="42"/><text x="100.1290%" y="1119.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (38 samples, 0.06%)</title><rect x="99.8855%" y="1093" width="0.0621%" height="15" fill="rgb(206,121,5)" fg:x="61092" fg:w="38"/><text x="100.1355%" y="1103.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (35 samples, 0.06%)</title><rect x="99.8905%" y="1077" width="0.0572%" height="15" fill="rgb(233,87,28)" fg:x="61095" fg:w="35"/><text x="100.1405%" y="1087.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (30 samples, 0.05%)</title><rect x="99.8986%" y="1061" width="0.0491%" height="15" fill="rgb(236,137,17)" fg:x="61100" fg:w="30"/><text x="100.1486%" y="1071.50"></text></g><g><title>sk-gen`sk_gen::contraction_hierarchies::heuristic::HeuristicGraph&lt;N,E&gt;::generate_partition_tree (26 samples, 0.04%)</title><rect x="99.9052%" y="1045" width="0.0425%" height="15" fill="rgb(209,183,38)" fg:x="61104" fg:w="26"/><text x="100.1552%" y="1055.50"></text></g><g><title>dyld`start (61,133 samples, 99.95%)</title><rect x="0.0000%" y="1349" width="99.9526%" height="15" fill="rgb(206,162,44)" fg:x="0" fg:w="61133"/><text x="0.2500%" y="1359.50">dyld`start</text></g><g><title>sk-gen`main (61,132 samples, 99.95%)</title><rect x="0.0016%" y="1333" width="99.9509%" height="15" fill="rgb(237,70,39)" fg:x="1" fg:w="61132"/><text x="0.2516%" y="1343.50">sk-gen`main</text></g><g><title>sk-gen`std::rt::lang_start_internal (61,132 samples, 99.95%)</title><rect x="0.0016%" y="1317" width="99.9509%" height="15" fill="rgb(212,176,5)" fg:x="1" fg:w="61132"/><text x="0.2516%" y="1327.50">sk-gen`std::rt::lang_start_internal</text></g><g><title>sk-gen`std::rt::lang_start::_{{closure}} (61,132 samples, 99.95%)</title><rect x="0.0016%" y="1301" width="99.9509%" height="15" fill="rgb(232,95,16)" fg:x="1" fg:w="61132"/><text x="0.2516%" y="1311.50">sk-gen`std::rt::lang_start::_{{closure}}</text></g><g><title>sk-gen`std::sys::backtrace::__rust_begin_short_backtrace (61,132 samples, 99.95%)</title><rect x="0.0016%" y="1285" width="99.9509%" height="15" fill="rgb(219,115,35)" fg:x="1" fg:w="61132"/><text x="0.2516%" y="1295.50">sk-gen`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>sk-gen`sk_gen::main (61,131 samples, 99.95%)</title><rect x="0.0033%" y="1269" width="99.9493%" height="15" fill="rgb(251,67,27)" fg:x="2" fg:w="61131"/><text x="0.2533%" y="1279.50">sk-gen`sk_gen::main</text></g><g><title>sk-gen`sk_gen::Simulation::run (61,130 samples, 99.95%)</title><rect x="0.0049%" y="1253" width="99.9477%" height="15" fill="rgb(222,95,40)" fg:x="3" fg:w="61130"/><text x="0.2549%" y="1263.50">sk-gen`sk_gen::Simulation::run</text></g><g><title>all (61,162 samples, 100%)</title><rect x="0.0000%" y="1365" width="100.0000%" height="15" fill="rgb(250,35,16)" fg:x="0" fg:w="61162"/><text x="0.2500%" y="1375.50"></text></g><g><title>libsystem_kernel.dylib`__exit (29 samples, 0.05%)</title><rect x="99.9526%" y="1349" width="0.0474%" height="15" fill="rgb(224,86,44)" fg:x="61133" fg:w="29"/><text x="100.2026%" y="1359.50"></text></g></svg></svg>