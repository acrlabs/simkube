{
    "version": 2,
    "config": {
        "trackedObjects": {
            "apps/v1.Deployment": {
                "podSpecTemplatePath": "/spec/template"
            }
        }
    },
    "events": [
        {
            "ts": 1710892138,
            "applied_objs": [],
            "deleted_objs": []
        },
        {
            "ts": 1710892138,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-service"
                        },
                        "name": "user-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-service",
                                    "service": "user-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-service-config",
                                        "configMap": {
                                            "name": "user-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-service"
                        },
                        "name": "media-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-service",
                                    "service": "media-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-service-config",
                                        "configMap": {
                                            "name": "media-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "MediaService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-service"
                        },
                        "name": "home-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-service",
                                    "service": "home-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-service-config",
                                        "configMap": {
                                            "name": "home-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "HomeTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mongodb"
                        },
                        "name": "user-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mongodb",
                                    "service": "user-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mongodb-config",
                                        "configMap": {
                                            "name": "user-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mention-service"
                        },
                        "name": "user-mention-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mention-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mention-service",
                                    "service": "user-mention-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mention-service-config",
                                        "configMap": {
                                            "name": "user-mention-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mention-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserMentionService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mention-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "jaeger"
                        },
                        "name": "jaeger",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "jaeger"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "jaeger",
                                    "service": "jaeger"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "jaeger-config",
                                        "configMap": {
                                            "name": "jaeger",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "jaeger",
                                        "image": "docker.io/jaegertracing/all-in-one:latest",
                                        "ports": [
                                            {
                                                "containerPort": 5775,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6831,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6832,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 5778,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 16686,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 14268,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9411,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                                "value": "9411"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "jaeger",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-mongodb"
                        },
                        "name": "social-graph-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-mongodb",
                                    "service": "social-graph-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-mongodb-config",
                                        "configMap": {
                                            "name": "social-graph-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-service"
                        },
                        "name": "user-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-service",
                                    "service": "user-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-service-config",
                                        "configMap": {
                                            "name": "user-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-frontend"
                        },
                        "name": "media-frontend",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-frontend"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-frontend",
                                    "service": "media-frontend"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-frontend-config",
                                        "configMap": {
                                            "name": "media-frontend",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/media-frontend/lua-scripts/* /lua-scripts/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-frontend",
                                        "image": "docker.io/yg397/media-frontend:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8081,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-frontend",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-mongodb"
                        },
                        "name": "user-timeline-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-mongodb",
                                    "service": "user-timeline-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-mongodb-config",
                                        "configMap": {
                                            "name": "user-timeline-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-mongodb"
                        },
                        "name": "media-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-mongodb",
                                    "service": "media-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-mongodb-config",
                                        "configMap": {
                                            "name": "media-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "unique-id-service"
                        },
                        "name": "unique-id-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "unique-id-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "unique-id-service",
                                    "service": "unique-id-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "unique-id-service-config",
                                        "configMap": {
                                            "name": "unique-id-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "unique-id-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UniqueIdService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "unique-id-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-redis"
                        },
                        "name": "user-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-redis",
                                    "service": "user-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-redis-config",
                                        "configMap": {
                                            "name": "user-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-mongodb"
                        },
                        "name": "post-storage-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-mongodb",
                                    "service": "post-storage-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-mongodb-config",
                                        "configMap": {
                                            "name": "post-storage-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-memcached"
                        },
                        "name": "user-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-memcached",
                                    "service": "user-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-memcached-config",
                                        "configMap": {
                                            "name": "user-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "text-service"
                        },
                        "name": "text-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "text-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "text-service",
                                    "service": "text-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "text-service-config",
                                        "configMap": {
                                            "name": "text-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "text-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "TextService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "text-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-mongodb"
                        },
                        "name": "url-shorten-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-mongodb",
                                    "service": "url-shorten-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-mongodb-config",
                                        "configMap": {
                                            "name": "url-shorten-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-service"
                        },
                        "name": "social-graph-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-service",
                                    "service": "social-graph-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-service-config",
                                        "configMap": {
                                            "name": "social-graph-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "SocialGraphService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-service"
                        },
                        "name": "url-shorten-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-service",
                                    "service": "url-shorten-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-service-config",
                                        "configMap": {
                                            "name": "url-shorten-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UrlShortenService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-memcached"
                        },
                        "name": "url-shorten-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-memcached",
                                    "service": "url-shorten-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-memcached-config",
                                        "configMap": {
                                            "name": "url-shorten-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-redis"
                        },
                        "name": "home-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-redis",
                                    "service": "home-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-redis-config",
                                        "configMap": {
                                            "name": "home-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-memcached"
                        },
                        "name": "media-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-memcached",
                                    "service": "media-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-memcached-config",
                                        "configMap": {
                                            "name": "media-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-redis"
                        },
                        "name": "social-graph-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-redis",
                                    "service": "social-graph-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-redis-config",
                                        "configMap": {
                                            "name": "social-graph-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-memcached"
                        },
                        "name": "post-storage-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-memcached",
                                    "service": "post-storage-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-memcached-config",
                                        "configMap": {
                                            "name": "post-storage-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-service"
                        },
                        "name": "post-storage-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-service",
                                    "service": "post-storage-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-service-config",
                                        "configMap": {
                                            "name": "post-storage-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "PostStorageService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892561,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-service"
                        },
                        "name": "social-graph-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-service",
                                    "service": "social-graph-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-service-config",
                                        "configMap": {
                                            "name": "social-graph-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "SocialGraphService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:03Z",
                                "lastTransitionTime": "2024-03-19T23:49:03Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:03Z",
                                "lastTransitionTime": "2024-03-19T23:49:00Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"social-graph-service-5c8c6fd9dc\" has successfully progressed."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892686,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-service"
                        },
                        "name": "url-shorten-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-service",
                                    "service": "url-shorten-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-service-config",
                                        "configMap": {
                                            "name": "url-shorten-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UrlShortenService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:03Z",
                                "lastTransitionTime": "2024-03-19T23:49:03Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:03Z",
                                "lastTransitionTime": "2024-03-19T23:49:00Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"url-shorten-service-6d677b7868\" has successfully progressed."
                            }
                        ]
                    }
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 4,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:49:02Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            }
                        ]
                    }
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-service"
                        },
                        "name": "home-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-service",
                                    "service": "home-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-service-config",
                                        "configMap": {
                                            "name": "home-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "HomeTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:49:02Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"home-timeline-service-85799bcbf8\" has successfully progressed."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892689,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-service"
                        },
                        "name": "user-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-service",
                                    "service": "user-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-service-config",
                                        "configMap": {
                                            "name": "user-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:01Z",
                                "lastTransitionTime": "2024-03-19T23:49:01Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:01Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"user-timeline-service-6f5f7b8c5d\" has successfully progressed."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892691,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "text-service"
                        },
                        "name": "text-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "service": "text-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "text-service",
                                    "service": "text-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "text-service-config",
                                        "configMap": {
                                            "name": "text-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "text-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "TextService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "text-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:49:02Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:49:00Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"text-service-84dc55fcd7\" has successfully progressed."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892694,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-service"
                        },
                        "name": "user-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-service",
                                    "service": "user-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-service-config",
                                        "configMap": {
                                            "name": "user-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-service"
                        },
                        "name": "media-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-service",
                                    "service": "media-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-service-config",
                                        "configMap": {
                                            "name": "media-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "MediaService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-service"
                        },
                        "name": "home-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-service",
                                    "service": "home-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-service-config",
                                        "configMap": {
                                            "name": "home-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "HomeTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mongodb"
                        },
                        "name": "user-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mongodb",
                                    "service": "user-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mongodb-config",
                                        "configMap": {
                                            "name": "user-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mention-service"
                        },
                        "name": "user-mention-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mention-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mention-service",
                                    "service": "user-mention-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mention-service-config",
                                        "configMap": {
                                            "name": "user-mention-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mention-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserMentionService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mention-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "jaeger"
                        },
                        "name": "jaeger",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "jaeger"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "jaeger",
                                    "service": "jaeger"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "jaeger-config",
                                        "configMap": {
                                            "name": "jaeger",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "jaeger",
                                        "image": "docker.io/jaegertracing/all-in-one:latest",
                                        "ports": [
                                            {
                                                "containerPort": 5775,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6831,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6832,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 5778,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 16686,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 14268,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9411,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                                "value": "9411"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "jaeger",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-mongodb"
                        },
                        "name": "social-graph-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-mongodb",
                                    "service": "social-graph-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-mongodb-config",
                                        "configMap": {
                                            "name": "social-graph-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-service"
                        },
                        "name": "user-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-service",
                                    "service": "user-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-service-config",
                                        "configMap": {
                                            "name": "user-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-frontend"
                        },
                        "name": "media-frontend",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-frontend"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-frontend",
                                    "service": "media-frontend"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-frontend-config",
                                        "configMap": {
                                            "name": "media-frontend",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/media-frontend/lua-scripts/* /lua-scripts/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-frontend",
                                        "image": "docker.io/yg397/media-frontend:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8081,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-frontend",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-mongodb"
                        },
                        "name": "user-timeline-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-mongodb",
                                    "service": "user-timeline-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-mongodb-config",
                                        "configMap": {
                                            "name": "user-timeline-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-mongodb"
                        },
                        "name": "media-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-mongodb",
                                    "service": "media-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-mongodb-config",
                                        "configMap": {
                                            "name": "media-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "unique-id-service"
                        },
                        "name": "unique-id-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "unique-id-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "unique-id-service",
                                    "service": "unique-id-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "unique-id-service-config",
                                        "configMap": {
                                            "name": "unique-id-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "unique-id-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UniqueIdService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "unique-id-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-redis"
                        },
                        "name": "user-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-redis",
                                    "service": "user-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-redis-config",
                                        "configMap": {
                                            "name": "user-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-mongodb"
                        },
                        "name": "post-storage-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-mongodb",
                                    "service": "post-storage-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-mongodb-config",
                                        "configMap": {
                                            "name": "post-storage-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-memcached"
                        },
                        "name": "user-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-memcached",
                                    "service": "user-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-memcached-config",
                                        "configMap": {
                                            "name": "user-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "text-service"
                        },
                        "name": "text-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "text-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "text-service",
                                    "service": "text-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "text-service-config",
                                        "configMap": {
                                            "name": "text-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "text-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "TextService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "text-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-mongodb"
                        },
                        "name": "url-shorten-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-mongodb",
                                    "service": "url-shorten-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-mongodb-config",
                                        "configMap": {
                                            "name": "url-shorten-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-service"
                        },
                        "name": "social-graph-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-service",
                                    "service": "social-graph-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-service-config",
                                        "configMap": {
                                            "name": "social-graph-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "SocialGraphService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-service"
                        },
                        "name": "url-shorten-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-service",
                                    "service": "url-shorten-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-service-config",
                                        "configMap": {
                                            "name": "url-shorten-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UrlShortenService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-memcached"
                        },
                        "name": "url-shorten-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-memcached",
                                    "service": "url-shorten-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-memcached-config",
                                        "configMap": {
                                            "name": "url-shorten-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-redis"
                        },
                        "name": "home-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-redis",
                                    "service": "home-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-redis-config",
                                        "configMap": {
                                            "name": "home-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-memcached"
                        },
                        "name": "media-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-memcached",
                                    "service": "media-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-memcached-config",
                                        "configMap": {
                                            "name": "media-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-redis"
                        },
                        "name": "social-graph-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-redis",
                                    "service": "social-graph-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-redis-config",
                                        "configMap": {
                                            "name": "social-graph-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-memcached"
                        },
                        "name": "post-storage-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-memcached",
                                    "service": "post-storage-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-memcached-config",
                                        "configMap": {
                                            "name": "post-storage-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-service"
                        },
                        "name": "post-storage-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-service",
                                    "service": "post-storage-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-service-config",
                                        "configMap": {
                                            "name": "post-storage-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "PostStorageService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-service"
                        },
                        "name": "user-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-service",
                                    "service": "user-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-service-config",
                                        "configMap": {
                                            "name": "user-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-service"
                        },
                        "name": "media-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-service",
                                    "service": "media-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-service-config",
                                        "configMap": {
                                            "name": "media-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "MediaService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-service"
                        },
                        "name": "home-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-service",
                                    "service": "home-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-service-config",
                                        "configMap": {
                                            "name": "home-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "HomeTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mongodb"
                        },
                        "name": "user-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mongodb",
                                    "service": "user-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mongodb-config",
                                        "configMap": {
                                            "name": "user-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mention-service"
                        },
                        "name": "user-mention-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mention-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mention-service",
                                    "service": "user-mention-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mention-service-config",
                                        "configMap": {
                                            "name": "user-mention-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mention-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserMentionService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mention-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "jaeger"
                        },
                        "name": "jaeger",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "jaeger"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "jaeger",
                                    "service": "jaeger"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "jaeger-config",
                                        "configMap": {
                                            "name": "jaeger",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "jaeger",
                                        "image": "docker.io/jaegertracing/all-in-one:latest",
                                        "ports": [
                                            {
                                                "containerPort": 5775,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6831,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6832,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 5778,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 16686,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 14268,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9411,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                                "value": "9411"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "jaeger",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-mongodb"
                        },
                        "name": "social-graph-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-mongodb",
                                    "service": "social-graph-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-mongodb-config",
                                        "configMap": {
                                            "name": "social-graph-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-service"
                        },
                        "name": "user-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-service",
                                    "service": "user-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-service-config",
                                        "configMap": {
                                            "name": "user-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-frontend"
                        },
                        "name": "media-frontend",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-frontend"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-frontend",
                                    "service": "media-frontend"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-frontend-config",
                                        "configMap": {
                                            "name": "media-frontend",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/media-frontend/lua-scripts/* /lua-scripts/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-frontend",
                                        "image": "docker.io/yg397/media-frontend:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8081,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-frontend",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-mongodb"
                        },
                        "name": "user-timeline-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-mongodb",
                                    "service": "user-timeline-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-mongodb-config",
                                        "configMap": {
                                            "name": "user-timeline-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-mongodb"
                        },
                        "name": "media-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-mongodb",
                                    "service": "media-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-mongodb-config",
                                        "configMap": {
                                            "name": "media-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "unique-id-service"
                        },
                        "name": "unique-id-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "unique-id-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "unique-id-service",
                                    "service": "unique-id-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "unique-id-service-config",
                                        "configMap": {
                                            "name": "unique-id-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "unique-id-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UniqueIdService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "unique-id-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-redis"
                        },
                        "name": "user-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-redis",
                                    "service": "user-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-redis-config",
                                        "configMap": {
                                            "name": "user-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-mongodb"
                        },
                        "name": "post-storage-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-mongodb",
                                    "service": "post-storage-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-mongodb-config",
                                        "configMap": {
                                            "name": "post-storage-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-memcached"
                        },
                        "name": "user-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-memcached",
                                    "service": "user-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-memcached-config",
                                        "configMap": {
                                            "name": "user-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "text-service"
                        },
                        "name": "text-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "text-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "text-service",
                                    "service": "text-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "text-service-config",
                                        "configMap": {
                                            "name": "text-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "text-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "TextService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "text-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-mongodb"
                        },
                        "name": "url-shorten-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-mongodb",
                                    "service": "url-shorten-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-mongodb-config",
                                        "configMap": {
                                            "name": "url-shorten-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-service"
                        },
                        "name": "social-graph-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-service",
                                    "service": "social-graph-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-service-config",
                                        "configMap": {
                                            "name": "social-graph-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "SocialGraphService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-service"
                        },
                        "name": "url-shorten-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-service",
                                    "service": "url-shorten-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-service-config",
                                        "configMap": {
                                            "name": "url-shorten-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UrlShortenService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-memcached"
                        },
                        "name": "url-shorten-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-memcached",
                                    "service": "url-shorten-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-memcached-config",
                                        "configMap": {
                                            "name": "url-shorten-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-redis"
                        },
                        "name": "home-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-redis",
                                    "service": "home-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-redis-config",
                                        "configMap": {
                                            "name": "home-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-memcached"
                        },
                        "name": "media-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-memcached",
                                    "service": "media-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-memcached-config",
                                        "configMap": {
                                            "name": "media-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-redis"
                        },
                        "name": "social-graph-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-redis",
                                    "service": "social-graph-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-redis-config",
                                        "configMap": {
                                            "name": "social-graph-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-memcached"
                        },
                        "name": "post-storage-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-memcached",
                                    "service": "post-storage-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-memcached-config",
                                        "configMap": {
                                            "name": "post-storage-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-service"
                        },
                        "name": "post-storage-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-service",
                                    "service": "post-storage-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-service-config",
                                        "configMap": {
                                            "name": "post-storage-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "PostStorageService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-service"
                        },
                        "name": "user-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-service",
                                    "service": "user-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-service-config",
                                        "configMap": {
                                            "name": "user-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-service"
                        },
                        "name": "media-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-service",
                                    "service": "media-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-service-config",
                                        "configMap": {
                                            "name": "media-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "MediaService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-service"
                        },
                        "name": "home-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-service",
                                    "service": "home-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-service-config",
                                        "configMap": {
                                            "name": "home-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "HomeTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mongodb"
                        },
                        "name": "user-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mongodb",
                                    "service": "user-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mongodb-config",
                                        "configMap": {
                                            "name": "user-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mention-service"
                        },
                        "name": "user-mention-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mention-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mention-service",
                                    "service": "user-mention-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mention-service-config",
                                        "configMap": {
                                            "name": "user-mention-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mention-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserMentionService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mention-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "jaeger"
                        },
                        "name": "jaeger",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "jaeger"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "jaeger",
                                    "service": "jaeger"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "jaeger-config",
                                        "configMap": {
                                            "name": "jaeger",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "jaeger",
                                        "image": "docker.io/jaegertracing/all-in-one:latest",
                                        "ports": [
                                            {
                                                "containerPort": 5775,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6831,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6832,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 5778,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 16686,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 14268,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9411,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                                "value": "9411"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "jaeger",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-mongodb"
                        },
                        "name": "social-graph-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-mongodb",
                                    "service": "social-graph-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-mongodb-config",
                                        "configMap": {
                                            "name": "social-graph-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-service"
                        },
                        "name": "user-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-service",
                                    "service": "user-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-service-config",
                                        "configMap": {
                                            "name": "user-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-frontend"
                        },
                        "name": "media-frontend",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-frontend"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-frontend",
                                    "service": "media-frontend"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-frontend-config",
                                        "configMap": {
                                            "name": "media-frontend",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/media-frontend/lua-scripts/* /lua-scripts/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-frontend",
                                        "image": "docker.io/yg397/media-frontend:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8081,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-frontend",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-mongodb"
                        },
                        "name": "user-timeline-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-mongodb",
                                    "service": "user-timeline-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-mongodb-config",
                                        "configMap": {
                                            "name": "user-timeline-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-mongodb"
                        },
                        "name": "media-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-mongodb",
                                    "service": "media-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-mongodb-config",
                                        "configMap": {
                                            "name": "media-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "unique-id-service"
                        },
                        "name": "unique-id-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "unique-id-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "unique-id-service",
                                    "service": "unique-id-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "unique-id-service-config",
                                        "configMap": {
                                            "name": "unique-id-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "unique-id-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UniqueIdService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "unique-id-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-redis"
                        },
                        "name": "user-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-redis",
                                    "service": "user-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-redis-config",
                                        "configMap": {
                                            "name": "user-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-mongodb"
                        },
                        "name": "post-storage-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-mongodb",
                                    "service": "post-storage-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-mongodb-config",
                                        "configMap": {
                                            "name": "post-storage-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-memcached"
                        },
                        "name": "user-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-memcached",
                                    "service": "user-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-memcached-config",
                                        "configMap": {
                                            "name": "user-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "text-service"
                        },
                        "name": "text-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "text-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "text-service",
                                    "service": "text-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "text-service-config",
                                        "configMap": {
                                            "name": "text-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "text-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "TextService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "text-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-mongodb"
                        },
                        "name": "url-shorten-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-mongodb",
                                    "service": "url-shorten-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-mongodb-config",
                                        "configMap": {
                                            "name": "url-shorten-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-service"
                        },
                        "name": "social-graph-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-service",
                                    "service": "social-graph-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-service-config",
                                        "configMap": {
                                            "name": "social-graph-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "SocialGraphService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-service"
                        },
                        "name": "url-shorten-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-service",
                                    "service": "url-shorten-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-service-config",
                                        "configMap": {
                                            "name": "url-shorten-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UrlShortenService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-memcached"
                        },
                        "name": "url-shorten-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-memcached",
                                    "service": "url-shorten-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-memcached-config",
                                        "configMap": {
                                            "name": "url-shorten-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-redis"
                        },
                        "name": "home-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-redis",
                                    "service": "home-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-redis-config",
                                        "configMap": {
                                            "name": "home-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-memcached"
                        },
                        "name": "media-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-memcached",
                                    "service": "media-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-memcached-config",
                                        "configMap": {
                                            "name": "media-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-redis"
                        },
                        "name": "social-graph-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-redis",
                                    "service": "social-graph-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-redis-config",
                                        "configMap": {
                                            "name": "social-graph-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-memcached"
                        },
                        "name": "post-storage-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-memcached",
                                    "service": "post-storage-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-memcached-config",
                                        "configMap": {
                                            "name": "post-storage-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-service"
                        },
                        "name": "post-storage-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-service",
                                    "service": "post-storage-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-service-config",
                                        "configMap": {
                                            "name": "post-storage-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "PostStorageService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-service"
                        },
                        "name": "user-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-service",
                                    "service": "user-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-service-config",
                                        "configMap": {
                                            "name": "user-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-service"
                        },
                        "name": "media-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-service",
                                    "service": "media-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-service-config",
                                        "configMap": {
                                            "name": "media-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "MediaService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-service"
                        },
                        "name": "home-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-service",
                                    "service": "home-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-service-config",
                                        "configMap": {
                                            "name": "home-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "HomeTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mongodb"
                        },
                        "name": "user-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mongodb",
                                    "service": "user-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mongodb-config",
                                        "configMap": {
                                            "name": "user-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mention-service"
                        },
                        "name": "user-mention-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mention-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mention-service",
                                    "service": "user-mention-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mention-service-config",
                                        "configMap": {
                                            "name": "user-mention-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mention-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserMentionService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mention-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "jaeger"
                        },
                        "name": "jaeger",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "jaeger"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "jaeger",
                                    "service": "jaeger"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "jaeger-config",
                                        "configMap": {
                                            "name": "jaeger",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "jaeger",
                                        "image": "docker.io/jaegertracing/all-in-one:latest",
                                        "ports": [
                                            {
                                                "containerPort": 5775,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6831,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6832,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 5778,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 16686,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 14268,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9411,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                                "value": "9411"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "jaeger",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-mongodb"
                        },
                        "name": "social-graph-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-mongodb",
                                    "service": "social-graph-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-mongodb-config",
                                        "configMap": {
                                            "name": "social-graph-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-service"
                        },
                        "name": "user-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-service",
                                    "service": "user-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-service-config",
                                        "configMap": {
                                            "name": "user-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-frontend"
                        },
                        "name": "media-frontend",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-frontend"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-frontend",
                                    "service": "media-frontend"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-frontend-config",
                                        "configMap": {
                                            "name": "media-frontend",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/media-frontend/lua-scripts/* /lua-scripts/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-frontend",
                                        "image": "docker.io/yg397/media-frontend:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8081,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-frontend",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-mongodb"
                        },
                        "name": "user-timeline-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-mongodb",
                                    "service": "user-timeline-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-mongodb-config",
                                        "configMap": {
                                            "name": "user-timeline-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-mongodb"
                        },
                        "name": "media-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-mongodb",
                                    "service": "media-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-mongodb-config",
                                        "configMap": {
                                            "name": "media-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "unique-id-service"
                        },
                        "name": "unique-id-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "unique-id-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "unique-id-service",
                                    "service": "unique-id-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "unique-id-service-config",
                                        "configMap": {
                                            "name": "unique-id-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "unique-id-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UniqueIdService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "unique-id-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-redis"
                        },
                        "name": "user-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-redis",
                                    "service": "user-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-redis-config",
                                        "configMap": {
                                            "name": "user-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-mongodb"
                        },
                        "name": "post-storage-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-mongodb",
                                    "service": "post-storage-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-mongodb-config",
                                        "configMap": {
                                            "name": "post-storage-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-memcached"
                        },
                        "name": "user-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-memcached",
                                    "service": "user-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-memcached-config",
                                        "configMap": {
                                            "name": "user-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "text-service"
                        },
                        "name": "text-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "text-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "text-service",
                                    "service": "text-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "text-service-config",
                                        "configMap": {
                                            "name": "text-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "text-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "TextService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "text-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-mongodb"
                        },
                        "name": "url-shorten-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-mongodb",
                                    "service": "url-shorten-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-mongodb-config",
                                        "configMap": {
                                            "name": "url-shorten-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-service"
                        },
                        "name": "social-graph-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-service",
                                    "service": "social-graph-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-service-config",
                                        "configMap": {
                                            "name": "social-graph-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "SocialGraphService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-service"
                        },
                        "name": "url-shorten-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-service",
                                    "service": "url-shorten-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-service-config",
                                        "configMap": {
                                            "name": "url-shorten-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UrlShortenService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-memcached"
                        },
                        "name": "url-shorten-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-memcached",
                                    "service": "url-shorten-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-memcached-config",
                                        "configMap": {
                                            "name": "url-shorten-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-redis"
                        },
                        "name": "home-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-redis",
                                    "service": "home-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-redis-config",
                                        "configMap": {
                                            "name": "home-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-memcached"
                        },
                        "name": "media-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-memcached",
                                    "service": "media-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-memcached-config",
                                        "configMap": {
                                            "name": "media-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-redis"
                        },
                        "name": "social-graph-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-redis",
                                    "service": "social-graph-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-redis-config",
                                        "configMap": {
                                            "name": "social-graph-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-memcached"
                        },
                        "name": "post-storage-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-memcached",
                                    "service": "post-storage-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-memcached-config",
                                        "configMap": {
                                            "name": "post-storage-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-service"
                        },
                        "name": "post-storage-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-service",
                                    "service": "post-storage-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-service-config",
                                        "configMap": {
                                            "name": "post-storage-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "PostStorageService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:10Z",
                                "lastTransitionTime": "2024-03-19T23:49:10Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:10Z",
                                "lastTransitionTime": "2024-03-19T23:49:01Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"nginx-thrift-6d87b5777c\" has successfully progressed."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892701,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 6,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 4,
                        "updatedReplicas": 4,
                        "readyReplicas": 2,
                        "availableReplicas": 2,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892721,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "text-service"
                        },
                        "name": "text-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 5,
                        "selector": {
                            "matchLabels": {
                                "service": "text-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "text-service",
                                    "service": "text-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "text-service-config",
                                        "configMap": {
                                            "name": "text-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "text-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "TextService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "text-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 3,
                        "updatedReplicas": 3,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:49:00Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"text-service-84dc55fcd7\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:11Z",
                                "lastTransitionTime": "2024-03-19T23:58:11Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892906,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-service"
                        },
                        "name": "social-graph-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-service",
                                    "service": "social-graph-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-service-config",
                                        "configMap": {
                                            "name": "social-graph-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "SocialGraphService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 3,
                        "updatedReplicas": 3,
                        "readyReplicas": 3,
                        "availableReplicas": 3,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:03Z",
                                "lastTransitionTime": "2024-03-19T23:49:00Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"social-graph-service-5c8c6fd9dc\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:56:02Z",
                                "lastTransitionTime": "2024-03-19T23:56:02Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892927,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-service"
                        },
                        "name": "post-storage-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-service",
                                    "service": "post-storage-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-service-config",
                                        "configMap": {
                                            "name": "post-storage-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "PostStorageService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:04Z",
                                "lastTransitionTime": "2024-03-19T23:49:04Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:04Z",
                                "lastTransitionTime": "2024-03-19T23:49:01Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"post-storage-service-5685dffb9\" has successfully progressed."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892935,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 4,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 2,
                        "updatedReplicas": 2,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "unavailableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:10Z",
                                "lastTransitionTime": "2024-03-19T23:49:01Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"nginx-thrift-6d87b5777c\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:14Z",
                                "lastTransitionTime": "2024-03-19T23:58:14Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892950,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 8,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 4,
                        "updatedReplicas": 4,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "unavailableReplicas": 3,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:10Z",
                                "lastTransitionTime": "2024-03-19T23:49:01Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"nginx-thrift-6d87b5777c\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:14Z",
                                "lastTransitionTime": "2024-03-19T23:58:14Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892957,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-service"
                        },
                        "name": "post-storage-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 5,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-service",
                                    "service": "post-storage-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-service-config",
                                        "configMap": {
                                            "name": "post-storage-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "PostStorageService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 3,
                        "updatedReplicas": 3,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:04Z",
                                "lastTransitionTime": "2024-03-19T23:49:01Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"post-storage-service-5685dffb9\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-20T00:02:07Z",
                                "lastTransitionTime": "2024-03-20T00:02:07Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710892965,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 10,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 4,
                        "replicas": 8,
                        "updatedReplicas": 8,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "unavailableReplicas": 7,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:10Z",
                                "lastTransitionTime": "2024-03-19T23:49:01Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"nginx-thrift-6d87b5777c\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:14Z",
                                "lastTransitionTime": "2024-03-19T23:58:14Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893091,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-service"
                        },
                        "name": "url-shorten-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-service",
                                    "service": "url-shorten-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-service-config",
                                        "configMap": {
                                            "name": "url-shorten-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UrlShortenService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 2,
                        "updatedReplicas": 2,
                        "readyReplicas": 2,
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:03Z",
                                "lastTransitionTime": "2024-03-19T23:49:00Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"url-shorten-service-6d677b7868\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:58:07Z",
                                "lastTransitionTime": "2024-03-19T23:58:07Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893124,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-service"
                        },
                        "name": "user-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-service",
                                    "service": "user-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-service-config",
                                        "configMap": {
                                            "name": "user-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 2,
                        "updatedReplicas": 2,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "unavailableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:01Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"user-timeline-service-6f5f7b8c5d\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:09Z",
                                "lastTransitionTime": "2024-03-19T23:58:09Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893126,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "text-service"
                        },
                        "name": "text-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "text-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "text-service",
                                    "service": "text-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "text-service-config",
                                        "configMap": {
                                            "name": "text-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "text-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "TextService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "text-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 5,
                        "updatedReplicas": 5,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "unavailableReplicas": 4,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:49:00Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"text-service-84dc55fcd7\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:11Z",
                                "lastTransitionTime": "2024-03-19T23:58:11Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893138,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893273,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893274,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893275,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893276,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893276,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893277,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893278,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893279,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893280,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893281,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893282,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893283,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893284,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893285,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893286,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893287,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893288,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893288,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893289,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893290,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893291,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893292,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893293,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893294,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893295,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893295,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893296,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893297,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893298,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893299,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893300,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893301,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893302,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893303,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893304,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893305,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893306,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893307,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893308,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893309,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893310,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893311,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893312,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893313,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893314,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893315,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893316,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893317,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893318,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893319,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893320,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893321,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893322,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893323,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893324,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893325,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893326,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893327,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893328,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893329,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893330,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893331,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893332,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893333,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893334,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893335,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893336,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893337,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 6,
                        "updatedReplicas": 6,
                        "readyReplicas": 4,
                        "availableReplicas": 4,
                        "unavailableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"compose-post-service-84d56c9dcb\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "False",
                                "lastUpdateTime": "2024-03-19T23:58:06Z",
                                "lastTransitionTime": "2024-03-19T23:58:06Z",
                                "reason": "MinimumReplicasUnavailable",
                                "message": "Deployment does not have minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893402,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-service"
                        },
                        "name": "home-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-service",
                                    "service": "home-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-service-config",
                                        "configMap": {
                                            "name": "home-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "HomeTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 2,
                        "updatedReplicas": 2,
                        "readyReplicas": 2,
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2024-03-19T23:49:02Z",
                                "lastTransitionTime": "2024-03-19T23:48:58Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"home-timeline-service-85799bcbf8\" has successfully progressed."
                            },
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2024-03-20T00:02:18Z",
                                "lastTransitionTime": "2024-03-20T00:02:18Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            }
                        ]
                    }
                }
            ],
            "deleted_objs": []
        },
        {
            "ts": 1710893403,
            "applied_objs": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-service"
                        },
                        "name": "user-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-service",
                                    "service": "user-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-service-config",
                                        "configMap": {
                                            "name": "user-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-service"
                        },
                        "name": "media-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-service",
                                    "service": "media-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-service-config",
                                        "configMap": {
                                            "name": "media-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "MediaService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-service"
                        },
                        "name": "home-timeline-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-service",
                                    "service": "home-timeline-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-service-config",
                                        "configMap": {
                                            "name": "home-timeline-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "HomeTimelineService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "home-timeline-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mongodb"
                        },
                        "name": "user-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mongodb",
                                    "service": "user-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mongodb-config",
                                        "configMap": {
                                            "name": "user-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-mention-service"
                        },
                        "name": "user-mention-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-mention-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-mention-service",
                                    "service": "user-mention-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-mention-service-config",
                                        "configMap": {
                                            "name": "user-mention-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-mention-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserMentionService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-mention-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-mention-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "jaeger"
                        },
                        "name": "jaeger",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "jaeger"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "jaeger",
                                    "service": "jaeger"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "jaeger-config",
                                        "configMap": {
                                            "name": "jaeger",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "jaeger",
                                        "image": "docker.io/jaegertracing/all-in-one:latest",
                                        "ports": [
                                            {
                                                "containerPort": 5775,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6831,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 6832,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 5778,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 16686,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 14268,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9411,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                                "value": "9411"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "jaeger-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "jaeger",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "compose-post-service"
                        },
                        "name": "compose-post-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "compose-post-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "compose-post-service",
                                    "service": "compose-post-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "compose-post-service-config",
                                        "configMap": {
                                            "name": "compose-post-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "compose-post-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "ComposePostService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "compose-post-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "compose-post-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-mongodb"
                        },
                        "name": "social-graph-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-mongodb",
                                    "service": "social-graph-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-mongodb-config",
                                        "configMap": {
                                            "name": "social-graph-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-service"
                        },
                        "name": "user-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-service",
                                    "service": "user-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-service-config",
                                        "configMap": {
                                            "name": "user-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UserService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-frontend"
                        },
                        "name": "media-frontend",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-frontend"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-frontend",
                                    "service": "media-frontend"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-frontend-config",
                                        "configMap": {
                                            "name": "media-frontend",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/media-frontend/lua-scripts/* /lua-scripts/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-frontend",
                                        "image": "docker.io/yg397/media-frontend:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8081,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-frontend-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-frontend",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-mongodb"
                        },
                        "name": "user-timeline-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-mongodb",
                                    "service": "user-timeline-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-mongodb-config",
                                        "configMap": {
                                            "name": "user-timeline-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-mongodb"
                        },
                        "name": "media-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-mongodb",
                                    "service": "media-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-mongodb-config",
                                        "configMap": {
                                            "name": "media-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "unique-id-service"
                        },
                        "name": "unique-id-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "unique-id-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "unique-id-service",
                                    "service": "unique-id-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "unique-id-service-config",
                                        "configMap": {
                                            "name": "unique-id-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "unique-id-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UniqueIdService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "unique-id-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "unique-id-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-timeline-redis"
                        },
                        "name": "user-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-timeline-redis",
                                    "service": "user-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-timeline-redis-config",
                                        "configMap": {
                                            "name": "user-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-mongodb"
                        },
                        "name": "post-storage-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-mongodb",
                                    "service": "post-storage-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-mongodb-config",
                                        "configMap": {
                                            "name": "post-storage-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "user-memcached"
                        },
                        "name": "user-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "user-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "user-memcached",
                                    "service": "user-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "user-memcached-config",
                                        "configMap": {
                                            "name": "user-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "user-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "user-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "user-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "text-service"
                        },
                        "name": "text-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "text-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "text-service",
                                    "service": "text-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "text-service-config",
                                        "configMap": {
                                            "name": "text-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "text-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "TextService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "text-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "text-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-mongodb"
                        },
                        "name": "url-shorten-mongodb",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-mongodb"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-mongodb",
                                    "service": "url-shorten-mongodb"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-mongodb-config",
                                        "configMap": {
                                            "name": "url-shorten-mongodb",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-mongodb",
                                        "image": "docker.io/library/mongo:4.4.6",
                                        "args": [
                                            "--config",
                                            "/social-network-microservices/config/mongod.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 27017,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-mongodb-config",
                                                "mountPath": "/social-network-microservices/config/mongod.conf",
                                                "subPath": "mongod.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-mongodb",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-service"
                        },
                        "name": "social-graph-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-service",
                                    "service": "social-graph-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-service-config",
                                        "configMap": {
                                            "name": "social-graph-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "SocialGraphService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "social-graph-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-service"
                        },
                        "name": "url-shorten-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-service",
                                    "service": "url-shorten-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-service-config",
                                        "configMap": {
                                            "name": "url-shorten-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "UrlShortenService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "url-shorten-memcached"
                        },
                        "name": "url-shorten-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "url-shorten-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "url-shorten-memcached",
                                    "service": "url-shorten-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "url-shorten-memcached-config",
                                        "configMap": {
                                            "name": "url-shorten-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "url-shorten-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "url-shorten-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "url-shorten-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "home-timeline-redis"
                        },
                        "name": "home-timeline-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "home-timeline-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "home-timeline-redis",
                                    "service": "home-timeline-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "home-timeline-redis-config",
                                        "configMap": {
                                            "name": "home-timeline-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "home-timeline-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "home-timeline-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "home-timeline-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "media-memcached"
                        },
                        "name": "media-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "media-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "media-memcached",
                                    "service": "media-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "media-memcached-config",
                                        "configMap": {
                                            "name": "media-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "media-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "media-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "media-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "social-graph-redis"
                        },
                        "name": "social-graph-redis",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "social-graph-redis"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "social-graph-redis",
                                    "service": "social-graph-redis"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "social-graph-redis-config",
                                        "configMap": {
                                            "name": "social-graph-redis",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "social-graph-redis",
                                        "image": "docker.io/library/redis:6.2.4",
                                        "args": [
                                            "/social-network-microservices/config/redis.conf"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 6379,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "social-graph-redis-config",
                                                "mountPath": "/social-network-microservices/config/redis.conf",
                                                "subPath": "redis.conf"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "social-graph-redis",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-memcached"
                        },
                        "name": "post-storage-memcached",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-memcached"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-memcached",
                                    "service": "post-storage-memcached"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-memcached-config",
                                        "configMap": {
                                            "name": "post-storage-memcached",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-memcached",
                                        "image": "docker.io/library/memcached:1.6.7",
                                        "ports": [
                                            {
                                                "containerPort": 11211,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-memcached-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-memcached",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "post-storage-service"
                        },
                        "name": "post-storage-service",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "post-storage-service"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "post-storage-service",
                                    "service": "post-storage-service"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "post-storage-service-config",
                                        "configMap": {
                                            "name": "post-storage-service",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "post-storage-service",
                                        "image": "docker.io/deathstarbench/social-network-microservices:latest",
                                        "command": [
                                            "PostStorageService"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/jaeger-config.yml",
                                                "subPath": "jaeger-config.yml"
                                            },
                                            {
                                                "name": "post-storage-service-config",
                                                "mountPath": "/social-network-microservices/config/service-config.json",
                                                "subPath": "service-config.json"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "post-storage-service",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                },
                {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "meta.helm.sh/release-name": "dsb-social-network",
                            "meta.helm.sh/release-namespace": "dsb"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "Helm",
                            "service": "nginx-thrift"
                        },
                        "name": "nginx-thrift",
                        "namespace": "dsb"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "service": "nginx-thrift"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "app": "nginx-thrift",
                                    "service": "nginx-thrift"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "nginx-thrift-config",
                                        "configMap": {
                                            "name": "nginx-thrift",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "lua-scripts",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "pages",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "gen-lua",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "lua-thrift",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "keys",
                                        "emptyDir": {}
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "alpine-container",
                                        "image": "docker.io/alpine/git:latest",
                                        "command": [
                                            "/bin/sh"
                                        ],
                                        "args": [
                                            "-c",
                                            "git clone https://github.com/delimitrou/DeathStarBench.git /DeathStarBench && cp -r /DeathStarBench/socialNetwork/gen-lua/* /gen-lua/ && cp -r /DeathStarBench/socialNetwork/docker/openresty-thrift/lua-thrift/* /lua-thrift/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/lua-scripts/* /lua-scripts/ && cp -r /DeathStarBench/socialNetwork/nginx-web-server/pages/* /pages/ && cp /DeathStarBench/socialNetwork/keys/* /keys/"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/lua-thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx-thrift",
                                        "image": "docker.io/yg397/openresty-thrift:xenial",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "fqdn_suffix",
                                                "value": ".dsb.svc.cluster.local"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "1Gi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/jaeger-config.json",
                                                "subPath": "jaeger-config.json"
                                            },
                                            {
                                                "name": "nginx-thrift-config",
                                                "mountPath": "/usr/local/openresty/nginx/conf/nginx.conf",
                                                "subPath": "nginx.conf"
                                            },
                                            {
                                                "name": "lua-scripts",
                                                "mountPath": "/usr/local/openresty/nginx/lua-scripts"
                                            },
                                            {
                                                "name": "lua-thrift",
                                                "mountPath": "/usr/local/openresty/lualib/thrift"
                                            },
                                            {
                                                "name": "pages",
                                                "mountPath": "/usr/local/openresty/nginx/pages"
                                            },
                                            {
                                                "name": "gen-lua",
                                                "mountPath": "/gen-lua"
                                            },
                                            {
                                                "name": "keys",
                                                "mountPath": "/keys"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "hostname": "nginx-thrift",
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {}
                }
            ],
            "deleted_objs": []
        }
    ],
    "index": {
        "apps/v1.Deployment": {
            "dsb/jaeger": 17146943970771433564,
            "dsb/user-timeline-service": 15858556048943196710,
            "dsb/social-graph-redis": 12158469555749306026,
            "dsb/nginx-thrift": 8615945982318756151,
            "dsb/compose-post-service": 10850747852008766550,
            "dsb/post-storage-mongodb": 7778541974297070137,
            "dsb/text-service": 9998312074885982535,
            "dsb/post-storage-service": 14312611903795797094,
            "dsb/user-timeline-redis": 10190065805547192910,
            "dsb/url-shorten-memcached": 14288845909204435286,
            "dsb/user-service": 15504870948845481110,
            "dsb/media-frontend": 7313711842011631658,
            "dsb/media-mongodb": 11819964129135742480,
            "dsb/url-shorten-service": 11233060487132515767,
            "dsb/home-timeline-service": 3881408507206153753,
            "dsb/home-timeline-redis": 14686845312534273304,
            "dsb/social-graph-service": 5457453258285373624,
            "dsb/user-mongodb": 4102046683051864152,
            "dsb/media-memcached": 5910380575206968127,
            "dsb/social-graph-mongodb": 4456994570448124250,
            "dsb/user-memcached": 16918237569911108211,
            "dsb/post-storage-memcached": 12092145826100651574,
            "dsb/unique-id-service": 15548754659508104991,
            "dsb/user-mention-service": 10545933738618722057,
            "dsb/user-timeline-mongodb": 12942061514904106755,
            "dsb/media-service": 1936906990887670479,
            "dsb/url-shorten-mongodb": 16304822808205355575
        }
    },
    "pod_lifecycles": {}
}
